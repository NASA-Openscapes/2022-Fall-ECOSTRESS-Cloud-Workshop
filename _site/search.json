[
  {
    "objectID": "tutorials/Earthdata_search.html",
    "href": "tutorials/Earthdata_search.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "This tutorial guides you through how to use Earthdata Search for NASA Earth observations search and discovery, and how to connect the search output (e.g. download or access links) to a programmatic workflow (locally or from within the cloud).\n\n\nGo to Earthdata Search https://search.earthdata.nasa.gov and use your Earthdata login credentials to log in. If you do not have an Earthdata account, please see the Workshop Prerequisites for guidance.\n\n\n\nUse the search box in the upper left to type key words. In this example we are interested in the ECOSTRESS LSTE which is managed by the LP DAAC and made available from the NASA Earthdata Cloud archive hosted in AWS cloud.\nType ECOSTRESS in the search bar Click on the “Available from AWS Cloud” filter option on the left.\n\n\n\nFigure caption: Search for ECOSTRESS data available in AWS cloud in Earthdata Search portal\n\n\nLet’s refine our search further. Let’s search for ECOSTRESS ECO_L2T_LSTE in the search box. A single Earthdata Seach Collection is returned.\nWe can click on the (i) icon for the dataset to read more details, including the dataset shortname (helpful for programmatic workflows) just below the dataset name; here ECO_L2T_LSTE.\n\n\n\nFigure caption: Refine search\n\n\n\n\n\nOnce we clicked the (i), scrolling down the info page for the dataset we will see Cloud Access information, such as:\n\nwhether the dataset is available in the cloud\n\nthe cloud Region (all NASA Earthdata Cloud data is/will be in us-west-2 region)\n\nthe S3 storage bucket and object prefix where this data is located\n\nlink that generates AWS S3 Credentials for in-cloud data access (we will cover this in the Direct Data Access Tutorials)\n\nlink to documentation describing the In-region Direct S3 Access to Buckets. Note: these will be unique depending on the DAAC where the data is archived. (We will show examples of direct in-region access in Tutorial 3.)\n\n\n\n\nFigure caption: Cloud access info in EDS\n\n\n\n\n\nFigure caption: Documentation describing the In-region Direct S3 Access to Buckets\n\n\nNote: Clicking on “For Developers” to exapnd will provide programmatic endpoints such as those for the CMR API, and more.\nFor now, let’s say we are intersted in getting download link(s) or access link(s) for specific data files (granules) within this collection.\nAt the top of the dataset info section, click on Search Results, which will take us back to the list of datasets matching our search parameters. Clicking on the dataset (ECOSTRESS ECO_L2T_LSTE) we now see a list of files (granules) that are part of the dataset (collection).\n\n\n\nTo download files for a granule click the download arrow on the card (or list row)\n\n\n\nFigure caption: Download granules\n\n\nYou can also get the S3 information (e.g., AWS region, bucket, temperary credentials for S3 access, and file names) by selecting the AWS S3 Access tab.\n\n\n\nFigure caption: S3 access for granules\n\n\n\n\nTo download multiple granules, click on the green + symbol to add files to our project. Click on the green button towards the bottom that says “Download”. This will take us to another page with options to customize our download or access link(s).\n\n\n\nFigure caption: Select granules and click download\n\n\nOn the next page click the Direct Download option and click the green Download Data on the bottom left side of the page.\n\n\n\nFigure caption: Direct download multiple granules\n\n\nWe’re now taked to the final page for instructions to download and links for data access in the cloud. You should see three tabs: Download Files, AWS S3 Access, Download Script:\n\n\n\nFigure caption: Download to local\n\n\n\n\n\nFigure caption: Direct S3 access\n\n\nThe Download Files tab provides the https:// links for downloading the files locally\nThe AWS S3 Access tab provides the S3:// links, which is what we would use to access the data directly in-region (us-west-2) within the AWS cloud."
  },
  {
    "objectID": "tutorials/Intro_xarray_hvplot.html",
    "href": "tutorials/Intro_xarray_hvplot.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "As Geoscientists, we often work with time series of data with two or more dimensions: a time series of calibrated, orthorectified satellite images; two-dimensional grids of surface air temperature from an atmospheric reanalysis; or three-dimensional (level, x, y) cubes of ocean salinity from an ocean model. These data are often provided in GeoTIFF, NetCDF or HDF format with rich and useful metadata that we want to retain, or even use in our analysis. Common analyses include calculating means, standard deviations and anomalies over time or one or more spatial dimensions (e.g. zonal means). Model output often includes multiple variables that you want to apply similar analyses to.\n\n\n\nA schematic of multi-dimensional data\n\n\nThe schematic above shows a typical data structure for multi-dimensional data. There are two data cubes, one for temperature and one for precipitation. Common coordinate variables, in this case latitude, longitude and time are associated with each variable. Each variable, including coordinate variables, will have a set of attributes: name, units, missing value, etc. The file containing the data may also have attributes: source of the data, model name coordinate reference system if the data are projected. Writing code using low-level packages such as netcdf4 and numpy to read the data, then perform analysis, and write the results to file is time consuming and prone to errors.\n\n\n\nxarray is an open-source project and python package to work with labelled multi-dimensional arrays. It is leverages numpy, pandas, matplotlib and dask to build Dataset and DataArray objects with built-in methods to subset, analyze, interpolate, and plot multi-dimensional data. It makes working with multi-dimensional data cubes efficient and fun. It will change your life for the better. You’ll be more attractive, more interesting, and better equiped to take on lifes challenges.\n\n\n\nIn this tutorial you will learn how to:\n\nload a netcdf file into xarray\ninterrogate the Dataset and understand the difference between DataArray and Dataset\nsubset a Dataset\ncalculate annual and monthly mean fields\ncalculate a time series of zonal means\nplot these results\n\nAs always, we’ll start by importing xarray. We’ll follow convention by giving the module the shortname xr\n\nimport xarray as xr\nxr.set_options(keep_attrs=True)\nimport hvplot.xarray\n\nI’m going to use one of xarray’s tutorial datasets. In this case, air temperature from the NCEP reanalysis. I’ll assign the result of the open_dataset to ds. I may change this to access a dataset directly\n\nds = xr.tutorial.open_dataset(\"air_temperature\")\n\nAs we are in an interactive environment, we can just type ds to see what we have.\n\nds\n\nFirst thing to notice is that ds is an xarray.Dataset object. It has dimensions, lat, lon, and time. It also has coordinate variables with the same names as these dimensions. These coordinate variables are 1-dimensional. This is a NetCDF convention. The Dataset contains one data variable, air. This has dimensions (time, lat, lon).\nClicking on the document icon reveals attributes for each variable. Clicking on the disk icon reveals a representation of the data.\nEach of the data and coordinate variables can be accessed and examined using the variable name as a key.\n\nds.air\n\n\nds['air']\n\nThese are xarray.DataArray objects. This is the basic building block for xarray.\nVariables can also be accessed as attributes of ds.\n\nds.time\n\nA major difference between accessing a variable as an attribute versus using a key is that the attribute is read-only but the key method can be used to update the variable. For example, if I want to convert the units of air from Kelvin to degrees Celsius.\n\nds['air'] = ds.air - 273.15\n\nThis approach can also be used to add new variables\n\nds['air_kelvin'] = ds.air + 273.15\n\n\nds\n\nIt is helpful to update attributes such as units, this saves time, confusion and mistakes, especially when you save the dataset.\n\nds['air'].attrs['units'] = 'degC'\n\n\nds\n\n\n\n\nSubsetting and indexing methods depend on whether you are working with a Dataset or DataArray. A DataArray can be accessed using positional indexing just like a numpy array. To access the temperature field for the first time step, you do the following.\n\nds['air'][0,:,:]\n\nNote this returns a DataArray with coordinates but not attributes.\nHowever, the real power is being able to access variables using coordinate variables. I can get the same subset using the following. (It’s also more explicit about what is being selected and robust in case I modify the DataArray and expect the same output.)\n\nds['air'].sel(time='2013-01-01').time\n\n\nds.air.sel(time='2013-01-01')\n\nI can also do slices. I’ll extract temperatures for the state of Colorado. The bounding box for the state is [-109 E, -102 E, 37 N, 41 N].\nIn the code below, pay attention to both the order of the coordinates and the range of values. The first value of the lat coordinate variable is 41 N, the second value is 37 N. Unfortunately, xarray expects slices of coordinates to be in the same order as the coordinates. Note lon is 0 to 360 not -180 to 180, and I let python calculate it for me within the slice.\n\nds.air.sel(lat=slice(41.,37.), lon=slice(360-109,360-102))\n\nWhat if we want temperature for a point, for example Denver, CO (39.72510678889283 N, -104.98785545855408 E). xarray can handle this! If we just want data from the nearest grid point, we can use sel and specify the method as “nearest”.\n\ndenver_lat, denver_lon = 39.72510678889283, -104.98785545855408\n\n\nds.air.sel(lat=denver_lat, lon=360+denver_lon, method='nearest').hvplot()\n\nIf we want to interpolate, we can use interp(). In this case I use linear or bilinear interpolation.\ninterp() can also be used to resample data to a new grid and even reproject data\n\nds.air.interp(lat=denver_lat, lon=360+denver_lon, method='linear')\n\nsel() and interp() can also be used on Dataset objects.\n\nds.sel(lat=slice(41,37), lon=slice(360-109,360-102))\n\n\nds.interp(lat=denver_lat, lon=360+denver_lon, method='linear')\n\n\n\n\nAs a simple example, let’s try to calculate a mean field for the whole time range.\n\nds.mean(dim='time').hvplot()\n\nWe can also calculate a zonal mean (averaging over longitude)\n\nds.mean(dim='lon').hvplot()\n\nOther aggregation methods include min(), max(), std(), along with others.\n\nds.std(dim='time').hvplot()\n\nThe data we have are in 6h timesteps. This can be resampled to daily or monthly. If you are familiar with pandas, xarray uses the same methods.\n\nds_mon = ds.resample(time='M').mean()\nds_mon\n\nThis is a really short time series but as an example, let’s calculate a monthly climatology (at least for 2 months). For this we can use groupby()\n\nds_clim = ds_mon.groupby(ds_mon.time.dt.month).mean()\nds_clim\n\n\n\n\nFinally, let’s plot the results! This will plot the lat/lon axes of the original ds DataArray.\n\nds_clim.air.sel(month=10).hvplot()"
  },
  {
    "objectID": "tutorials/additional_resources/Data_Discovery_CMR-STAC_API.html",
    "href": "tutorials/additional_resources/Data_Discovery_CMR-STAC_API.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "Exercise: 30 min\n\n\n\n\nIn this example we will access the NASA’s Harmonized Landsat Sentinel-2 (HLS) version 2 assets, which are archived in cloud optimized geoTIFF (COG) format in the LP DAAC Cumulus cloud space. The COGs can be used like any other geoTIFF file, but have some added features that make them more efficient within the cloud data access paradigm. These features include: overviews and internal tiling. Below we will demonstrate how to leverage these features.\n\n\nSpatioTemporal Asset Catalog (STAC) is a specification that provides a common language for interpreting geospatial information in order to standardize indexing and discovering data.\nThe STAC specification is made up of a collection of related, yet independent specifications that when used together provide search and discovery capabilities for remote assets.\n\n\nSTAC Catalog (aka DAAC Archive)\nSTAC Collection (aka Data Product)\nSTAC Item (aka Granule)\nSTAC API\nIn the following sections, we will explore each of STAC element using NASA’s Common Metadata Repository (CMR) STAC application programming interface (API), or CMR-STAC API for short.\n\n\n\n\nThe CMR-STAC API is NASA’s implementation of the STAC API specification for all NASA data holdings within EOSDIS. The current implementation does not allow for querries accross the entire NASA catalog. Users must execute searches within provider catalogs (e.g., LPCLOUD) to find the STAC Items they are searching for. All the providers can be found at the CMR-STAC endpoint here: https://cmr.earthdata.nasa.gov/stac/.\nIn this exercise, we will query the LPCLOUD provider to identify STAC Items from the Harmonized Landsat Sentinel-2 (HLS) collection that fall within our region of interest (ROI) and within our specified time range.\n\n\n\n\n\nhow to connect to NASA CMR-STAC API using Python’s pystac-client\n\nhow to navigate CMR-STAC records\n\nhow to read in a geojson file using geopandas to specify your region of interest\nhow to use the CMR-STAC API to search for data\nhow to perform post-search filtering of CMR-STAC API search result in Python\n\nhow to extract and save data access URLs for geospatial assets\n\nThis exercise can be found in the 2021 Cloud Hackathon Book\n\n\n\n\n\nfrom pystac_client import Client  \nfrom collections import defaultdict    \nimport json\nimport geopandas\nfrom shapely.geometry import Polygon\nimport geoviews as gv\nfrom cartopy import crs\nfrom pyproj import CRS\ngv.extension('bokeh', 'matplotlib')\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n\n\n\nSTAC_URL = 'https://cmr.earthdata.nasa.gov/stac'\n\n\n\n\nprovider_cat = Client.open(STAC_URL)\n\nWe’ll create a providers variable so we can take a deeper look into available data providers - subcategories are referred to as “children”. We can then print them as a for loop.\n\nproviders = [p for p in provider_cat.get_children()]\n\nfor count, provider in enumerate(providers):\n    print(f'{count} - {provider.title}')\n\n0 - LARC_ASDC\n1 - USGS_EROS\n2 - ESA\n3 - GHRC\n4 - LAADS\n5 - OBPG\n6 - OB_DAAC\n7 - ECHO\n8 - ISRO\n9 - LPCUMULUS\n10 - EDF_DEV04\n11 - GES_DISC\n12 - ASF\n13 - OMINRT\n14 - EUMETSAT\n15 - NCCS\n16 - NSIDCV0\n17 - PODAAC\n18 - LARC\n19 - USGS\n20 - SCIOPS\n21 - LANCEMODIS\n22 - CDDIS\n23 - JAXA\n24 - AU_AADC\n25 - ECHO10_OPS\n26 - LPDAAC_ECS\n27 - NSIDC_ECS\n28 - ORNL_DAAC\n29 - LM_FIRMS\n30 - SEDAC\n31 - LANCEAMSR2\n32 - NOAA_NCEI\n33 - USGS_LTA\n34 - GESDISCCLD\n35 - GHRSSTCWIC\n36 - ASIPS\n37 - ESDIS\n38 - POCLOUD\n39 - NSIDC_CPRD\n40 - ORNL_CLOUD\n41 - FEDEO\n42 - MLHUB\n43 - XYZ_PROV\n44 - GHRC_DAAC\n45 - CSDA\n46 - NRSCC\n47 - CEOS_EXTRA\n48 - AMD_KOPRI\n49 - MOPITT\n50 - GHRC_CLOUD\n51 - LPCLOUD\n52 - CCMEO\n\n\n\n\n\n\nFor this next step we need the provider title (e.g., LPCLOUD) from above. We will add the provider to the end of the CMR-STAC API URL (i.e., https://cmr.earthdata.nasa.gov/stac/) to connect to the LPCLOUD STAC Catalog.\n\ncatalog = Client.open(f'{STAC_URL}/LPCLOUD/')\n\nSince we are using a dedicated client (i.e., pystac-client.Client) to connect to our STAC Provider Catalog, we will have access to some useful internal methods and functions (e.g., get_children() or get_all_items()) we can use to get information from these objects.\n\n\n\nWe’ll create a products variable to view deeper in the STAC Catalog.\n\nproducts = [c for c in catalog.get_children()]\n\n\n\nTo view the products variable we just created, let’s look at one entry as a dictionary.\n\nproducts[1].to_dict()\n\n{'type': 'Collection',\n 'id': 'HLSL30.v2.0',\n 'stac_version': '1.0.0',\n 'description': 'The Harmonized Landsat and Sentinel-2 (HLS) project provides consistent surface reflectance (SR) and top of atmosphere (TOA) brightness data from the Operational Land Imager (OLI) aboard the joint NASA/USGS Landsat 8 satellite and the Multi-Spectral Instrument (MSI) aboard Europe’s Copernicus Sentinel-2A and Sentinel-2B satellites. The combined measurement enables global observations of the land every 2–3 days at 30-meter (m) spatial resolution. The HLS project uses a set of algorithms to obtain seamless products from OLI and MSI that include atmospheric correction, cloud and cloud-shadow masking, spatial co-registration and common gridding, illumination and view angle normalization, and spectral bandpass adjustment.\\r\\n\\r\\nThe HLSL30 product provides 30-m Nadir Bidirectional Reflectance Distribution Function (BRDF)-Adjusted Reflectance (NBAR) and is derived from Landsat 8 OLI data products. The HLSS30 and HLSL30 products are gridded to the same resolution and Military Grid Reference System ([MGRS](https://hls.gsfc.nasa.gov/products-description/tiling-system/)) tiling system, and thus are “stackable” for time series analysis.\\r\\n\\r\\nThe HLSL30 product is provided in Cloud Optimized GeoTIFF (COG) format, and each band is distributed as a separate file. There are 11 bands included in the HLSL30 product along with one quality assessment (QA) band and four angle bands. See the User Guide for a more detailed description of the individual bands provided in the HLSL30 product.',\n 'links': [{'rel': <RelType.ROOT: 'root'>,\n   'href': 'https://cmr.earthdata.nasa.gov/stac/',\n   'type': <MediaType.JSON: 'application/json'>,\n   'title': 'NASA CMR STAC Proxy'},\n  {'rel': 'items',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/items',\n   'type': 'application/json',\n   'title': 'Granules in this collection'},\n  {'rel': 'about',\n   'href': 'https://cmr.earthdata.nasa.gov/search/concepts/C2021957657-LPCLOUD.html',\n   'type': 'text/html',\n   'title': 'HTML metadata for collection'},\n  {'rel': 'via',\n   'href': 'https://cmr.earthdata.nasa.gov/search/concepts/C2021957657-LPCLOUD.json',\n   'type': 'application/json',\n   'title': 'CMR JSON metadata for collection'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2013',\n   'type': 'application/json',\n   'title': '2013 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2014',\n   'type': 'application/json',\n   'title': '2014 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2015',\n   'type': 'application/json',\n   'title': '2015 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2016',\n   'type': 'application/json',\n   'title': '2016 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2017',\n   'type': 'application/json',\n   'title': '2017 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2018',\n   'type': 'application/json',\n   'title': '2018 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2019',\n   'type': 'application/json',\n   'title': '2019 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2020',\n   'type': 'application/json',\n   'title': '2020 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2021',\n   'type': 'application/json',\n   'title': '2021 catalog'},\n  {'rel': 'child',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/2022',\n   'type': 'application/json',\n   'title': '2022 catalog'},\n  {'rel': <RelType.SELF: 'self'>,\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0',\n   'type': <MediaType.JSON: 'application/json'>},\n  {'rel': <RelType.PARENT: 'parent'>,\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/',\n   'type': <MediaType.JSON: 'application/json'>,\n   'title': 'LPCLOUD'}],\n 'stac_extensions': [],\n 'title': 'HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0',\n 'extent': {'spatial': {'bbox': [[-180, -90, 180, 90]]},\n  'temporal': {'interval': [['2013-04-11T00:00:00Z', None]]}},\n 'license': 'not-provided'}\n\n\n\n\n\nIn the above output, id and title are two elements of interest that we can print for all products using a for loop.\n\nfor p in products: \n    print(f\"{p.id}: {p.title}\")\n\nASTGTM.v003: ASTER Global Digital Elevation Model V003\nHLSL30.v2.0: HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0\nHLSS30.v2.0: HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0\n\n\n\n\n\n\nWe will define our ROI using a geojson file containing a small polygon feature in western Nebraska, USA. The geojson file is found in the ~/data directory. We’ll also specify the data collections and a time range for our example.\n\n\nReading in a geojson file with geopandas will return the geometry of our polygon (our ROI).\nNOTE: If you are running the notebook from the tutorials-templates directory, please use the following path to connect to the geojson file: “../tutorials/data/ne_w_agfields.geojson”\n\npoints = geopandas.read_file('../data/TNC_fall_2020.geojson')\npoints\n\n\n\n\n\n  \n    \n      \n      planting_date\n      health\n      geometry\n    \n  \n  \n    \n      0\n      2019-05-10\n      good\n      POINT Z (-120.41578 34.52600 191.30000)\n    \n    \n      1\n      2019-05-10\n      good\n      POINT Z (-120.41590 34.52611 194.80000)\n    \n    \n      2\n      2019-05-10\n      poor\n      POINT Z (-120.41589 34.52611 194.20000)\n    \n    \n      3\n      2019-05-10\n      good\n      POINT Z (-120.41591 34.52618 192.80000)\n    \n    \n      4\n      2019-05-10\n      good\n      POINT Z (-120.41600 34.52621 188.90000)\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      4058\n      2020-10-05\n      good\n      POINT Z (-120.41725 34.53041 0.00000)\n    \n    \n      4059\n      2020-10-05\n      good\n      POINT Z (-120.41718 34.53040 0.00000)\n    \n    \n      4060\n      2020-10-05\n      good\n      POINT Z (-120.41710 34.53039 0.00000)\n    \n    \n      4061\n      2020-10-06\n      good\n      POINT Z (-120.40952 34.52643 0.00000)\n    \n    \n      4062\n      2021-08-26\n      good\n      POINT Z (-120.41266 34.52768 207.56970)\n    \n  \n\n4063 rows × 3 columns\n\n\n\n\n\n\nWe can use that geometry to visualize the polygon: here, a square. But wait for it –\n\nminx, miny, maxx, maxy = points.geometry.total_bounds\nminx, miny, maxx, maxy\n\n(-120.45264628215773,\n 34.51050622261265,\n -120.40432447545712,\n 34.532398755692206)\n\n\nGeoJSON polygon boundary coordinates must be ordered counterclockwise\n\ncoords = [\n    (minx, miny),\n    (maxx, miny),\n    (maxx, maxy),\n    (minx, maxy)\n]\n\n\nfeature_shape = Polygon(coords)\nfeature_shape\n\n\n\n\nWe can plot the polygon using the geoviews package that we imported as gv with ‘bokeh’ and ‘matplotlib’ extensions. The following has reasonable width, height, color, and line widths to view our polygon when it is overlayed on a base tile map.\n\nbase = gv.tile_sources.EsriImagery.opts(width=650, height=500)\nfarmField = gv.Polygons(feature_shape).opts(line_color='yellow', line_width=10, color=None)\nbase * farmField\n\nUnable to display output for mime type(s): \n\n\n\n\n\n\n\n\n  \n\n\n\n\nWe will now start to specify the search criteria we are interested in, i.e, the date range, the ROI, and the data collections, that we will pass to the STAC API.\n\n\n\n\ncrs = CRS('epsg:4326')\npolygon = geopandas.GeoDataFrame(index=[0], crs=crs, geometry=[feature_shape])\npolygon\n\n\n\n\n\n  \n    \n      \n      geometry\n    \n  \n  \n    \n      0\n      POLYGON ((-120.45265 34.51051, -120.40432 34.5...\n    \n  \n\n\n\n\n\nroi = json.loads(polygon.to_json())['features'][0]['geometry']\nroi\n\n{'type': 'Polygon',\n 'coordinates': [[[-120.45264628215773, 34.51050622261265],\n   [-120.40432447545712, 34.51050622261265],\n   [-120.40432447545712, 34.532398755692206],\n   [-120.45264628215773, 34.532398755692206],\n   [-120.45264628215773, 34.51050622261265]]]}\n\n\nSo, what just happen there? Let’s take a quick detour to break it down.\n\n\n\n\nNext up is to specify our date range using ISO_8601 date formatting.\n\n#date_range = \"2021-05-01T00:00:00Z/2021-08-30T23:59:59Z\"    # closed interval\n#date_range = \"2021-05-01T00:00:00Z/..\"                      # open interval - does not currently work with the CMR-STAC API\n#date_range = \"2021-05/2021-08\"\ndate_range = \"2020-09\"\n\n\n\n\nSTAC Collection is synonomous with what we usually consider a NASA data product. Desired STAC Collections are submitted to the search API as a list containing the collection id. We can use the ids that we printed from our products for loop above. Let’s focus on S30 and L30 collections.\n\ncollections = ['HLSL30.v2.0', 'HLSS30.v2.0']\ncollections\n\n['HLSL30.v2.0', 'HLSS30.v2.0']\n\n\n\n\n\n\nNow we can put all our search criteria together using catalog.search from the pystac_client package.\n\nsearch = catalog.search(\n    collections=collections,\n    intersects=roi,\n    datetime=date_range,\n    limit=100\n)\n\n\n\n\nsearch.matched()\n\n4\n\n\nWe now have a search object containing the STAC Items that matched our query. Now, let’s pull out all of the STAC Items (as a PySTAC ItemCollection object) and explore the contents (i.e., the STAC Items)\n\nitem_collection = search.get_all_items()\n\nLet’s list some of the Items from our pystac item_collection:\n\nlist(item_collection)[0:5]\n\n[<Item id=HLS.L30.T10SGD.2020247T184028.v2.0>,\n <Item id=HLS.L30.T10SGD.2020256T183444.v2.0>,\n <Item id=HLS.L30.T10SGD.2020263T184033.v2.0>,\n <Item id=HLS.L30.T10SGD.2020272T183449.v2.0>]\n\n\nWe can view a single Item as a dictionary, as we did above with STAC Collections/products.\n\nitem_collection[0].to_dict()\n\n{'type': 'Feature',\n 'stac_version': '1.0.0',\n 'id': 'HLS.L30.T10SGD.2020247T184028.v2.0',\n 'properties': {'datetime': '2020-09-03T18:40:28.257000Z',\n  'start_datetime': '2020-09-03T18:40:28.257Z',\n  'end_datetime': '2020-09-03T18:40:52.144Z',\n  'eo:cloud_cover': 48},\n 'geometry': {'type': 'Polygon',\n  'coordinates': [[[-120.464742, 34.2267025],\n    [-120.1745662, 35.2100913],\n    [-120.8028976, 35.2231329],\n    [-120.8289365, 34.2336951],\n    [-120.464742, 34.2267025]]]},\n 'links': [{'rel': 'self',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0/items/HLS.L30.T10SGD.2020247T184028.v2.0'},\n  {'rel': 'parent',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0'},\n  {'rel': 'collection',\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/collections/HLSL30.v2.0'},\n  {'rel': <RelType.ROOT: 'root'>,\n   'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD/',\n   'type': <MediaType.JSON: 'application/json'>,\n   'title': 'LPCLOUD'},\n  {'rel': 'provider', 'href': 'https://cmr.earthdata.nasa.gov/stac/LPCLOUD'},\n  {'rel': 'via',\n   'href': 'https://cmr.earthdata.nasa.gov/search/concepts/G2153816661-LPCLOUD.json'},\n  {'rel': 'via',\n   'href': 'https://cmr.earthdata.nasa.gov/search/concepts/G2153816661-LPCLOUD.umm_json'}],\n 'assets': {'B06': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B06.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B06.tif'},\n  'VZA': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.VZA.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.VZA.tif'},\n  'SAA': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.SAA.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.SAA.tif'},\n  'B11': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B11.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B11.tif'},\n  'VAA': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.VAA.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.VAA.tif'},\n  'B02': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B02.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B02.tif'},\n  'SZA': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.SZA.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.SZA.tif'},\n  'B09': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B09.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B09.tif'},\n  'B03': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B03.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B03.tif'},\n  'B07': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B07.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B07.tif'},\n  'B10': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B10.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B10.tif'},\n  'B04': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B04.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B04.tif'},\n  'B05': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B05.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B05.tif'},\n  'Fmask': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.Fmask.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.Fmask.tif'},\n  'B01': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B01.tif',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.B01.tif'},\n  'browse': {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-public/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.jpg',\n   'type': 'image/jpeg',\n   'title': 'Download HLS.L30.T10SGD.2020247T184028.v2.0.jpg'},\n  'metadata': {'href': 'https://cmr.earthdata.nasa.gov/search/concepts/G2153816661-LPCLOUD.xml',\n   'type': 'application/xml'}},\n 'bbox': [-120.828937, 34.226702, -120.174566, 35.223133],\n 'stac_extensions': ['https://stac-extensions.github.io/eo/v1.0.0/schema.json'],\n 'collection': 'HLSL30.v2.0'}\n\n\n\n\n\n\nWhile the CMR-STAC API is a powerful search and discovery utility, it is still maturing and currently does not have the full gamut of filtering capabilities that the STAC API specification allows for. Hence, additional filtering is required if we want to filter by a property, for example cloud cover. Below we will loop through and filter the item_collection by a specified cloud cover as well as extract the band we’d need to do an Enhanced Vegetation Index (EVI) calculation for a future analysis.\nWe’ll make a cloudcover variable where we will set the maximum allowable cloud cover and extract the band links for those Items that match or are less than the max cloud cover.\n\ncloudcover = 100\n\nWe will also specify the STAC Assets (i.e., bands/layers) of interest for both the S30 and L30 collections (also in our collections variable above).\nIn this hypothetical workflow, we’ll extract the bands needed to calculate an enhanced vegetation index (EVI). Thus, the band needed include red, near infrared (NIR), and blue. We’ll also extract a quality band (i.e., Fmask) that we’d eventually use to perform per-pixel quality filtering.\nNotice that the band ids are in some case not one-to-one between the S30 and the L30 product. This is evident in the NIR band for each product where S30’s NIR band id is B8A and L30’s is B05. Note, the S30 product has an additional NIR band with a band id of B08, but the spectral ranges between B8A and B05 are more closely aligned. Visit the HLS Overview page to learn more about HLS spectral bands.\n\ns30_bands = ['B8A', 'B04', 'B02', 'Fmask']    # S30 bands for EVI calculation and quality filtering -> NIR, RED, BLUE, Quality \nl30_bands = ['B05', 'B04', 'B02', 'Fmask']    # L30 bands for EVI calculation and quality filtering -> NIR, RED, BLUE, Quality \n\nAnd now to loop through and filter the item_collection by cloud cover and bands:\n\nevi_band_links = []\n\nfor i in item_collection:\n    if i.properties['eo:cloud_cover'] <= cloudcover:\n        if i.collection_id == 'HLSS30.v2.0':\n            #print(i.properties['eo:cloud_cover'])\n            evi_bands = s30_bands\n        elif i.collection_id == 'HLSL30.v2.0':\n            #print(i.properties['eo:cloud_cover'])\n            evi_bands = l30_bands\n\n        for a in i.assets:\n            if any(b==a for b in evi_bands):\n                evi_band_links.append(i.assets[a].href)\n\nThe filtering done in the previous steps produces a list of links to STAC Assets. Let’s print out the first ten links.\n\nevi_band_links[:10]\n\n['https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B02.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B05.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.Fmask.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.Fmask.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.B02.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.B05.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020263T184033.v2.0/HLS.L30.T10SGD.2020263T184033.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020263T184033.v2.0/HLS.L30.T10SGD.2020263T184033.v2.0.Fmask.tif']\n\n\nNOTE that HLS data is mapped to the Universal Transverse Mercator (UTM) projection and is tiled using the Sentinel-2 Military Grid Reference System (MGRS) UTM grid. Notice that in the list of links we have multiple tiles, i.e. T14TKL & T13TGF, that intersect with our region of interest. In this case, these two tiles represent neighboring UTM zones. The tiles can be discern from the file name, which is the last element in a link (far right) following the last forward slash (/) - e.g., HLS.L30.T14TKL.2021133T172406.v1.5.B04.tif. The figure below explains where to find the tile/UTM zone from the file name.\n\nWe will now split the list of links into separate logical sub-lists.\n\n\n\nWe have a list of links to data assets that meet our search and filtering criteria. Below we’ll split our list from above into lists first by tile/UTM zone and then further by individual bands bands. The commands that follow will do the splitting with python routines.\n\n\n\ntile_dicts = defaultdict(list)    # https://stackoverflow.com/questions/26367812/appending-to-list-in-python-dictionary\n\n\nfor l in evi_band_links:\n    tile = l.split('.')[-6]\n    tile_dicts[tile].append(l)\n\n\n\n\ntile_dicts.keys()\n\ndict_keys(['T10SGD'])\n\n\n\ntile_dicts['T10SGD'][:5]\n\n['https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B02.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B05.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.Fmask.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.Fmask.tif']\n\n\nNow we will create a separate list of data links for each tile\n\ntile_links_T10SGD = tile_dicts['T10SGD']\n\n\n\n\n\n# tile_links_T10SGD[:10]\n\n\n\n\n\n\nbands_dicts = defaultdict(list)\n\n\nfor b in tile_links_T10SGD:\n    band = b.split('.')[-2]\n    bands_dicts[band].append(b)\n\n\nbands_dicts.keys()\n\ndict_keys(['B02', 'B04', 'B05', 'Fmask'])\n\n\n\nbands_dicts['B04']\n\n['https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020247T184028.v2.0/HLS.L30.T10SGD.2020247T184028.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020256T183444.v2.0/HLS.L30.T10SGD.2020256T183444.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020263T184033.v2.0/HLS.L30.T10SGD.2020263T184033.v2.0.B04.tif',\n 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T10SGD.2020272T183449.v2.0/HLS.L30.T10SGD.2020272T183449.v2.0.B04.tif']\n\n\n\n\n\n\nTo complete this exercise, we will save the individual link lists as separate text files with descriptive names.\nNOTE: If you are running the notebook from the tutorials-templates directory, please use the following path to write to the data directory: “../tutorials/data/{name}”\n\n\n\nfor k, v in bands_dicts.items():\n    name = (f'HTTPS_T10SGD_{k}_Links.txt')\n    with open(f'../data/{name}', 'w') as f:    # use ../tutorials/data/{name} as your path if running the notebook from \"tutorials-template\"\n        for l in v:\n            f.write(f\"{l}\" + '\\n')\n\n\n\n\n\nfor k, v in bands_dicts.items():\n    name = (f'S3_T10SGD_{k}_Links.txt')\n    with open(f'../data/{name}', 'w') as f:    # use ../tutorials/data/{name} as your path if running the notebook from \"tutorials-template\"\n        for l in v:\n            s3l = l.replace('https://data.lpdaac.earthdatacloud.nasa.gov/', 's3://')\n            f.write(f\"{s3l}\" + '\\n')\n\n\n\n\n\n\n\nSTAC Specification Webpage\nSTAC API Documentation\nCMR-STAC API Github\nPySTAC Client Documentation\nhttps://stackoverflow.com/questions/26367812/appending-to-list-in-python-dictionary\nGeopandas\nHLS Overview"
  },
  {
    "objectID": "tutorials/additional_resources/Data_Discovery_CMR_API.html",
    "href": "tutorials/additional_resources/Data_Discovery_CMR_API.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "In this notebook, we will walk through how to search for Earthdata data collections and granules. Along the way we will explore the available search parameters, information return, and specific contrains when using the CMR API. Our object is to identify assets to access that we would downloaded, or perform S3 direct access, within an analysis workflow\nWe will be querying CMR for Harmonized Landsat Sentinel-2 (HLS) collections/granules to identify assets we would downloaded, or perform S3 direct access, within an analysis workflow\n\n\n\n\n\nAn Earthdata Login account is required to access data, as well as discover restricted data, from the NASA Earthdata system. Thus, to access NASA data, you need Earthdata Login. Please visit https://urs.earthdata.nasa.gov to register and manage your Earthdata Login account. This account is free to create and only takes a moment to set up.\n\n\n\n\n\nunderstand what CMR/CMR API is and what CMR/CMR API can be used for\nhow to use the requests package to search data collections and granules\n\nhow to parse the results of these searches.\n\n\n\n\nCMR is the Common Metadata Repository. It catalogs all data for NASA’s Earth Observing System Data and Information System (EOSDIS). It is the backend of Earthdata Search, the GUI search interface you are probably familiar with. More information about CMR can be found here.\nUnfortunately, the GUI for Earthdata Search is not accessible from a cloud instance - at least not without some work. Earthdata Search is also not immediately reproducible. What I mean by that is if you create a search using the GUI you would have to note the search criteria (date range, search area, collection name, etc), take a screenshot, copy the search url, or save the list of data granules returned by the search, in order to recreate the search. This information would have to be re-entered each time you or someone else wanted to do the search. You could make typos or other mistakes. A cleaner, reproducible solution is to search CMR programmatically using the CMR API.\n\n\n\nAPI stands for Application Programming Interface. It allows applications (software, services, etc) to send information to each other. A helpful analogy is a waiter in a restaurant. The waiter takes your drink or food order that you select from the menu, often translated into short-hand, to the bar or kitchen, and then returns (hopefully) with what you ordered when it is ready.\nThe CMR API accepts search terms such as collection name, keywords, datetime range, and location, queries the CMR database and returns the results.\n\n\n\n\nThe first step is to import python packages. We will use:\n- requests This package does most of the work for us accessing the CMR API using HTTP methods. - pprint to pretty print the results of the search.\nA more in-depth tutorial on requests is here\n\nimport requests\nfrom pprint import pprint\n\nTo conduct a search using the CMR API, requests needs the url for the root CMR search endpoint. We’ll assign this url to a python variable as a string.\n\nCMR_OPS = 'https://cmr.earthdata.nasa.gov/search'\n\nCMR allows search by collections, which are datasets, and granules, which are files that contain data. Many of the same search parameters can be used for collections and granules but the type of results returned differ. Search parameters can be found in the API Documentation.\nWhether we search collections or granules is distinguished by adding \"collections\" or \"granules\" to the end of the CMR endpoint URL.\nWe are going to search collections first, so we add \"collections\" to the URL. We are using a python format string in the examples below.\n\nurl = f'{CMR_OPS}/{\"collections\"}'\n\nIn this first example, I want to retrieve a list of collections available from the Earthdata Cloud using the cloud_hosted parameter in the request.\nWe want to get the content in json (pronounced “jason”) format, so I pass a dictionary to the header keyword argument to say that I want results returned as json.\nThe .get() method is used to send this information to the CMR API. get() calls the HTTP method GET.\n\nresponse = requests.get(url,\n                        params={\n                            'cloud_hosted': 'True',\n                            'has_granules': 'True',\n                        },\n                        headers={\n                            'Accept': 'application/json',\n                        }\n                       )\n\nThe request returns a Response object.\nTo check that our request was successful we can print the response variable we saved the request to.\n\nresponse\n\n<Response [200]>\n\n\nA 200 response is what we want. This means that the requests was successful. For more information on HTTP status codes see https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\nA more explict way to check the status code is to use the status_code attribute. Both methods return a HTTP status code.\n\nresponse.status_code\n\n200\n\n\nThe response from requests.get returns the results of the search and metadata about those results in the headers.\nMore information about the response object can be found by typing help(response).\nheaders contains useful information in a case-insensitive dictionary. We requested (above) that the information be return in json which means the object return is a dictionary in our Python environment. We’ll iterate through the returned dictionary, looping throught each field (k) and its associated value (v). For more on interating through dictionary object click here.\n\nfor k, v in response.headers.items():\n    print(f'{k}: {v}')\n\nContent-Type: application/json;charset=utf-8\nContent-Length: 4517\nConnection: keep-alive\nDate: Mon, 04 Apr 2022 21:04:20 GMT\nX-Frame-Options: SAMEORIGIN\nAccess-Control-Allow-Origin: *\nX-XSS-Protection: 1; mode=block\nCMR-Request-Id: 6b187d39-c5b8-40f7-9b06-9228ea3c33b2\nStrict-Transport-Security: max-age=31536000\nCMR-Search-After: [0.0,18400.0,\"SENTINEL-1A_OCN\",\"1\",1214472977,1250]\nCMR-Hits: 1169\nAccess-Control-Expose-Headers: CMR-Hits, CMR-Request-Id, X-Request-Id, CMR-Scroll-Id, CMR-Search-After, CMR-Timed-Out, CMR-Shapefile-Original-Point-Count, CMR-Shapefile-Simplified-Point-Count\nX-Content-Type-Options: nosniff\nCMR-Took: 303\nX-Request-Id: zbAtpLRlRe2kPJi8PNdomG7u6C22HPSRbAy5E2m23uYIKga7V8DEfg==\nVary: Accept-Encoding, User-Agent\nContent-Encoding: gzip\nServer: ServerTokens ProductOnly\nX-Cache: Miss from cloudfront\nVia: 1.1 e9c8cd6cad69627cb7c9d88123e6e2cc.cloudfront.net (CloudFront)\nX-Amz-Cf-Pop: HIO50-C2\nX-Amz-Cf-Id: zbAtpLRlRe2kPJi8PNdomG7u6C22HPSRbAy5E2m23uYIKga7V8DEfg==\n\n\nEach item in the dictionary can be accessed in the normal way you access a python dictionary but the keys uniquely case-insensitive. Let’s take a look at the commonly used CMR-Hits key.\n\nresponse.headers['CMR-Hits']\n\n'1169'\n\n\nNote that “cmr-hits” works as well!\n\nresponse.headers['cmr-hits']\n\n'1169'\n\n\nIn some situations the response to your query can return a very large number of result, some of which may not be relevant. We can add additional query parameters to restrict the information returned. We’re going to restrict the search by the provider parameter.\nYou can modify the code below to explore all Earthdata data products hosted by the various providers. When searching by provider, use Cloud Provider to search for cloud-hosted datasets and On-Premises Provider to search for datasets archived at the DAACs. A partial list of providers is given below.\n\n\n\n\n\n\n\n\n\nDAAC\nShort Name\nCloud Provider\nOn-Premises Provider\n\n\n\n\nNSIDC\nNational Snow and Ice Data Center\nNSIDC_CPRD\nNSIDC_ECS\n\n\nGHRC DAAC\nGlobal Hydrometeorology Resource Center\nGHRC_DAAC\nGHRC_DAAC\n\n\nPO DAAC\nPhysical Oceanography Distributed Active Archive Center\nPOCLOUD\nPODAAC\n\n\nASF\nAlaska Satellite Facility\nASF\nASF\n\n\nORNL DAAC\nOak Ridge National Laboratory\nORNL_CLOUD\nORNL_DAAC\n\n\nLP DAAC\nLand Processes Distributed Active Archive Center\nLPCLOUD\nLPDAAC_ECS\n\n\nGES DISC\nNASA Goddard Earth Sciences (GES) Data and Information Services Center (DISC)\nGES_DISC\nGES_DISC\n\n\nOB DAAC\nNASA’s Ocean Biology Distributed Active Archive Center\n\nOB_DAAC\n\n\nSEDAC\nNASA’s Socioeconomic Data and Applications Center\n\nSEDAC\n\n\n\nWe’ll assign the provider to a variable as a string and insert the variable into the parameter argument in the request.\n\nprovider = 'LPCLOUD'\n\n\nresponse = requests.get(url,\n                        params={\n                            'cloud_hosted': 'True',\n                            'has_granules': 'True',\n                            'provider': provider,\n                        },\n                        headers={\n                            'Accept': 'application/json'\n                        }\n                       )\nresponse\n\n<Response [200]>\n\n\n\nresponse.headers['cmr-hits']\n\n'3'\n\n\nSearch results are contained in the content part of the Response object. However, response.content returns information in bytes.\n\nresponse.content\n\nb'{\"feed\":{\"updated\":\"2022-04-04T21:04:21.524Z\",\"id\":\"https://cmr.earthdata.nasa.gov:443/search/collections.json?cloud_hosted=True&has_granules=True&provider=LPCLOUD\",\"title\":\"ECHO dataset metadata\",\"entry\":[{\"processing_level_id\":\"3\",\"boxes\":[\"-90 -180 90 180\"],\"time_start\":\"2013-04-11T00:00:00.000Z\",\"version_id\":\"2.0\",\"updated\":\"2015-12-03T10:57:07.000Z\",\"dataset_id\":\"HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0\",\"has_spatial_subsetting\":false,\"has_transforms\":false,\"has_variables\":false,\"data_center\":\"LPCLOUD\",\"short_name\":\"HLSL30\",\"organizations\":[\"LP DAAC\",\"NASA/IMPACT\"],\"title\":\"HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0\",\"coordinate_system\":\"CARTESIAN\",\"summary\":\"The Harmonized Landsat and Sentinel-2 (HLS) project provides consistent surface reflectance (SR) and top of atmosphere (TOA) brightness data from the Operational Land Imager (OLI) aboard the joint NASA/USGS Landsat 8 satellite and the Multi-Spectral Instrument (MSI) aboard Europe\\xe2\\x80\\x99s Copernicus Sentinel-2A and Sentinel-2B satellites. The combined measurement enables global observations of the land every 2\\xe2\\x80\\x933 days at 30-meter (m) spatial resolution. The HLS project uses a set of algorithms to obtain seamless products from OLI and MSI that include atmospheric correction, cloud and cloud-shadow masking, spatial co-registration and common gridding, illumination and view angle normalization, and spectral bandpass adjustment.\\\\r\\\\n\\\\r\\\\nThe HLSL30 product provides 30-m Nadir Bidirectional Reflectance Distribution Function (BRDF)-Adjusted Reflectance (NBAR) and is derived from Landsat 8 OLI data products. The HLSS30 and HLSL30 products are gridded to the same resolution and Military Grid Reference System ([MGRS](https://hls.gsfc.nasa.gov/products-description/tiling-system/)) tiling system, and thus are \\xe2\\x80\\x9cstackable\\xe2\\x80\\x9d for time series analysis.\\\\r\\\\n\\\\r\\\\nThe HLSL30 product is provided in Cloud Optimized GeoTIFF (COG) format, and each band is distributed as a separate file. There are 11 bands included in the HLSL30 product along with one quality assessment (QA) band and four angle bands. See the User Guide for a more detailed description of the individual bands provided in the HLSL30 product.\",\"service_features\":{\"opendap\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"esi\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"harmony\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false}},\"orbit_parameters\":{},\"id\":\"C2021957657-LPCLOUD\",\"has_formats\":false,\"consortiums\":[\"GEOSS\",\"EOSDIS\"],\"original_format\":\"UMM_JSON\",\"collection_data_type\":\"OTHER\",\"archive_center\":\"LP DAAC\",\"has_temporal_subsetting\":false,\"browse_flag\":true,\"platforms\":[\"LANDSAT-8\"],\"online_access_flag\":true,\"links\":[{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/data#\",\"hreflang\":\"en-US\",\"href\":\"https://search.earthdata.nasa.gov/search?q=C2021957657-LPCLOUD\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://doi.org/10.5067/HLS/HLSL30.002\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/1118/HLS_User_Guide_V2.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/769/HLS_ATBD_V15_provisional.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/768/HLS_Quick_Guide_v011.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-tutorial/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-super-script/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/browse#\",\"hreflang\":\"en-US\",\"href\":\"https://cmr.earthdata.nasa.gov/browse-scaler/browse_images/granules/G2095313663-LPCLOUD?h=512&w=512\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-bulk-download/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/resources/e-learning/getting-started-with-cloud-native-harmonized-landsat-sentinel-2-hls-data-in-r/\"}]},{\"processing_level_id\":\"3\",\"boxes\":[\"-90 -180 90 180\"],\"time_start\":\"2015-11-28T00:00:00.000Z\",\"version_id\":\"2.0\",\"updated\":\"2020-03-04T07:19:53.396Z\",\"dataset_id\":\"HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0\",\"has_spatial_subsetting\":false,\"has_transforms\":false,\"has_variables\":false,\"data_center\":\"LPCLOUD\",\"short_name\":\"HLSS30\",\"organizations\":[\"LP DAAC\",\"NASA/IMPACT\"],\"title\":\"HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0\",\"coordinate_system\":\"CARTESIAN\",\"summary\":\"The Harmonized Landsat and Sentinel-2 (HLS) project provides consistent surface reflectance data from the Operational Land Imager (OLI) aboard the joint NASA/USGS Landsat 8 satellite and the Multi-Spectral Instrument (MSI) aboard Europe\\xe2\\x80\\x99s Copernicus Sentinel-2A and Sentinel-2B satellites. The combined measurement enables global observations of the land every 2\\xe2\\x80\\x933 days at 30-meter (m) spatial resolution. The HLS project uses a set of algorithms to obtain seamless products from OLI and MSI that include atmospheric correction, cloud and cloud-shadow masking, spatial co-registration and common gridding, illumination and view angle normalization, and spectral bandpass adjustment. \\\\r\\\\n\\\\r\\\\nThe HLSS30 product provides 30-m Nadir Bidirectional Reflectance Distribution Function (BRDF)-Adjusted Reflectance (NBAR) and is derived from Sentinel-2A and Sentinel-2B MSI data products. The HLSS30 and HLSL30 products are gridded to the same resolution and Military Grid Reference System (MGRS) (https://hls.gsfc.nasa.gov/products-description/tiling-system/) tiling system, and thus are \\xe2\\x80\\x9cstackable\\xe2\\x80\\x9d for time series analysis.\\\\r\\\\n\\\\r\\\\nThe HLSS30 product is provided in Cloud Optimized GeoTIFF (COG) format, and each band is distributed as a separate COG. There are 13 bands included in the HLSS30 product along with four angle bands and a quality assessment (QA) band. See the User Guide for a more detailed description of the individual bands provided in the HLSS30 product.\\\\r\\\\n\",\"service_features\":{\"opendap\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"esi\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"harmony\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false}},\"orbit_parameters\":{},\"id\":\"C2021957295-LPCLOUD\",\"has_formats\":false,\"consortiums\":[\"GEOSS\",\"EOSDIS\"],\"original_format\":\"UMM_JSON\",\"collection_data_type\":\"OTHER\",\"archive_center\":\"LP DAAC\",\"has_temporal_subsetting\":false,\"browse_flag\":true,\"platforms\":[\"Sentinel-2A\",\"Sentinel-2B\"],\"online_access_flag\":true,\"links\":[{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/data#\",\"hreflang\":\"en-US\",\"href\":\"https://search.earthdata.nasa.gov/search?q=C2021957295-LPCLOUD\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://doi.org/10.5067/HLS/HLSS30.002\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/1118/HLS_User_Guide_V2.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/769/HLS_ATBD_V15_provisional.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/768/HLS_Quick_Guide_v011.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-tutorial/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-super-script/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/browse#\",\"hreflang\":\"en-US\",\"href\":\"https://cmr.earthdata.nasa.gov/browse-scaler/browse_images/granules/G2095548655-LPCLOUD?h=512&w=512\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-bulk-download/browse\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/resources/e-learning/getting-started-with-cloud-native-harmonized-landsat-sentinel-2-hls-data-in-r/\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/browse#\",\"hreflang\":\"en-US\",\"href\":\"https://wiki.earthdata.nasa.gov/pages/viewpage.action?pageId=195432390\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/browse#\",\"hreflang\":\"en-US\",\"href\":\"https://worldview.earthdata.nasa.gov/?v=-191.12397594071413,-86.52209371542455,182.39111268571813,89.5139950740695&t=2020-10-15-T16%3A46%3A06Z&l=Reference_Labels(hidden),Reference_Features(hidden),Coastlines,HLS_S30_Nadir_BRDF_Adjusted_Reflectance(hidden),VIIRS_NOAA20_CorrectedReflectance_TrueColor(hidden),VIIRS_SNPP_CorrectedReflectance_TrueColor(hidden),MODIS_Aqua_CorrectedReflectance_TrueColor(hidden),MODIS_Terra_CorrectedReflectance_TrueColor&tr=hls_intro \"}]},{\"processing_level_id\":\"3\",\"boxes\":[\"-83 -180 82 180\"],\"time_start\":\"2000-03-01T00:00:00.000Z\",\"version_id\":\"003\",\"updated\":\"2015-09-30T10:42:35.418Z\",\"dataset_id\":\"ASTER Global Digital Elevation Model V003\",\"has_spatial_subsetting\":false,\"has_transforms\":false,\"has_variables\":false,\"data_center\":\"LPCLOUD\",\"short_name\":\"ASTGTM\",\"organizations\":[\"LP DAAC\",\"NASA/JPL/ASTER\"],\"title\":\"ASTER Global Digital Elevation Model V003\",\"coordinate_system\":\"CARTESIAN\",\"summary\":\"The ASTER Global Digital Elevation Model (GDEM) Version 3 (ASTGTM) provides a global digital elevation model (DEM) of land areas on Earth at a spatial resolution of 1 arc second (approximately 30 meter horizontal posting at the equator).\\\\r\\\\n\\\\r\\\\nThe development of the ASTER GDEM data products is a collaborative effort between National Aeronautics and Space Administration (NASA) and Japan\\xe2\\x80\\x99s Ministry of Economy, Trade, and Industry (METI). The ASTER GDEM data products are created by the Sensor Information Laboratory Corporation (SILC) in Tokyo. \\\\r\\\\n\\\\r\\\\nThe ASTER GDEM Version 3 data product was created from the automated processing of the entire ASTER Level 1A (https://doi.org/10.5067/ASTER/AST_L1A.003) archive of scenes acquired between March 1, 2000, and November 30, 2013. Stereo correlation was used to produce over one million individual scene based ASTER DEMs, to which cloud masking was applied. All cloud screened DEMs and non-cloud screened DEMs were stacked. Residual bad values and outliers were removed. In areas with limited data stacking, several existing reference DEMs were used to supplement ASTER data to correct for residual anomalies. Selected data were averaged to create final pixel values before partitioning the data into 1 degree latitude by 1 degree longitude tiles with a one pixel overlap. To correct elevation values of water body surfaces, the ASTER Global Water Bodies Database (ASTWBD) (https://doi.org/10.5067/ASTER/ASTWBD.001) Version 1 data product was also generated. \\\\r\\\\n\\\\r\\\\nThe geographic coverage of the ASTER GDEM extends from 83\\xc2\\xb0 North to 83\\xc2\\xb0 South. Each tile is distributed in GeoTIFF format and projected on the 1984 World Geodetic System (WGS84)/1996 Earth Gravitational Model (EGM96) geoid. Each of the 22,912 tiles in the collection contain at least 0.01% land area. \\\\r\\\\n\\\\r\\\\nProvided in the ASTER GDEM product are layers for DEM and number of scenes (NUM). The NUM layer indicates the number of scenes that were processed for each pixel and the source of the data.\\\\r\\\\n\\\\r\\\\nWhile the ASTER GDEM Version 3 data products offer substantial improvements over Version 2, users are advised that the products still may contain anomalies and artifacts that will reduce its usability for certain applications. \\\\r\\\\n\\\\r\\\\nImprovements/Changes from Previous Versions \\\\r\\\\n\\xe2\\x80\\xa2 Expansion of acquisition coverage to increase the amount of cloud-free input scenes from about 1.5 million in Version 2 to about 1.88 million scenes in Version 3.\\\\r\\\\n\\xe2\\x80\\xa2 Separation of rivers from lakes in the water body processing. \\\\r\\\\n\\xe2\\x80\\xa2 Minimum water body detection size decreased from 1 km2 to 0.2 km2. \",\"time_end\":\"2013-11-30T23:59:59.999Z\",\"service_features\":{\"opendap\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"esi\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false},\"harmony\":{\"has_formats\":false,\"has_variables\":false,\"has_transforms\":false,\"has_spatial_subsetting\":false,\"has_temporal_subsetting\":false}},\"orbit_parameters\":{},\"id\":\"C1711961296-LPCLOUD\",\"has_formats\":false,\"consortiums\":[\"GEOSS\",\"EOSDIS\"],\"original_format\":\"UMM_JSON\",\"archive_center\":\"LP DAAC\",\"has_temporal_subsetting\":false,\"browse_flag\":true,\"platforms\":[\"Terra\"],\"online_access_flag\":true,\"links\":[{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/data#\",\"hreflang\":\"en-US\",\"href\":\"https://search.earthdata.nasa.gov/search?q= C1711961296-LPCLOUD\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://doi.org/10.5067/ASTER/ASTGTM.003\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/metadata#\",\"hreflang\":\"en-US\",\"href\":\"https://asterweb.jpl.nasa.gov/\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/documentation#\",\"hreflang\":\"en-US\",\"href\":\"https://lpdaac.usgs.gov/documents/434/ASTGTM_User_Guide_V3.pdf\"},{\"rel\":\"http://esipfed.org/ns/fedsearch/1.1/browse#\",\"hreflang\":\"en-US\",\"href\":\"https://cmr.earthdata.nasa.gov/browse-scaler/browse_images/granules/G1726374754-LPCLOUD?h=512&w=512\"}]}]}}'\n\n\nA more convenient way to work with this information is to use json formatted data. I’m using pretty print pprint to print the data in an easy to read way.\nNote - response.json() will format our response in json - ['feed']['entry'] returns all entries that CMR returned in the request (not the same as CMR-Hits) - [0] returns the first entry. Reminder that python starts indexing at 0, not 1!\n\npprint(response.json()['feed']['entry'][0])\n\n{'archive_center': 'LP DAAC',\n 'boxes': ['-90 -180 90 180'],\n 'browse_flag': True,\n 'collection_data_type': 'OTHER',\n 'consortiums': ['GEOSS', 'EOSDIS'],\n 'coordinate_system': 'CARTESIAN',\n 'data_center': 'LPCLOUD',\n 'dataset_id': 'HLS Landsat Operational Land Imager Surface Reflectance and '\n               'TOA Brightness Daily Global 30m v2.0',\n 'has_formats': False,\n 'has_spatial_subsetting': False,\n 'has_temporal_subsetting': False,\n 'has_transforms': False,\n 'has_variables': False,\n 'id': 'C2021957657-LPCLOUD',\n 'links': [{'href': 'https://search.earthdata.nasa.gov/search?q=C2021957657-LPCLOUD',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#'},\n           {'href': 'https://doi.org/10.5067/HLS/HLSL30.002',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#'},\n           {'href': 'https://lpdaac.usgs.gov/',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/1118/HLS_User_Guide_V2.pdf',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/769/HLS_ATBD_V15_provisional.pdf',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/768/HLS_Quick_Guide_v011.pdf',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-tutorial/browse',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-super-script/browse',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://cmr.earthdata.nasa.gov/browse-scaler/browse_images/granules/G2095313663-LPCLOUD?h=512&w=512',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/browse#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-bulk-download/browse',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/resources/e-learning/getting-started-with-cloud-native-harmonized-landsat-sentinel-2-hls-data-in-r/',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'}],\n 'online_access_flag': True,\n 'orbit_parameters': {},\n 'organizations': ['LP DAAC', 'NASA/IMPACT'],\n 'original_format': 'UMM_JSON',\n 'platforms': ['LANDSAT-8'],\n 'processing_level_id': '3',\n 'service_features': {'esi': {'has_formats': False,\n                              'has_spatial_subsetting': False,\n                              'has_temporal_subsetting': False,\n                              'has_transforms': False,\n                              'has_variables': False},\n                      'harmony': {'has_formats': False,\n                                  'has_spatial_subsetting': False,\n                                  'has_temporal_subsetting': False,\n                                  'has_transforms': False,\n                                  'has_variables': False},\n                      'opendap': {'has_formats': False,\n                                  'has_spatial_subsetting': False,\n                                  'has_temporal_subsetting': False,\n                                  'has_transforms': False,\n                                  'has_variables': False}},\n 'short_name': 'HLSL30',\n 'summary': 'The Harmonized Landsat and Sentinel-2 (HLS) project provides '\n            'consistent surface reflectance (SR) and top of atmosphere (TOA) '\n            'brightness data from the Operational Land Imager (OLI) aboard the '\n            'joint NASA/USGS Landsat 8 satellite and the Multi-Spectral '\n            'Instrument (MSI) aboard Europe’s Copernicus Sentinel-2A and '\n            'Sentinel-2B satellites. The combined measurement enables global '\n            'observations of the land every 2–3 days at 30-meter (m) spatial '\n            'resolution. The HLS project uses a set of algorithms to obtain '\n            'seamless products from OLI and MSI that include atmospheric '\n            'correction, cloud and cloud-shadow masking, spatial '\n            'co-registration and common gridding, illumination and view angle '\n            'normalization, and spectral bandpass adjustment.\\r\\n'\n            '\\r\\n'\n            'The HLSL30 product provides 30-m Nadir Bidirectional Reflectance '\n            'Distribution Function (BRDF)-Adjusted Reflectance (NBAR) and is '\n            'derived from Landsat 8 OLI data products. The HLSS30 and HLSL30 '\n            'products are gridded to the same resolution and Military Grid '\n            'Reference System '\n            '([MGRS](https://hls.gsfc.nasa.gov/products-description/tiling-system/)) '\n            'tiling system, and thus are “stackable” for time series '\n            'analysis.\\r\\n'\n            '\\r\\n'\n            'The HLSL30 product is provided in Cloud Optimized GeoTIFF (COG) '\n            'format, and each band is distributed as a separate file. There '\n            'are 11 bands included in the HLSL30 product along with one '\n            'quality assessment (QA) band and four angle bands. See the User '\n            'Guide for a more detailed description of the individual bands '\n            'provided in the HLSL30 product.',\n 'time_start': '2013-04-11T00:00:00.000Z',\n 'title': 'HLS Landsat Operational Land Imager Surface Reflectance and TOA '\n          'Brightness Daily Global 30m v2.0',\n 'updated': '2015-12-03T10:57:07.000Z',\n 'version_id': '2.0'}\n\n\nThe first response contains a lot more information than we need. We’ll narrow in on a few fields to get a feel for what we have. We’ll print the name of the dataset (dataset_id) and the concept id (id). We can build this variable and print statement like we did above with the url variable.\n\ncollections = response.json()['feed']['entry']\n\n\nfor collection in collections:\n    print(f'{collection[\"archive_center\"]} | {collection[\"dataset_id\"]} | {collection[\"id\"]}')\n\nLP DAAC | HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0 | C2021957657-LPCLOUD\nLP DAAC | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | C2021957295-LPCLOUD\nLP DAAC | ASTER Global Digital Elevation Model V003 | C1711961296-LPCLOUD\n\n\nIn some situations we may be expecting a certain number of results. Only 10 datasets are return be default. This can be modified by setting the page_size parameter to a different any value less than or equal to 2000 (2000 is the maximum number of results return by CMR). Note, this is different that what we see from CMR-Hits in the header, which is the number of entries found that are available for request.\n\n\n\nIn NASA speak, Granules are files or groups of files. In this example, we will search for ECO2LSTE version 1 for a specified region of interest and datetime range.\nWe need to change the resource url to look for granules instead of collections\n\nurl = f'{CMR_OPS}/{\"granules\"}'\n\nWe will search by concept_id, temporal, and bounding_box. Details about these search parameters can be found in the CMR API Documentation.\nThe formatting of the values for each parameter is quite specific.\nconcept_id parameter is one to many collections/collection id(s) assigned to a list\ntemporal parameter are dates in ISO 8061 format yyyy-MM-ddTHH:mm:ssZ\nbounding_box parameter are coordinates in the order: lower left longitude, lower left latitude, upper right longitude, upper right latitude\n\ncollection_id = ['C2021957657-LPCLOUD', 'C2021957295-LPCLOUD']\ndate_range = '2020-10-17T00:00:00Z,2020-11-18T23:59:59Z'\nbbox = '-120.45264628,34.51050622,-120.40432448,34.53239876'\n\n\nresponse = requests.get(url, \n                        params={\n                            'concept_id': collection_id,\n                            'temporal': date_range,\n                            'bounding_box': bbox,\n                            'page_size': 200,\n                            },\n                        headers={\n                            'Accept': 'application/json'\n                            }\n                       )\nprint(response.status_code)\n\n200\n\n\n\nprint(response.headers['CMR-Hits'])\n\n10\n\n\n\ngranules = response.json()['feed']['entry']\nfor granule in granules:\n    print(f'{granule[\"data_center\"]} | {granule[\"dataset_id\"]} | {granule[\"id\"]}')\n\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2167580011-LPCLOUD\nLPCLOUD | HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0 | G2152756095-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2167475882-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2167295721-LPCLOUD\nLPCLOUD | HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0 | G2152682346-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2166867404-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2166768089-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2166693426-LPCLOUD\nLPCLOUD | HLS Landsat Operational Land Imager Surface Reflectance and TOA Brightness Daily Global 30m v2.0 | G2152120260-LPCLOUD\nLPCLOUD | HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance Daily Global 30m v2.0 | G2165191762-LPCLOUD\n\n\n\npprint(granules[0])\n\n{'browse_flag': True,\n 'collection_concept_id': 'C2021957295-LPCLOUD',\n 'coordinate_system': 'GEODETIC',\n 'data_center': 'LPCLOUD',\n 'dataset_id': 'HLS Sentinel-2 Multi-spectral Instrument Surface Reflectance '\n               'Daily Global 30m v2.0',\n 'day_night_flag': 'DAY',\n 'id': 'G2167580011-LPCLOUD',\n 'links': [{'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B09.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B09.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B09.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B07.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B07.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B07.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B01.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B01.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B01.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B04.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B04.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B04.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B12.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B12.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B12.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.SZA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.SZA.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.SZA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B03.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B03.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B03.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B11.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B11.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B11.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B02.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B02.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B02.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B08.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B08.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B08.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B10.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B10.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B10.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.SAA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.SAA.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.SAA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.VZA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.VZA.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.VZA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B05.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B05.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B05.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B06.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B06.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B06.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B8A.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.B8A.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.B8A.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.Fmask.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.Fmask.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.Fmask.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.VAA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.VAA.tif'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.VAA.tif',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/s3#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-public/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0_stac.json',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0_stac.json '\n                     '(EXTENDED METADATA)'},\n           {'href': 's3://lp-prod-public/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0_stac.json',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule (EXTENDED METADATA)'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.cmr.xml',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.cmr.xml '\n                     '(EXTENDED METADATA)'},\n           {'href': 's3://lp-prod-protected/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.cmr.xml',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule (EXTENDED METADATA)'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/s3credentials',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#',\n            'title': 'api endpoint to retrieve temporary credentials valid for '\n                     'same-region direct s3 access (VIEW RELATED INFORMATION)'},\n           {'href': 'https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-public/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.jpg',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/browse#',\n            'title': 'Download HLS.S30.T10SGD.2020292T184411.v2.0.jpg'},\n           {'href': 's3://lp-prod-public/HLSS30.020/HLS.S30.T10SGD.2020292T184411.v2.0/HLS.S30.T10SGD.2020292T184411.v2.0.jpg',\n            'hreflang': 'en-US',\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/browse#',\n            'title': 'This link provides direct download access via S3 to the '\n                     'granule'},\n           {'href': 'https://search.earthdata.nasa.gov/search?q=C2021957295-LPCLOUD',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/data#'},\n           {'href': 'https://doi.org/10.5067/HLS/HLSS30.002',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#'},\n           {'href': 'https://lpdaac.usgs.gov/',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/metadata#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/1118/HLS_User_Guide_V2.pdf',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/769/HLS_ATBD_V15_provisional.pdf',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/documents/768/HLS_Quick_Guide_v011.pdf',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-tutorial/browse',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-super-script/browse',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://git.earthdata.nasa.gov/projects/LPDUR/repos/hls-bulk-download/browse',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'},\n           {'href': 'https://lpdaac.usgs.gov/resources/e-learning/getting-started-with-cloud-native-harmonized-landsat-sentinel-2-hls-data-in-r/',\n            'hreflang': 'en-US',\n            'inherited': True,\n            'rel': 'http://esipfed.org/ns/fedsearch/1.1/documentation#'}],\n 'online_access_flag': True,\n 'original_format': 'ECHO10',\n 'polygons': [['34.2068165 -119.6382697 35.1952508 -119.5980052 35.2231329 '\n               '-120.8028976 34.2336951 -120.8289365 34.2068165 -119.6382697']],\n 'producer_granule_id': 'HLS.S30.T10SGD.2020292T184411',\n 'time_end': '2020-10-18T18:54:56.060Z',\n 'time_start': '2020-10-18T18:54:56.060Z',\n 'title': 'HLS.S30.T10SGD.2020292T184411.v2.0',\n 'updated': '2021-11-17T08:22:16.691Z'}"
  },
  {
    "objectID": "tutorials/additional_resources/Finding_collection_s3_location.html",
    "href": "tutorials/additional_resources/Finding_collection_s3_location.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "We need to determine the path for our products of interest. We can do this through several mechanisms.\n\n\nThe easiest of which is through the PO.DAAC Cloud Dataset Listing page: https://podaac.jpl.nasa.gov/cloud-datasets\n\n\n\nS3 Data Locations from Portal\n\n\nFor each dataset, the ‘Data Access’ tab will have various information, but will always contain the S3 paths listed specifically. Data files will always be found under the ‘protected’ bucket.\n\n\n\nFrom the Earthdata Search Client (search.earthdata.nasa.gov), collection level information can be found by clicking the ‘i’ on a collection search result. An example of this is seen below:\n\n\n\nS3 Data Locations from Search 1\n\n\nOnce on the collection inforamtion screen, the S3 bucket locations can be found by scrolling to the bottom of the information panel. The SWOT_SIMULATED_L2_KARIN_SSH_GLORYS_SCIENCE_V1 example is shown below.\n\n\n\nS3 Data Locations from Search 2\n\n\n\n\n\nOne can query the collection identifier to get information from CMR:\nhttps://cmr.earthdata.nasa.gov/search/concepts/C2152045877-POCLOUD.umm_json\nThe identifier is found on the PO.DAAC Cloud Data Set Listing page entries, called ‘Collection Concept ID’\nResults returned will look like the following:\n{\n    ...\n    \"DirectDistributionInformation\": {\n        \"Region\": \"us-west-2\",\n        \"S3BucketAndObjectPrefixNames\": [\n            \"podaac-ops-cumulus-protected/SWOT_SIMULATED_L2_KARIN_SSH_GLORYS_SCIENCE_V1/\",\n            \"podaac-ops-cumulus-public/SWOT_SIMULATED_L2_KARIN_SSH_GLORYS_SCIENCE_V1/\"\n        ],\n        \"S3CredentialsAPIEndpoint\": \"https://archive.podaac.earthdata.nasa.gov/s3credentials\",\n        \"S3CredentialsAPIDocumentationURL\": \"https://archive.podaac.earthdata.nasa.gov/s3credentialsREADME\"\n    },\n    ...\n}"
  },
  {
    "objectID": "tutorials/additional_resources/On-prem_Cloud_example.html",
    "href": "tutorials/additional_resources/On-prem_Cloud_example.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "This tutorial will combine several workflow steps and components from the previous days, demonstrating the process of using the geolocation of data available outside of the Earthdata Cloud to then access coincident variables of cloud-accessible data. This may be a common use case as NASA Earthdata continues to migrate to the cloud, producing a “hybrid” data archive across Amazon Web Services (AWS) and original on-premise data storage systems. Additionally, you may also want to combine field measurements with remote sensing data available on the Earthdata Cloud.\nThis specific example explores the pairing of the ICESat-2 ATL07 Sea Ice Height data product, currently (as of November 2021) available publicly via direct download at the NSIDC DAAC, along with Sea Surface Temperature (SST) from the GHRSST MODIS L2 dataset (MODIS_A-JPL-L2P-v2019.0) available from PO.DAAC on the Earthdata Cloud.\nThe use case we’re looking at today centers over an area north of Greenland for a single day in June, where a melt pond was observed using the NASA OpenAltimetry application. Melt ponds are an important feature of Arctic sea ice dynamics, leading to an decrease in sea ice albedo and other changes in heat balance. Many NASA Earthdata datasets produce variables including sea ice albedo, sea surface temperature, air temperature, and sea ice height, which can be used to better understand these dynamics.\n\n\n\n\n\nAWS instance running in us-west 2\nEarthdata Login\n.netrc file\n\n\n\n\n\n\nSearch for data programmatically using the Common Metadata Repository (CMR), determining granule (file) coverage across two datasets over an area of interest.\nDownload data from an on-premise storage system to our cloud environment.\nRead in 1-dimensional trajectory data (ICESat-2 ATL07) into xarray and perform attribute conversions.\nSelect and read in sea surface temperature (SST) data (MODIS_A-JPL-L2P-v2019.0) from the Earthdata Cloud into xarray.\nExtract, resample, and plot coincident SST data based on ICESat-2 geolocation.\n\n\n\n\n\n\nimport os\nfrom pathlib import Path\nfrom pprint import pprint\n\n# Access via download\nimport requests\n\n# Access AWS S3\nimport s3fs\n\n# Read and work with datasets\nimport xarray as xr\nimport numpy as np\nimport h5py\n\n# For plotting\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nfrom shapely.geometry import box\n\n# For resampling\nimport pyresample\n\n\n\n\nWe are going to focus on getting data for an area north of Greenland for a single day in June.\nThese bounding_box and temporal variables will be used for data search, subset, and access below.\nThe same search and access steps for both datasets can be performed via Earthdata Search using the same spatial and temporal filtering options. See the Earthdata Search tutorial for more information on how to use Earthdata Search to discover and access data from the Earthdata Cloud.\n\n# Bounding Box spatial parameter in decimal degree 'W,S,E,N' format.\nbounding_box = '-62.8,81.7,-56.4,83'\n\n# Each date in yyyy-MM-ddTHH:mm:ssZ format; date range in start,end format\ntemporal = '2019-06-22T00:00:00Z,2019-06-22T23:59:59Z'\n\nSee the Data Discovery with CMR tutorial for more details on how to navigate the NASA Common Metadata Repository (CMR) Application Programming Interface, or API. For some background, the CMR catalogs all data for NASA’s Earth Observing System Data and Information System (EOSDIS). The CMR API allows applications (software, services, etc) to send information to each other. A helpful analogy is a waiter in a restaurant. The waiter takes your drink or food order that you select from the menu, often translated into short-hand, to the bar or kitchen, and then returns (hopefully) with what you ordered when it is ready.\nThe CMR API accepts search terms such as collection name, keywords, datetime range, and location, queries the CMR database and returns the results.\nFor this tutorial, we have already identified the unique identifier, or concept_id for each dataset:\n\nmodis_concept_id = 'C1940473819-POCLOUD'\nicesat2_concept_id = 'C2003771980-NSIDC_ECS'\n\nThis Earthdata Search Project also provides the same data access links that we will identify in the following steps for each dataset (note that you will need an Earthdata Login account to access this project).\n\n\n\nPerform a granule search over our time and area of interest. How many granules are returned?\n\ngranule_url = 'https://cmr.earthdata.nasa.gov/search/granules'\n\n\nresponse = requests.get(granule_url,\n                       params={\n                           'concept_id': icesat2_concept_id,\n                           'temporal': temporal,\n                           'bounding_box': bounding_box,\n                           'page_size': 200,\n                       },\n                       headers={\n                           'Accept': 'application/json'\n                       }\n                      )\nprint(response.headers['CMR-Hits'])\n\n2\n\n\nPrint the file names, size, and links:\n\ngranules = response.json()['feed']['entry']\nfor granule in granules:\n    print(f'{granule[\"producer_granule_id\"]} {granule[\"granule_size\"]} {granule[\"links\"][0][\"href\"]}')\n\nATL07-01_20190622055317_12980301_004_01.h5 237.0905504227 https://n5eil01u.ecs.nsidc.org/DP9/ATLAS/ATL07.004/2019.06.22/ATL07-01_20190622055317_12980301_004_01.h5\nATL07-01_20190622200154_13070301_004_01.h5 230.9151573181 https://n5eil01u.ecs.nsidc.org/DP9/ATLAS/ATL07.004/2019.06.22/ATL07-01_20190622200154_13070301_004_01.h5\n\n\n\n\nAlthough several services are supported for ICESat-2 data, we are demonstrating direct access through the “on-prem” file system at NSIDC for simplicity.\nSome of these services include: - icepyx - From the icepyx documentation: “icepyx is both a software library and a community composed of ICESat-2 data users, developers, and the scientific community. We are working together to develop a shared library of resources - including existing resources, new code, tutorials, and use-cases/examples - that simplify the process of querying, obtaining, analyzing, and manipulating ICESat-2 datasets to enable scientific discovery.” - NSIDC DAAC Data Access and Service API - The API provided by the NSIDC DAAC allows you to access data programmatically using specific temporal and spatial filters. The same subsetting, reformatting, and reprojection services available on select data sets through NASA Earthdata Search can also be applied using this API. - IceFlow - The IceFlow python library simplifies accessing and combining data from several of NASA’s cryospheric altimetry missions, including ICESat/GLAS, Operation IceBridge, and ICESat-2. In particular, IceFlow harmonizes the various file formats and georeferencing parameters across several of the missions’ data sets, allowing you to analyze data across the multi-decadal time series.\nWe’ve found 2 granules. We’ll download the first one and write it to a file with the same name as the producer_granule_id.\nWe need the url for the granule as well. This is href links we printed out above.\n\nicesat_id = granules[0]['producer_granule_id']\nicesat_url = granules[0]['links'][0]['href']\n\nTo retrieve the granule data, we use the requests.get() method, which will utilize the .netrc file on the backend to authenticate the request against Earthdata Login.\n\nr = requests.get(icesat_url)\n\nThe response returned by requests has the same structure as all the other responses: a header and contents. The header information has information about the response, including the size of the data we downloaded in bytes.\n\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\n\nDate: Sun, 12 Dec 2021 01:52:31 GMT\nServer: Apache\nVary: User-Agent\nContent-Disposition: attachment\nContent-Length: 248607461\nKeep-Alive: timeout=15, max=100\nConnection: Keep-Alive\n\n\nThe contents needs to be saved to a file. To keep the directory clean, we will create a downloads directory to store the file. We can use a shell command to do this or use the makedirs method from the os package.\n\nos.makedirs(\"downloads\", exist_ok=True)\n\nYou should see a downloads directory in the file browser.\nTo write the data to a file, we use open to open a file. We need to specify that the file is open for writing by using the write-mode w. We also need to specify that we want to write bytes by setting the binary-mode b. This is important because the response contents are bytes. The default mode for open is text-mode. So make sure you use b.\nWe’ll use the with statement context-manager to open the file, write the contents of the response, and then close the file. Once the data in r.content is written sucessfully to the file, or if there is an error, the file is closed by the context-manager.\nWe also need to prepend the downloads path to the filename. We do this using Path from the pathlib package in the standard library.\n\noutfile = Path('downloads', icesat_id)\n\n\nif not outfile.exists():\n    with open(outfile, 'wb') as f:\n        f.write(r.content)\n\nATL07-01_20190622055317_12980301_004_01.h5 is an HDF5 file. xarray can open this but you need to tell it which group to read the data from. In this case we read the sea ice segment height data for ground-track 1 left-beam. You can explore the variable hierarchy in Earthdata Search, by selecting the Customize option under Download Data.\nThis code block performs the following operations: - Extracts the height_segment_height variable from the heights group, along with the dimension variables contained in the higher level sea_ice_segments group, - Convert attributes from bytestrings to strings, - Drops the HDF attribute DIMENSION_LIST, - Sets _FillValue to NaN\n\nvariable_names = [\n    '/gt1l/sea_ice_segments/latitude',\n    '/gt1l/sea_ice_segments/longitude',\n    '/gt1l/sea_ice_segments/delta_time',\n    '/gt1l/sea_ice_segments/heights/height_segment_height'\n    ]\nwith h5py.File(outfile, 'r') as h5:\n    data_vars = {}\n    for varname in variable_names:\n        var = h5[varname]\n        name = varname.split('/')[-1]\n        # Convert attributes\n        attrs = {}\n        for k, v in var.attrs.items():\n            if k != 'DIMENSION_LIST':\n                if isinstance(v, bytes):\n                    attrs[k] = v.decode('utf-8')\n                else:\n                    attrs[k] = v\n        data = var[:]\n        if '_FillValue' in attrs:\n            data = np.where(data < attrs['_FillValue'], data, np.nan)\n        data_vars[name] = (['segment'], data, attrs)\n    is2_ds = xr.Dataset(data_vars)\n    \nis2_ds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.Dataset>\nDimensions:                (segment: 235584)\nDimensions without coordinates: segment\nData variables:\n    latitude               (segment) float64 82.38 82.38 82.38 ... 72.61 72.61\n    longitude              (segment) float64 -55.11 -55.11 ... 145.1 145.1\n    delta_time             (segment) float64 4.642e+07 4.642e+07 ... 4.642e+07\n    height_segment_height  (segment) float32 nan nan nan ... -0.4335 -0.4463xarray.DatasetDimensions:segment: 235584Coordinates: (0)Data variables: (4)latitude(segment)float6482.38 82.38 82.38 ... 72.61 72.61contentType :referenceInformationcoordinates :delta_time longitudedescription :Latitude, WGS84, North=+, Lat of segment centerlong_name :Latitudesource :ATBD, section 4.4standard_name :latitudeunits :degrees_northvalid_max :90.0valid_min :-90.0array([82.38431982, 82.38431982, 82.38431982, ..., 72.60984638,\n       72.60977493, 72.60970985])longitude(segment)float64-55.11 -55.11 ... 145.1 145.1contentType :referenceInformationcoordinates :delta_time latitudedescription :Longitude, WGS84, East=+,Lon of segment centerlong_name :Longitudesource :ATBD, section 4.4standard_name :longitudeunits :degrees_eastvalid_max :180.0valid_min :-180.0array([-55.10896068, -55.10896068, -55.10896068, ..., 145.05396164,\n       145.05392851, 145.05389832])delta_time(segment)float644.642e+07 4.642e+07 ... 4.642e+07CLASS :DIMENSION_SCALENAME :gt1l/sea_ice_segments/delta_timeREFERENCE_LIST :[(<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)]contentType :physicalMeasurementcoordinates :latitude longitudedescription :Number of GPS seconds since the ATLAS SDP epoch. The ATLAS Standard Data Products (SDP) epoch offset is defined within /ancillary_data/atlas_sdp_gps_epoch as the number of GPS seconds between the GPS epoch (1980-01-06T00:00:00.000000Z UTC) and the ATLAS SDP epoch. By adding the offset contained within atlas_sdp_gps_epoch to delta time parameters, the time in gps_seconds relative to the GPS epoch can be computed.long_name :Elapsed GPS secondssource :telemetrystandard_name :timeunits :seconds since 2018-01-01array([46419293.64266939, 46419293.64266939, 46419293.64266939, ...,\n       46419681.87646231, 46419681.87759533, 46419681.87862704])height_segment_height(segment)float32nan nan nan ... -0.4335 -0.4463_FillValue :3.4028235e+38contentType :referenceInformationcoordinates :../delta_time ../latitude ../longitudedescription :Mean height from along-track segment fit detremined by the sea ice algorithm. The sea ice height is relative to the tide-free MSS.long_name :height of segment surfacesource :ATBD, section 4.2.2.4units :metersarray([        nan,         nan,         nan, ..., -0.46550068,\n       -0.43347716, -0.4462675 ], dtype=float32)Attributes: (0)\n\n\n\nis2_ds.height_segment_height.plot() ;\n\n\n\n\n\n\n\n\n\nresponse = requests.get(granule_url, \n                        params={\n                            'concept_id': modis_concept_id,\n                            'temporal': temporal,\n                            'bounding_box': bounding_box,\n                            'page_size': 200,\n                            },\n                        headers={\n                            'Accept': 'application/json'\n                            }\n                       )\nprint(response.headers['CMR-Hits'])\n\n14\n\n\n\ngranules = response.json()['feed']['entry']\nfor granule in granules:\n    print(f'{granule[\"title\"]} {granule[\"granule_size\"]} {granule[\"links\"][0][\"href\"]}')\n\n20190622000501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 20.71552562713623 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622000501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622014501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 9.34600830078125E-5 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622014501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622032501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 21.307741165161133 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622032501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622050001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 9.34600830078125E-5 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622050001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622050501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 20.065649032592773 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622050501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622064001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 9.34600830078125E-5 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622064001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622064501-JPL-L2P_GHRSST-SSTskin-MODIS_A-N-v02.0-fv01.0 18.602201461791992 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622064501-JPL-L2P_GHRSST-SSTskin-MODIS_A-N-v02.0-fv01.0.nc\n20190622064501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 18.665077209472656 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622064501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622082001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 19.782299995422363 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622082001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622100001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 19.13440227508545 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622100001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622113501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 20.3239164352417 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622113501-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622114001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 9.34600830078125E-5 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622114001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622163001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 19.257243156433105 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622163001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n20190622181001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0 19.93498420715332 s3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622181001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc\n\n\n\n\n\nOur CMR granule search returned 14 files for our time and area of interest. However, not all granules will be suitable for analysis.\nI’ve identified the image with granule id G1956158784-POCLOUD as a good candidate, this is the 9th granule. In this image, our area of interest is close to nadir. This means that the instantaneous field of view over the area of interest cover a smaller area than at the edge of the image.\nWe are looking for the link for direct download access via s3. This is a url but with a prefix s3://. This happens to be the first href link in the metadata.\nFor a single granule we can cut and paste the s3 link. If we have several granules, the s3 links can be extracted with some simple code.\n\ngranule = granules[9]\n\nfor link in granule['links']:\n    if link['href'].startswith('s3://'):\n        s3_link = link['href']\n        \ns3_link\n\n's3://podaac-ops-cumulus-protected/MODIS_A-JPL-L2P-v2019.0/20190622100001-JPL-L2P_GHRSST-SSTskin-MODIS_A-D-v02.0-fv01.0.nc'\n\n\n\n\nAs with the previous S3 download tutorials we need credentials to access data from s3: access keys and tokens.\n\ns3_credentials = requests.get('https://archive.podaac.earthdata.nasa.gov/s3credentials').json()\n\nEssentially, what we are doing in this step is to “mount” the s3 bucket as a file system. This allows us to treat the S3 bucket in a similar way to a local file system.\n\ns3_fs = s3fs.S3FileSystem(\n    key=s3_credentials[\"accessKeyId\"],\n    secret=s3_credentials[\"secretAccessKey\"],\n    token=s3_credentials[\"sessionToken\"],\n)\n\n\n\n\nNow we have the S3FileSystem set up, we can access the granule. xarray cannot open a S3File directly, so we use the open method for the S3FileSystem to open the granule using the endpoint url we extracted from the metadata. We also have to set the mode='rb'. This opens the granule in read-only mode and in byte-mode. Byte-mode is important. By default, open opens a file as text - in this case it would just be a string of characters - and xarray doesn’t know what to do with that.\nWe then pass the S3File object f to xarray.open_dataset. For this dataset, we also have to set decode_cf=False. This switch tells xarray not to use information contained in variable attributes to generate human readable coordinate variables. Normally, this should work for netcdf files but for this particular cloud-hosted dataset, variable attribute data is not in the form expected by xarray. We’ll fix this.\n\nf = s3_fs.open(s3_link, mode='rb')\nmodis_ds = xr.open_dataset(f, decode_cf=False)\n\nIf you click on the Show/Hide Attributes icon (the first document-like icon to the right of coordinate variable metadata) you can see that attributes are one-element arrays containing bytestrings.\n\nmodis_ds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.Dataset>\nDimensions:                  (nj: 2030, ni: 1354, time: 1)\nCoordinates:\n  * time                     (time) int32 1214042401\nDimensions without coordinates: nj, ni\nData variables:\n    lat                      (nj, ni) float32 ...\n    lon                      (nj, ni) float32 ...\n    sea_surface_temperature  (time, nj, ni) int16 ...\n    sst_dtime                (time, nj, ni) int16 ...\n    quality_level            (time, nj, ni) int8 ...\n    sses_bias                (time, nj, ni) int8 ...\n    sses_standard_deviation  (time, nj, ni) int8 ...\n    l2p_flags                (time, nj, ni) int16 ...\n    chlorophyll_a            (time, nj, ni) float32 ...\n    K_490                    (time, nj, ni) int16 ...\n    wind_speed               (time, nj, ni) int8 ...\n    dt_analysis              (time, nj, ni) int8 ...\nAttributes: (12/49)\n    Conventions:                [b'CF-1.7, ACDD-1.3']\n    title:                      [b'MODIS Aqua L2P SST']\n    summary:                    [b'Sea surface temperature retrievals produce...\n    references:                 [b'GHRSST Data Processing Specification v2r5']\n    institution:                [b'NASA/JPL/OBPG/RSMAS']\n    history:                    [b'MODIS L2P created at JPL PO.DAAC']\n    ...                         ...\n    publisher_email:            [b'ghrsst-po@nceo.ac.uk']\n    processing_level:           [b'L2P']\n    cdm_data_type:              [b'swath']\n    startDirection:             [b'Ascending']\n    endDirection:               [b'Descending']\n    day_night_flag:             [b'Day']xarray.DatasetDimensions:nj: 2030ni: 1354time: 1Coordinates: (1)time(time)int321214042401long_name :[b'reference time of sst file']standard_name :[b'time']units :[b'seconds since 1981-01-01 00:00:00']comment :[b'time of first sensor observation']coverage_content_type :[b'coordinate']array([1214042401], dtype=int32)Data variables: (12)lat(nj, ni)float32...long_name :[b'latitude']standard_name :[b'latitude']units :[b'degrees_north']_FillValue :[-999.]valid_min :[-90.]valid_max :[90.]comment :[b'geographical coordinates, WGS84 projection']coverage_content_type :[b'coordinate'][2748620 values with dtype=float32]lon(nj, ni)float32...long_name :[b'longitude']standard_name :[b'longitude']units :[b'degrees_east']_FillValue :[-999.]valid_min :[-180.]valid_max :[180.]comment :[b'geographical coordinates, WGS84 projection']coverage_content_type :[b'coordinate'][2748620 values with dtype=float32]sea_surface_temperature(time, nj, ni)int16...long_name :[b'sea surface temperature']standard_name :[b'sea_surface_skin_temperature']units :[b'kelvin']_FillValue :[-32767]valid_min :[-1000]valid_max :[10000]comment :[b'sea surface temperature from thermal IR (11 um) channels']scale_factor :[0.005]add_offset :[273.15]source :[b'NASA and University of Miami']coordinates :[b'lon lat']coverage_content_type :[b'physicalMeasurement'][2748620 values with dtype=int16]sst_dtime(time, nj, ni)int16...long_name :[b'time difference from reference time']units :[b'seconds']_FillValue :[-32768]valid_min :[-32767]valid_max :[32767]comment :[b'time plus sst_dtime gives seconds after 00:00:00 UTC January 1, 1981']coordinates :[b'lon lat']coverage_content_type :[b'referenceInformation'][2748620 values with dtype=int16]quality_level(time, nj, ni)int8...long_name :[b'quality level of SST pixel']_FillValue :[-128]valid_min :[0]valid_max :[5]comment :[b'thermal IR SST proximity confidence value; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported value']coordinates :[b'lon lat']flag_values :[0 1 2 3 4 5]flag_meanings :[b'no_data bad_data worst_quality low_quality acceptable_quality best_quality']coverage_content_type :[b'qualityInformation'][2748620 values with dtype=int8]sses_bias(time, nj, ni)int8...long_name :[b'SSES bias error based on proximity confidence flags']units :[b'kelvin']_FillValue :[-128]valid_min :[-127]valid_max :[127]comment :[b'thermal IR SST bias error; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported value']scale_factor :[0.15748031]add_offset :[0.]coordinates :[b'lon lat']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=int8]sses_standard_deviation(time, nj, ni)int8...long_name :[b'SSES standard deviation error based on proximity confidence flags']units :[b'kelvin']_FillValue :[-128]valid_min :[-127]valid_max :[127]comment :[b'thermal IR SST standard deviation error; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported value']scale_factor :[0.07874016]add_offset :[10.]coordinates :[b'lon lat']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=int8]l2p_flags(time, nj, ni)int16...long_name :[b'L2P flags']valid_min :[0]valid_max :[16]comment :[b'These flags can be used to further filter data variables']coordinates :[b'lon lat']flag_meanings :[b'microwave land ice lake river']flag_masks :[ 1  2  4  8 16]coverage_content_type :[b'qualityInformation'][2748620 values with dtype=int16]chlorophyll_a(time, nj, ni)float32...long_name :[b'Chlorophyll Concentration, OC3 Algorithm']units :[b'mg m^-3']_FillValue :[-32767.]valid_min :[0.001]valid_max :[100.]comment :[b'non L2P core field']coordinates :[b'lon lat']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=float32]K_490(time, nj, ni)int16...long_name :[b'Diffuse attenuation coefficient at 490 nm (OBPG)']units :[b'm^-1']_FillValue :[-32767]valid_min :[50]valid_max :[30000]comment :[b'non L2P core field']scale_factor :[0.0002]add_offset :[0.]coordinates :[b'lon lat']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=int16]wind_speed(time, nj, ni)int8...long_name :[b'10m wind speed']standard_name :[b'wind_speed']units :[b'm s-1']_FillValue :[-128]valid_min :[-127]valid_max :[127]comment :[b'Wind at 10 meters above the sea surface']scale_factor :[0.2]add_offset :[25.]source :[b'TBD.  Placeholder.  Currently empty']coordinates :[b'lon lat']grid_mapping :[b'TBD']time_offset :[2.]height :[b'10 m']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=int8]dt_analysis(time, nj, ni)int8...long_name :[b'deviation from SST reference climatology']units :[b'kelvin']_FillValue :[-128]valid_min :[-127]valid_max :[127]comment :[b'TBD']scale_factor :[0.1]add_offset :[0.]source :[b'TBD. Placeholder.  Currently empty']coordinates :[b'lon lat']coverage_content_type :[b'auxiliaryInformation'][2748620 values with dtype=int8]Attributes: (49)Conventions :[b'CF-1.7, ACDD-1.3']title :[b'MODIS Aqua L2P SST']summary :[b'Sea surface temperature retrievals produced at the NASA OBPG for the MODIS Aqua sensor.  These have been reformatted to GHRSST GDS specifications by the JPL PO.DAAC']references :[b'GHRSST Data Processing Specification v2r5']institution :[b'NASA/JPL/OBPG/RSMAS']history :[b'MODIS L2P created at JPL PO.DAAC']comment :[b'L2P Core without DT analysis or other ancillary fields; Day, Start Node:Ascending, End Node:Descending; WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported value; Refined']license :[b'GHRSST and PO.DAAC protocol allow data use as free and open.']id :[b'MODIS_A-JPL-L2P-v2019.0']naming_authority :[b'org.ghrsst']product_version :[b'2019.0']uuid :[b'f6e1f61d-c4a4-4c17-8354-0c15e12d688b']gds_version_id :[b'2.0']netcdf_version_id :[b'4.1']date_created :[b'20200221T085224Z']file_quality_level :[3]spatial_resolution :[b'1km']start_time :[b'20190622T100001Z']time_coverage_start :[b'20190622T100001Z']stop_time :[b'20190622T100459Z']time_coverage_end :[b'20190622T100459Z']northernmost_latitude :[89.9862]southernmost_latitude :[66.2723]easternmost_longitude :[-45.9467]westernmost_longitude :[152.489]source :[b'MODIS sea surface temperature observations for the OBPG']platform :[b'Aqua']sensor :[b'MODIS']metadata_link :[b'http://podaac.jpl.nasa.gov/ws/metadata/dataset/?format=iso&shortName=MODIS_A-JPL-L2P-v2019.0']keywords :[b'Oceans > Ocean Temperature > Sea Surface Temperature']keywords_vocabulary :[b'NASA Global Change Master Directory (GCMD) Science Keywords']standard_name_vocabulary :[b'NetCDF Climate and Forecast (CF) Metadata Convention']geospatial_lat_units :[b'degrees_north']geospatial_lat_resolution :[0.01]geospatial_lon_units :[b'degrees_east']geospatial_lon_resolution :[0.01]acknowledgment :[b'The MODIS L2P sea surface temperature data are sponsored by NASA']creator_name :[b'Ed Armstrong, JPL PO.DAAC']creator_email :[b'edward.m.armstrong@jpl.nasa.gov']creator_url :[b'http://podaac.jpl.nasa.gov']project :[b'Group for High Resolution Sea Surface Temperature']publisher_name :[b'The GHRSST Project Office']publisher_url :[b'http://www.ghrsst.org']publisher_email :[b'ghrsst-po@nceo.ac.uk']processing_level :[b'L2P']cdm_data_type :[b'swath']startDirection :[b'Ascending']endDirection :[b'Descending']day_night_flag :[b'Day']\n\n\nTo fix this, we need to extract array elements as scalars, and convert those scalars from bytestrings to strings. We use the decode method to do this. The bytestrings are encoded as utf-8, which is a unicode character format. This is the default encoding for decode but we’ve included it as an argument to be explicit.\nNot all attributes are bytestrings. Some are floats. Take a look at _FillValue, and valid_min and valid_max. To avoid an error, we use the isinstance function to check if the value of an attributes is type bytes - a bytestring. If it is, then we decode it. If not, we just extract the scalar and do nothing else.\nWe also fix the global attributes.\n\ndef fix_attributes(da):\n    '''Decodes bytestring attributes to strings'''\n    for attr, value in da.attrs.items():\n        if isinstance(value[0], bytes):\n            da.attrs[attr] = value[0].decode('utf-8')\n        else:\n            da.attrs[attr] = value[0]\n    return\n\n# Fix variable attributes\nfor var in modis_ds.variables:\n    da = modis_ds[var]\n    fix_attributes(da)\n            \n# Fix global attributes\nfix_attributes(modis_ds)\n\nWith this done, we can use the xarray function decode_cf to convert the attributes.\n\nmodis_ds = xr.decode_cf(modis_ds)\n\n\nmodis_ds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.Dataset>\nDimensions:                  (nj: 2030, ni: 1354, time: 1)\nCoordinates:\n    lat                      (nj, ni) float32 ...\n    lon                      (nj, ni) float32 ...\n  * time                     (time) datetime64[ns] 2019-06-22T10:00:01\nDimensions without coordinates: nj, ni\nData variables:\n    sea_surface_temperature  (time, nj, ni) float32 ...\n    sst_dtime                (time, nj, ni) timedelta64[ns] ...\n    quality_level            (time, nj, ni) float32 ...\n    sses_bias                (time, nj, ni) float32 ...\n    sses_standard_deviation  (time, nj, ni) float32 ...\n    l2p_flags                (time, nj, ni) int16 ...\n    chlorophyll_a            (time, nj, ni) float32 ...\n    K_490                    (time, nj, ni) float32 ...\n    wind_speed               (time, nj, ni) float32 ...\n    dt_analysis              (time, nj, ni) float32 ...\nAttributes: (12/49)\n    Conventions:                CF-1.7, ACDD-1.3\n    title:                      MODIS Aqua L2P SST\n    summary:                    Sea surface temperature retrievals produced a...\n    references:                 GHRSST Data Processing Specification v2r5\n    institution:                NASA/JPL/OBPG/RSMAS\n    history:                    MODIS L2P created at JPL PO.DAAC\n    ...                         ...\n    publisher_email:            ghrsst-po@nceo.ac.uk\n    processing_level:           L2P\n    cdm_data_type:              swath\n    startDirection:             Ascending\n    endDirection:               Descending\n    day_night_flag:             Dayxarray.DatasetDimensions:nj: 2030ni: 1354time: 1Coordinates: (3)lat(nj, ni)float32...long_name :latitudestandard_name :latitudeunits :degrees_northvalid_min :-90.0valid_max :90.0comment :geographical coordinates, WGS84 projectioncoverage_content_type :coordinate[2748620 values with dtype=float32]lon(nj, ni)float32...long_name :longitudestandard_name :longitudeunits :degrees_eastvalid_min :-180.0valid_max :180.0comment :geographical coordinates, WGS84 projectioncoverage_content_type :coordinate[2748620 values with dtype=float32]time(time)datetime64[ns]2019-06-22T10:00:01long_name :reference time of sst filestandard_name :timecomment :time of first sensor observationcoverage_content_type :coordinatearray(['2019-06-22T10:00:01.000000000'], dtype='datetime64[ns]')Data variables: (10)sea_surface_temperature(time, nj, ni)float32...long_name :sea surface temperaturestandard_name :sea_surface_skin_temperatureunits :kelvinvalid_min :-1000valid_max :10000comment :sea surface temperature from thermal IR (11 um) channelssource :NASA and University of Miamicoverage_content_type :physicalMeasurement[2748620 values with dtype=float32]sst_dtime(time, nj, ni)timedelta64[ns]...long_name :time difference from reference timevalid_min :-32767valid_max :32767comment :time plus sst_dtime gives seconds after 00:00:00 UTC January 1, 1981coverage_content_type :referenceInformation[2748620 values with dtype=timedelta64[ns]]quality_level(time, nj, ni)float32...long_name :quality level of SST pixelvalid_min :0valid_max :5comment :thermal IR SST proximity confidence value; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported valueflag_values :0flag_meanings :no_data bad_data worst_quality low_quality acceptable_quality best_qualitycoverage_content_type :qualityInformation[2748620 values with dtype=float32]sses_bias(time, nj, ni)float32...long_name :SSES bias error based on proximity confidence flagsunits :kelvinvalid_min :-127valid_max :127comment :thermal IR SST bias error; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported valuecoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]sses_standard_deviation(time, nj, ni)float32...long_name :SSES standard deviation error based on proximity confidence flagsunits :kelvinvalid_min :-127valid_max :127comment :thermal IR SST standard deviation error; signed byte array: WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported valuecoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]l2p_flags(time, nj, ni)int16...long_name :L2P flagsvalid_min :0valid_max :16comment :These flags can be used to further filter data variablesflag_meanings :microwave land ice lake riverflag_masks :1coverage_content_type :qualityInformation[2748620 values with dtype=int16]chlorophyll_a(time, nj, ni)float32...long_name :Chlorophyll Concentration, OC3 Algorithmunits :mg m^-3valid_min :0.001valid_max :100.0comment :non L2P core fieldcoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]K_490(time, nj, ni)float32...long_name :Diffuse attenuation coefficient at 490 nm (OBPG)units :m^-1valid_min :50valid_max :30000comment :non L2P core fieldcoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]wind_speed(time, nj, ni)float32...long_name :10m wind speedstandard_name :wind_speedunits :m s-1valid_min :-127valid_max :127comment :Wind at 10 meters above the sea surfacesource :TBD.  Placeholder.  Currently emptygrid_mapping :TBDtime_offset :2.0height :10 mcoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]dt_analysis(time, nj, ni)float32...long_name :deviation from SST reference climatologyunits :kelvinvalid_min :-127valid_max :127comment :TBDsource :TBD. Placeholder.  Currently emptycoverage_content_type :auxiliaryInformation[2748620 values with dtype=float32]Attributes: (49)Conventions :CF-1.7, ACDD-1.3title :MODIS Aqua L2P SSTsummary :Sea surface temperature retrievals produced at the NASA OBPG for the MODIS Aqua sensor.  These have been reformatted to GHRSST GDS specifications by the JPL PO.DAACreferences :GHRSST Data Processing Specification v2r5institution :NASA/JPL/OBPG/RSMAShistory :MODIS L2P created at JPL PO.DAACcomment :L2P Core without DT analysis or other ancillary fields; Day, Start Node:Ascending, End Node:Descending; WARNING Some applications are unable to properly handle signed byte values. If values are encountered > 127, please subtract 256 from this reported value; Refinedlicense :GHRSST and PO.DAAC protocol allow data use as free and open.id :MODIS_A-JPL-L2P-v2019.0naming_authority :org.ghrsstproduct_version :2019.0uuid :f6e1f61d-c4a4-4c17-8354-0c15e12d688bgds_version_id :2.0netcdf_version_id :4.1date_created :20200221T085224Zfile_quality_level :3spatial_resolution :1kmstart_time :20190622T100001Ztime_coverage_start :20190622T100001Zstop_time :20190622T100459Ztime_coverage_end :20190622T100459Znorthernmost_latitude :89.9862southernmost_latitude :66.2723easternmost_longitude :-45.9467westernmost_longitude :152.489source :MODIS sea surface temperature observations for the OBPGplatform :Aquasensor :MODISmetadata_link :http://podaac.jpl.nasa.gov/ws/metadata/dataset/?format=iso&shortName=MODIS_A-JPL-L2P-v2019.0keywords :Oceans > Ocean Temperature > Sea Surface Temperaturekeywords_vocabulary :NASA Global Change Master Directory (GCMD) Science Keywordsstandard_name_vocabulary :NetCDF Climate and Forecast (CF) Metadata Conventiongeospatial_lat_units :degrees_northgeospatial_lat_resolution :0.01geospatial_lon_units :degrees_eastgeospatial_lon_resolution :0.01acknowledgment :The MODIS L2P sea surface temperature data are sponsored by NASAcreator_name :Ed Armstrong, JPL PO.DAACcreator_email :edward.m.armstrong@jpl.nasa.govcreator_url :http://podaac.jpl.nasa.govproject :Group for High Resolution Sea Surface Temperaturepublisher_name :The GHRSST Project Officepublisher_url :http://www.ghrsst.orgpublisher_email :ghrsst-po@nceo.ac.ukprocessing_level :L2Pcdm_data_type :swathstartDirection :AscendingendDirection :Descendingday_night_flag :Day\n\n\nLet’s make a quick plot to take a look at the sea_surface_temperature variable.\n\nmodis_ds.sea_surface_temperature.plot() ;\n\n\n\n\n\n\n\n\nmap_proj = ccrs.NorthPolarStereo()\n\nfig = plt.figure(figsize=(10,5))\nax = fig.add_subplot(projection=map_proj)\nax.coastlines()\n\n# Plot MODIS sst, save object as sst_img, so we can add colorbar\nsst_img = ax.pcolormesh(modis_ds.lon, modis_ds.lat, modis_ds.sea_surface_temperature[0,:,:], \n                        vmin=240, vmax=270,  # Set max and min values for plotting\n                        cmap='viridis', shading='auto',   # shading='auto' to avoid warning\n                        transform=ccrs.PlateCarree())  # coords are lat,lon but map if NPS \n\n# Plot IS2 surface height \nis2_img = ax.scatter(is2_ds.longitude, is2_ds.latitude,\n                     c=is2_ds.height_segment_height, \n                     vmax=1.5,  # Set max height to plot\n                     cmap='Reds', alpha=0.6, s=2,\n                     transform=ccrs.PlateCarree())\n\n# Add colorbars\nfig.colorbar(sst_img, label='MODIS SST (K)')\nfig.colorbar(is2_img, label='ATL07 Height (m)')\n\n\n<matplotlib.colorbar.Colorbar at 0x7fb3944adb50>\n\n\n\n\n\n\n\n\nThe MODIS SST is swath data, not a regularly-spaced grid of sea surface temperatures. ICESat-2 sea surface heights are irregularly spaced segments along one ground-track traced by the ATLAS instrument on-board ICESat-2. Fortunately, pyresample allows us to resample swath data.\npyresample has many resampling methods. We’re going to use the nearest neighbour resampling method, which is implemented using a k-dimensional tree algorithm or K-d tree. K-d trees are data structures that improve search efficiency for large data sets.\nThe first step is to define the geometry of the ICESat-2 and MODIS data. To do this we use the latitudes and longitudes of the datasets.\n\nis2_geometry = pyresample.SwathDefinition(lons=is2_ds.longitude,\n                                          lats=is2_ds.latitude)\n\n\nmodis_geometry = pyresample.SwathDefinition(lons=modis_ds.lon, lats=modis_ds.lat)\n\nWe then implement the resampling method, passing the two geometries we have defined, the data array we want to resample - in this case sea surface temperature, and a search radius. The resampling method expects a numpy.Array rather than an xarray.DataArray, so we use values to get the data as a numpy.Array.\nWe set the search radius to 1000 m. The MODIS data is nominally 1km spacing.\n\nsearch_radius=1000.\nfill_value = np.nan\nis2_sst = pyresample.kd_tree.resample_nearest(\n    modis_geometry,\n    modis_ds.sea_surface_temperature.values,\n    is2_geometry,\n    search_radius,\n    fill_value=fill_value\n)\n\n\nis2_sst\n\narray([263.375, 263.375, 263.375, ...,     nan,     nan,     nan],\n      dtype=float32)\n\n\n\nis2_ds['sea_surface_temperature'] = xr.DataArray(is2_sst, dims='segment')\nis2_ds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.Dataset>\nDimensions:                  (segment: 235584)\nDimensions without coordinates: segment\nData variables:\n    latitude                 (segment) float64 82.38 82.38 82.38 ... 72.61 72.61\n    longitude                (segment) float64 -55.11 -55.11 ... 145.1 145.1\n    delta_time               (segment) float64 4.642e+07 4.642e+07 ... 4.642e+07\n    height_segment_height    (segment) float32 nan nan nan ... -0.4335 -0.4463\n    sea_surface_temperature  (segment) float32 263.4 263.4 263.4 ... nan nan nanxarray.DatasetDimensions:segment: 235584Coordinates: (0)Data variables: (5)latitude(segment)float6482.38 82.38 82.38 ... 72.61 72.61contentType :referenceInformationcoordinates :delta_time longitudedescription :Latitude, WGS84, North=+, Lat of segment centerlong_name :Latitudesource :ATBD, section 4.4standard_name :latitudeunits :degrees_northvalid_max :90.0valid_min :-90.0array([82.38431982, 82.38431982, 82.38431982, ..., 72.60984638,\n       72.60977493, 72.60970985])longitude(segment)float64-55.11 -55.11 ... 145.1 145.1contentType :referenceInformationcoordinates :delta_time latitudedescription :Longitude, WGS84, East=+,Lon of segment centerlong_name :Longitudesource :ATBD, section 4.4standard_name :longitudeunits :degrees_eastvalid_max :180.0valid_min :-180.0array([-55.10896068, -55.10896068, -55.10896068, ..., 145.05396164,\n       145.05392851, 145.05389832])delta_time(segment)float644.642e+07 4.642e+07 ... 4.642e+07CLASS :DIMENSION_SCALENAME :gt1l/sea_ice_segments/delta_timeREFERENCE_LIST :[(<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)\n (<HDF5 object reference>, 0) (<HDF5 object reference>, 0)]contentType :physicalMeasurementcoordinates :latitude longitudedescription :Number of GPS seconds since the ATLAS SDP epoch. The ATLAS Standard Data Products (SDP) epoch offset is defined within /ancillary_data/atlas_sdp_gps_epoch as the number of GPS seconds between the GPS epoch (1980-01-06T00:00:00.000000Z UTC) and the ATLAS SDP epoch. By adding the offset contained within atlas_sdp_gps_epoch to delta time parameters, the time in gps_seconds relative to the GPS epoch can be computed.long_name :Elapsed GPS secondssource :telemetrystandard_name :timeunits :seconds since 2018-01-01array([46419293.64266939, 46419293.64266939, 46419293.64266939, ...,\n       46419681.87646231, 46419681.87759533, 46419681.87862704])height_segment_height(segment)float32nan nan nan ... -0.4335 -0.4463_FillValue :3.4028235e+38contentType :referenceInformationcoordinates :../delta_time ../latitude ../longitudedescription :Mean height from along-track segment fit detremined by the sea ice algorithm. The sea ice height is relative to the tide-free MSS.long_name :height of segment surfacesource :ATBD, section 4.2.2.4units :metersarray([        nan,         nan,         nan, ..., -0.46550068,\n       -0.43347716, -0.4462675 ], dtype=float32)sea_surface_temperature(segment)float32263.4 263.4 263.4 ... nan nan nanarray([263.375, 263.375, 263.375, ...,     nan,     nan,     nan],\n      dtype=float32)Attributes: (0)\n\n\n\n\n\nThis is a quick plot of the extracted data. We’re using matplotlib so we can use latitude as the x-value:\n\nis2_ds = is2_ds.set_coords(['latitude'])\n\nfig, ax1 = plt.subplots(figsize=(15, 7))\nax1.set_xlim(82.,88.)\nax1.plot(is2_ds.latitude, is2_ds.sea_surface_temperature, \n         color='orange', label='SST', zorder=3)\nax1.set_ylabel('SST (K)')\n\nax2 = ax1.twinx()\nax2.plot(is2_ds.latitude, is2_ds.height_segment_height, label='Height')\nax2.set_ylabel('Height (m)')\n\nfig.legend()\n\n<matplotlib.legend.Legend at 0x7fb39fcd8040>"
  },
  {
    "objectID": "tutorials/Getting_started_setup.html",
    "href": "tutorials/Getting_started_setup.html",
    "title": "Setup for tutorials",
    "section": "",
    "text": "This tutorial will help you set up your JupyterHub (or Hub) with tutorials and other materials from our Workshop folder."
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#step-1.-login-to-the-hub",
    "href": "tutorials/Getting_started_setup.html#step-1.-login-to-the-hub",
    "title": "Setup for tutorials",
    "section": "Step 1. Login to the Hub",
    "text": "Step 1. Login to the Hub\nPlease go to Jupyter Hub and Log in with your GitHub Account, and select “Small”.\nAlternatively, you can also click this badge to launch the Hub:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote: It takes a few minutes for the Hub to load. Please be patient!\n\nWhile the Hub loads, we’ll:\n\nDiscuss cloud environments\n\nSee how my Desktop is setup\n\nDiscuss python and conda environments\n\nThen, when the Hub is loaded, we’ll get oriented in the Hub."
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#discussion-cloud-environment",
    "href": "tutorials/Getting_started_setup.html#discussion-cloud-environment",
    "title": "Setup for tutorials",
    "section": "Discussion: Cloud environment",
    "text": "Discussion: Cloud environment\nA brief overview. See NASA Openscapes Cloud Environment in the 2021-Cloud-Hackathon book for more detail.\n\nCloud infrastructure\n\nCloud: AWS us-west-2\n\nData: AWS S3 (cloud) and NASA DAAC data centers (on-prem).\n\nCloud compute environment: 2i2c Jupyterhub deployment\n\nIDE: JupyterLab"
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#discussion-my-desktop-setup",
    "href": "tutorials/Getting_started_setup.html#discussion-my-desktop-setup",
    "title": "Setup for tutorials",
    "section": "Discussion: My desktop setup",
    "text": "Discussion: My desktop setup\nI’ll screenshare to show and/or talk through how I have oriented the following software we’re using:\n\nWorkshop Book\nSlack"
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#discussion-python-and-conda-environments",
    "href": "tutorials/Getting_started_setup.html#discussion-python-and-conda-environments",
    "title": "Setup for tutorials",
    "section": "Discussion: Python and Conda environments",
    "text": "Discussion: Python and Conda environments\nWhy Python?\n\n\n\nPython Data Stack. Source: Jake VanderPlas, “The State of the Stack,” SciPy Keynote (SciPy 2015).\n\n\nDefault Python Environment:\nWe’ve set up the Python environment with conda.\n\n\n\n\n\n\nConda environment\n\n\n\n\n\nname: openscapes\nchannels:\n  - conda-forge\ndependencies:\n  - python=3.9\n  - pangeo-notebook\n  - awscli~=1.20\n  - boto3~=1.19\n  - gdal~=3.3\n  - rioxarray~=0.8\n  - xarray~=0.19\n  - h5netcdf~=0.11\n  - netcdf4~=1.5\n  - h5py~=2.10\n  - geoviews~=1.9\n  - matplotlib-base~=3.4\n  - hvplot~=0.7\n  - pyproj~=3.2\n  - bqplot~=0.12\n  - geopandas~=0.10\n  - zarr~=2.10\n  - cartopy~=0.20\n  - shapely==1.7.1\n  - pyresample~=1.22\n  - joblib~=1.1\n  - pystac-client~=0.3\n  - s3fs~=2021.7\n  - ipyleaflet~=0.14\n  - sidecar~=0.5\n  - jupyterlab-geojson~=3.1\n  - jupyterlab-git\n  - jupyter-resource-usage\n  - ipympl~=0.6\n  - conda-lock~=0.12\n  - pooch~=1.5\n  - pip\n  - pip:\n    - tqdm\n    - harmony-py\n    - earthdata\n    - zarr-eosdis-store\n\n\n\n\nBash terminal and installed software\nLibraries that are available from the terminal\n\ngdal 3.3 commands ( gdalinfo, gdaltransform…)\nhdf5 commands ( h5dump, h5ls..)\nnetcdf4 commands (ncdump, ncinfo …)\njq (parsing json files or streams from curl)\ncurl (fetch resources from the web)\nawscli (AWS API client, to interact with AWS cloud services)\nvim (editor)\ntree ( directory tree)\nmore …\n\n\n\nUpdating the environment\nScientific Python is a vast space and we only included libraries that are needed in our tutorials. Our default environment can be updated to include any Python library that’s available on pip or conda.\nThe project used to create our default environment is called corn (as it can include many Python kernels).\nIf we want to update a library or install a whole new environment we need to open an issue on this repository.\n\n\ncorn 🌽"
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#step-2.-jupyterhub-orientation",
    "href": "tutorials/Getting_started_setup.html#step-2.-jupyterhub-orientation",
    "title": "Setup for tutorials",
    "section": "Step 2. JupyterHub orientation",
    "text": "Step 2. JupyterHub orientation\nNow that the Hub is loaded, let’s get oriented.\n\n\n\n\n\n\nFirst impressions\n\nLauncher & the big blue button\n“home directory”"
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#step-3.-navigate-to-the-workshop-folder",
    "href": "tutorials/Getting_started_setup.html#step-3.-navigate-to-the-workshop-folder",
    "title": "Setup for tutorials",
    "section": "Step 3. Navigate to the Workshop folder",
    "text": "Step 3. Navigate to the Workshop folder\nThe workshop folder 2022-ECOSTRESS-Cloud-Workshop is in the shared folder on JupyterHub."
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#jupyter-notebooks",
    "href": "tutorials/Getting_started_setup.html#jupyter-notebooks",
    "title": "Setup for tutorials",
    "section": "Jupyter notebooks",
    "text": "Jupyter notebooks\nLet’s get oriented to Jupyter notebooks, which we’ll use in all the tutorials."
  },
  {
    "objectID": "tutorials/Getting_started_setup.html#how-do-i-end-my-session",
    "href": "tutorials/Getting_started_setup.html#how-do-i-end-my-session",
    "title": "Setup for tutorials",
    "section": "How do I end my session?",
    "text": "How do I end my session?\n(Also see How do I end my Openscapes session? Will I lose all of my work?) When you are finished working for the day it is important to explicitly log out of your Openscapes session. The reason for this is it will save money and is a good habit to be in. When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed.\nStopping the server happens automatically when you log out, so navigate to “File -> Log Out” and click “Log Out”!\n\n\n\nhub-control-panel-button (credit: UW Hackweek)\n\n\n!!! NOTE “logging out” - Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day."
  },
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Overview",
    "section": "",
    "text": "Hands-on exercises will be executed from a Jupyter Lab instance in 2i2c. Please pass along your Github Username to get access.\nTutorials are markdown (.md) and Jupyter (.ipynb) notebooks, and are available on GitHub:\nhttps://github.com/NASA-Openscapes/2022-Fall-ECOSTRESS-Cloud-Workshop/tree/main/tutorials."
  },
  {
    "objectID": "tutorials/Data_Discovery_CMR_API_EDL_Token.html",
    "href": "tutorials/Data_Discovery_CMR_API_EDL_Token.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "In this notebook, we will walk through how to search for Earthdata data collections and granules. Along the way we will explore the available search parameters, information return, and specific contrains when using the CMR API. Our object is to identify assets to access that we would downloaded, or perform S3 direct access, within an analysis workflow\nWe will be querying CMR for ECOSTRESS collections/granules to identify assets we would downloaded, or perform S3 direct access, within an analysis workflow\n\n\n\n\n\nAn Earthdata Login account is required to access data, as well as discover restricted data, from the NASA Earthdata system. Thus, to access NASA data, you need Earthdata Login. Please visit https://urs.earthdata.nasa.gov to register and manage your Earthdata Login account. This account is free to create and only takes a moment to set up.\n\n\n\nECOSTRESS build 7 is only open to individuals identified as early adopters. As such ECOSTRESS discovery and access is managed by an access control list. If you are not on the access control list, you will not be able to complete the exercise as written below.\n\n\n\n\n\nunderstand what CMR/CMR API is and what CMR/CMR API can be used for\nhow to use the requests package to search data collections and granules\nhow to use an Earthdata Login token to search for data with access control lists\nhow to parse the results of these searches.\n\n\n\n\nCMR is the Common Metadata Repository. It catalogs all data for NASA’s Earth Observing System Data and Information System (EOSDIS). It is the backend of Earthdata Search, the GUI search interface you are probably familiar with. More information about CMR can be found here.\nUnfortunately, the GUI for Earthdata Search is not accessible from a cloud instance - at least not without some work. Earthdata Search is also not immediately reproducible. What I mean by that is if you create a search using the GUI you would have to note the search criteria (date range, search area, collection name, etc), take a screenshot, copy the search url, or save the list of data granules returned by the search, in order to recreate the search. This information would have to be re-entered each time you or someone else wanted to do the search. You could make typos or other mistakes. A cleaner, reproducible solution is to search CMR programmatically using the CMR API.\n\n\n\nAPI stands for Application Programming Interface. It allows applications (software, services, etc) to send information to each other. A helpful analogy is a waiter in a restaurant. The waiter takes your drink or food order that you select from the menu, often translated into short-hand, to the bar or kitchen, and then returns (hopefully) with what you ordered when it is ready.\nThe CMR API accepts search terms such as collection name, keywords, datetime range, and location, queries the CMR database and returns the results.\n\n\n\n\nThe first step is to import python packages. We will use:\n- requests This package does most of the work for us accessing the CMR API using HTTP methods. - pprint to pretty print the results of the search.\nA more in-depth tutorial on requests is here\n\nimport requests\nimport json\nfrom pprint import pprint\n\nTo conduct a search using the CMR API, requests needs the url for the root CMR search endpoint. We’ll assign this url to a python variable as a string.\n\nCMR_OPS = 'https://cmr.earthdata.nasa.gov/search'\n\nCMR allows search by collections, which are datasets, and granules, which are files that contain data. Many of the same search parameters can be used for collections and granules but the type of results returned differ. Search parameters can be found in the API Documentation.\nWhether we search collections or granules is distinguished by adding \"collections\" or \"granules\" to the end of the CMR endpoint URL.\nWe are going to search collections first, so we add \"collections\" to the URL. We are using a python format string in the examples below.\n\nurl = f'{CMR_OPS}/{\"collections\"}'\n\nIn this first example, I want to retrieve a list of ECOSTRESS collections in the Earthdata Cloud. This includes ECOSTRESS collections from build 7 which at the time of this tutorial, is hidden to all except early adopters. Because of this, an extra parameter needs to be passed in each CMR request that indicates you are part of the access list. An Earthdata Login token will be passed to the token parameter, which is generated using your Earthdata Login credentials.\nTwo options are available to generate an Earthdata Login token. 1. Generate a token from the Earthdata Login interface by logging into Earthdata Login and Click Generate Token. 2. Programatically generate an Earthdata Login token. Use the NASA_Earthdata_Login_Token notebook to generate and save a token for use in this notebook.\nWe can read in our token after it has been generated and saved using the NASA_Earthdata_Login_Token notebook. The json file produce can be found here: /home/jovyan/.hidden_dir/edl_token.json. We’ll read to token into a variable named token.\n\nwith open('../../.hidden_dir/edl_token.json') as js:\n    token = json.load(js)['access_token']\n\nWe’ll want to get the content in json (pronounced “jason”) format, so I pass a dictionary to the header keyword argument to say that I want results returned as json.\nThe .get() method is used to send this information to the CMR API. get() calls the HTTP method GET.\n\nresponse = requests.get(url,\n                        params={\n                            'cloud_hosted': 'True',\n                            'has_granules': 'True',\n                        },\n                        headers={\n                            'Accept': 'application/json',\n                        }\n                       )\n\nThe request returns a Response object.\nTo check that our request was successful we can print the response variable we saved the request to.\n\nresponse\n\nA 200 response is what we want. This means that the requests was successful. For more information on HTTP status codes see https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\nA more explict way to check the status code is to use the status_code attribute. Both methods return a HTTP status code.\n\nresponse.status_code\n\nThe response from requests.get returns the results of the search and metadata about those results in the headers.\nMore information about the response object can be found by typing help(response).\nheaders contains useful information in a case-insensitive dictionary. We requested (above) that the information be return in json which means the object return is a dictionary in our Python environment. We’ll iterate through the returned dictionary, looping throught each field (k) and its associated value (v). For more on interating through dictionary object click here.\n\nfor k, v in response.headers.items():\n    print(f'{k}: {v}')\n\nEach item in the dictionary can be accessed in the normal way you access a python dictionary but the keys uniquely case-insensitive. Let’s take a look at the commonly used CMR-Hits key.\n\nresponse.headers['CMR-Hits']\n\nNote that “cmr-hits” works as well!\n\nresponse.headers['cmr-hits']\n\nIn some situations the response to your query can return a very large number of result, some of which may not be relevant. We can add additional query parameters to restrict the information returned. We’re going to restrict the search by the provider parameter.\nYou can modify the code below to explore all Earthdata data products hosted by the various providers. When searching by provider, use Cloud Provider to search for cloud-hosted datasets and On-Premises Provider to search for datasets archived at the DAACs. A partial list of providers is given below.\n\n\n\n\n\n\n\n\n\nDAAC\nShort Name\nCloud Provider\nOn-Premises Provider\n\n\n\n\nNSIDC\nNational Snow and Ice Data Center\nNSIDC_CPRD\nNSIDC_ECS\n\n\nGHRC DAAC\nGlobal Hydrometeorology Resource Center\nGHRC_DAAC\nGHRC_DAAC\n\n\nPO DAAC\nPhysical Oceanography Distributed Active Archive Center\nPOCLOUD\nPODAAC\n\n\nASF\nAlaska Satellite Facility\nASF\nASF\n\n\nORNL DAAC\nOak Ridge National Laboratory\nORNL_CLOUD\nORNL_DAAC\n\n\nLP DAAC\nLand Processes Distributed Active Archive Center\nLPCLOUD\nLPDAAC_ECS\n\n\nGES DISC\nNASA Goddard Earth Sciences (GES) Data and Information Services Center (DISC)\nGES_DISC\nGES_DISC\n\n\nOB DAAC\nNASA’s Ocean Biology Distributed Active Archive Center\n\nOB_DAAC\n\n\nSEDAC\nNASA’s Socioeconomic Data and Applications Center\n\nSEDAC\n\n\n\nWe’ll assign the provider to a variable as a string and insert the variable into the parameter argument in the request. We’ll also assign the term ‘ECOSTRESS’ to a varible so we don’t need to repeatedly add it to the requests parameters.\n\nprovider = 'LPCLOUD'\nproject = 'ECOSTRESS'\n\n\nheaders = {\n    'Authorization': f'Bearer {token}',\n    'Accept': 'application/json',\n}\n\n\nresponse = requests.get(url,\n                        params={\n                            'cloud_hosted': 'True',\n                            'has_granules': 'True',\n                            'provider': provider,\n                            'project': project,\n                        },\n                        headers=headers\n                       )\nresponse\n\n\nresponse.headers['cmr-hits']\n\nSearch results are contained in the content part of the Response object. However, response.content returns information in bytes.\n\nresponse.content\n\nA more convenient way to work with this information is to use json formatted data. I’m using pretty print pprint to print the data in an easy to read way.\nNote - response.json() will format our response in json - ['feed']['entry'] returns all entries that CMR returned in the request (not the same as CMR-Hits) - [0] returns the first entry. Reminder that python starts indexing at 0, not 1!\n\npprint(response.json()['feed']['entry'][0])\n\nThe first response contains a lot more information than we need. We’ll narrow in on a few fields to get a feel for what we have. We’ll print the name of the dataset (dataset_id) and the concept id (id). We can build this variable and print statement like we did above with the url variable.\n\ncollections = response.json()['feed']['entry']\n\n\nfor collection in collections:\n    print(f'{collection[\"archive_center\"]} | {collection[\"dataset_id\"]} | {collection[\"id\"]}')\n\nIn some situations we may be expecting a certain number of results. Note here that we only have 10 datasets are printed. We know from CMR-Hits that there are more than 10 datasets. This is because CMR restricts the number of results returned by each query. The default is 10 but it can be set to a maximum of 2000. We’ll set the page_size parameter to 25 so we return all results in a single query.\n\nresponse = requests.get(url,\n                        params={\n                            'cloud_hosted': 'True',\n                            'has_granules': 'True',\n                            'provider': provider,\n                            'project': project,\n                            'page_size': 25\n                        },\n                        headers=headers\n                       )\nresponse\n\n\nresponse.headers['cmr-hits']\n\nNow, when we can re-run our for loop for the collections we now have all of the available collections listed.\n\ncollections = response.json()['feed']['entry']\nfor collection in collections:\n    print(f'{collection[\"archive_center\"]} | {collection[\"dataset_id\"]} | {collection[\"id\"]}')\n\n\n\n\nIn NASA speak, Granules are files or groups of files. In this example, we will search for ECO2LSTE version 1 for a specified region of interest and datetime range.\nWe need to change the resource url to look for granules instead of collections\n\nurl = f'{CMR_OPS}/{\"granules\"}'\n\nWe will search by concept_id, temporal, and bounding_box. Details about these search parameters can be found in the CMR API Documentation.\nThe formatting of the values for each parameter is quite specific.\nTemporal parameters are in ISO 8061 format yyyy-MM-ddTHH:mm:ssZ.\nBounding box coordinates are lower left longitude, lower left latitude, upper right longitude, upper right latitude.\n\ncollection_id = 'C2076090826-LPCLOUD'\ndate_range = '2022-04-01T00:00:00Z,2022-04-30T23:59:59Z'\nbbox = '-120.45264628,34.51050622,-120.40432448,34.53239876'\n\n\nresponse = requests.get(url, \n                        params={\n                            'concept_id': collection_id,\n                            'temporal': date_range,\n                            'bounding_box': bbox,\n                            'token': token,\n                            'page_size': 200\n                            },\n                        headers=headers\n                       )\nprint(response.status_code)\n\n\nprint(response.headers['CMR-Hits'])\n\n\ngranules = response.json()['feed']['entry']\nfor granule in granules:\n    print(f'{granule[\"data_center\"]} | {granule[\"dataset_id\"]} | {granule[\"id\"]}')\n\n\npprint(granules[0])\n\n\n\n\n\nhttps_urls = [l['href'] for l in granules[0]['links'] if 'https' in l['href'] and '.tif' in l['href']]\nhttps_urls\n\n\ns3_urls = [l['href'] for l in granules[0]['links'] if 's3' in l['href'] and '.tif' in l['href']]\ns3_urls"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "Welcome to the 2022 ECOSTRESS Cloud Workshop hosted by NASA’s Land Processes Distributed Activate Archive (LP DAAC) with support from NASA Openscapes.\nThe workshop will take place virtually daily on April 12 and 13, 2022 from 2pm-5:30pm PST (UTC-7)."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "About",
    "text": "About\n\nWorkshop Goal\nThe goal of the workshop is expose ECOSTRESS data users to ECOSTRESS version 2 (v2) data products in the cloud. Learning objectives focus on how to find and access ECOSTRESS v2 data from Earthdata Cloud either by downloading or accessing the data on the cloud. The LP DAAC is the NASA archive for ECOSTRESS data products. ECOSTRESS v2 data products will hosted in the NASA Earthdata Cloud, hosted in AWS.\n\n\nWorkshop Description\nThe goal of the workshop is expose ECOSTRESS data users to ECOSTRESS version 2 data products in the cloud. Learning objectives focus on how to finda and access ECOSTRESS version 2 data from Earthdata Cloud either by downloading or accessing the data on the cloud. The LP DAAC is the NASA archive for ECOSTRESS data products. ECOSTRESS version 2 data products will hosted in the NASA Earthdata Cloud, hosted in AWS.\nThe workshop will demonstrate how to find, access, and download ECOSTRESS v2 data from the Earthdata Cloud. Participants will learn how to search for and download data from NASA’s Earthdata Search Client, a graphical user interface (GUI) for search, discovery, and download application for also EOSDIS data assets. Participants will also learn how to perform in-could data search, access, and processing routines where no data download is required, and data analysis can take place next to the data in the cloud.\n\n\nWorkshop Outcomes\nAt the end of the two days, participants should be able to find and access ECOSTRESS v2 data in the NASA Earthdata Cloud (hosted in AWS). Workshop materials will be available for future reference following the completion of the workshop/ECOSTRESS Science Team meeting\n\nNOTE: ECOSTRESS v2 data will only be available to approved individuals. Please work with Christine Lee (christine.m.lee@jpl.nasa.gov) to have your name added to the allowlist."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n2022 ECOSTRESS Cloud Workshop is hosted by NASA’s LP DAAC with support from the NASA Openscapes Project, with cloud computing infrastructure by 2i2c."
  },
  {
    "objectID": "tutorials/AppEEARS.html",
    "href": "tutorials/AppEEARS.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "The Application for Extracting and Exploring Analysis Ready Samples (AppEEARS) offers a simple and efficient way to access and transform geospatial data from a variety of federal data archives in an easy-to-use web application interface. AppEEARS enables users to subset geospatial data spatially, temporally, and by band/layer for point and area samples. AppEEARS returns not only the requested data, but also the associated quality values, and offers interactive visualizations with summary statistics in the web interface. This tutorial shows how to use AppEEARS to access ECOSTRESS version 2 data hosted in the cloud.\n\n\n\nFigure caption: AppEEARS Overview\n\n\n\n\nSign in using your Earthdata login credentials. If you do not have an Earthdata account, please see the Workshop Prerequisites for guidance.\n\n\n\n\nSelect the Point or Area sample using Extract dropdown. we will be directed to Extract Area or Point Sample page.\n1. Enter your sample name.\n2. Upload your area of ineterst or draw a polygon on the leaflet map for area sample. for point sample, provide the CSV file including the lattitude and longitude coordinates. You can also use the map to manually select your locations or type them directly.\n3. Select your time period of interest.\n4. Add datasets you are interested in to your Selected Layers. You can choose from various data collections available in AppEEARS. you can click on the (i) icon for the dataset to see more details. In this example we are interested in the ECOSTRESS LSTE which is managed by the LP DAAC and made available from the NASA Earthdata Cloud archive hosted in AWS cloud. At the time of this workshop, only ECOSTRESS Level 1 and Level 2 swath data products are available in AppEEARS but Gridded and Tiled data will be added to AppEEARS in future.\n5. For area sample, you can select your output file format. You also have an option to reproject all your layers to another coordinate reference system.\n6. Now you can submit.\n\n\n\nFigure caption: Extract area and point sample for ECOSTRESS data available in AWS cloud in AppEEARS\n\n\nOnce your request is complete, you can View and Download your results from the Explore Requets page.\n\n\n\nFigure caption: Refine search\n\n\n\n\n\nFrom the Explore Requests page, click the View icon in order to view and interact with your results. This will take you to the View Area Sample page. \n\n\n\nFinally navigate to Download Sample page by clicking the Download icon on the Explore Requests page or from View Sample pag to download your results. Besides your actual outputs, you will have access to supporting files including a text file with URLs to source data, JSON file you can use to recreate the same sample, decoded quality information, and CSV file with the layer statistics.\n\n\n\nFigure caption: Download Sample Results\n\n\nCheck out AppEEARS help documentation for more details. If you wish to access AppEEARS programatically checkout AppEEARS API documenation."
  },
  {
    "objectID": "tutorials/Carpinteria ECOSTRESS Analysis.html",
    "href": "tutorials/Carpinteria ECOSTRESS Analysis.html",
    "title": "2022 ECOSTRESS Cloud Workshop",
    "section": "",
    "text": "These are some built-in Python functions we need for this notebook, including functions for handling filenames and dates.\n\nfrom os.path import join, abspath, basename, splitext\nfrom glob import glob\nfrom datetime import datetime, date, timedelta\nfrom zipfile import ZipFile\nimport warnings\n\nWe’re using the rioxarray package for loading raster data from GeoTIFF files, and we’re importing it as rxr. We’re using the numpy library to handle arrays, and we’re importing it as np. We’re using the rasterstats package for zonal statistics.\n\n!mamba install rasterstats -q -y\n\n  Package              Version  Build               Channel                   Size\n────────────────────────────────────────────────────────────────────────────────────\n  Install:\n────────────────────────────────────────────────────────────────────────────────────\n\n  + rasterstats         0.17.0  pyhd8ed1ab_0        conda-forge/noarch        18kB\n  + simplejson          3.17.6  py39hb9d737c_2      conda-forge/linux-64     107kB\n\n  Change:\n────────────────────────────────────────────────────────────────────────────────────\n\n  - gdal                 3.5.0  py39hc691d54_4      installed                     \n  + gdal                 3.5.0  py39h85832e7_4      conda-forge/linux-64       2MB\n  - hdf5                1.12.1  nompi_h2386368_104  installed                     \n  + hdf5                1.12.1  nompi_h4df4325_104  conda-forge/linux-64       4MB\n  - krb5                1.19.3  h3790be6_0          installed                     \n  + krb5                1.19.3  h08a2579_0          conda-forge/linux-64       2MB\n  - libgdal              3.5.0  hc0ebe42_4          installed                     \n  + libgdal              3.5.0  h59d0e54_4          conda-forge/linux-64      14MB\n  - libnghttp2          1.47.0  h727a467_0          installed                     \n  + libnghttp2          1.47.0  hff17c54_1          conda-forge/linux-64     844kB\n  - libssh2             1.10.0  ha56f1ee_2          installed                     \n  + libssh2             1.10.0  hf14f497_3          conda-forge/linux-64     239kB\n  - pycurl              7.45.1  py39hd73adbb_2      installed                     \n  + pycurl              7.45.1  py39h9297c8b_2      conda-forge/linux-64      75kB\n  - python              3.9.13  h9a8a25e_0_cpython  installed                     \n  + python              3.9.13  h2660328_0_cpython  conda-forge/linux-64      28MB\n  - tiledb               2.9.5  h1e4a385_0          installed                     \n  + tiledb               2.9.5  h3f4058f_0          conda-forge/linux-64       4MB\n\n  Upgrade:\n────────────────────────────────────────────────────────────────────────────────────\n\n  - ca-certificates  2022.6.15  ha878542_0          installed                     \n  + ca-certificates  2022.9.24  ha878542_0          conda-forge/linux-64     154kB\n  - certifi          2022.6.15  py39hf3d152e_0      installed                     \n  + certifi          2022.9.24  pyhd8ed1ab_0        conda-forge/noarch       159kB\n  - cryptography        37.0.2  py39hd97740a_0      installed                     \n  + cryptography        38.0.3  py39h3ccb8fc_0      conda-forge/linux-64       2MB\n  - curl                7.83.1  h7bff187_0          installed                     \n  + curl                7.85.0  h2283fc2_0          conda-forge/linux-64      93kB\n  - libcurl             7.83.1  h7bff187_0          installed                     \n  + libcurl             7.85.0  h2283fc2_0          conda-forge/linux-64     359kB\n  - libpq                 14.4  hd77ab85_0          installed                     \n  + libpq                 14.5  he2d8382_0          conda-forge/linux-64       3MB\n  - libzip               1.8.0  h4de3113_1          installed                     \n  + libzip               1.9.2  hc929e4a_1          conda-forge/linux-64      99kB\n  - openssl             1.1.1p  h166bdaf_0          installed                     \n  + openssl              3.0.7  h166bdaf_0          conda-forge/linux-64       3MB\n  - postgresql            14.4  hfdbbde3_0          installed                     \n  + postgresql            14.5  ha7cec9f_0          conda-forge/linux-64       6MB\n\n  Summary:\n\n  Install: 2 packages\n  Change: 9 packages\n  Upgrade: 9 packages\n\n  Total download: 69MB\n\n────────────────────────────────────────────────────────────────────────────────────\n\nPreparing transaction: ...working... done\nVerifying transaction: ...working... done\nExecuting transaction: ...working... done\n\n\n\nimport rioxarray as rxr\nimport numpy as np\nfrom rasterstats import zonal_stats\n\nWe’re using the geopandas library to load vector data from GeoJSON files, and we’re importing it as gpd. We’re using the shapely library to handle vector data and the pyproj library to handle projections.\n\nimport geopandas as gpd\nfrom shapely.geometry import Point, box\nfrom shapely.ops import transform\nfrom pyproj import Transformer\n\nWe’re using the pandas library to handle tables, and we’re importing it as pd.\n\nimport pandas as pd\n\nWe’re using the seaborn library to produce our graphs, and we’re importing it as sns. We’re using the hvplot library to produce our maps. We’re using the matplotlib library to handle plotting figures, and we’re importing it as plt.\n\nimport seaborn as sns\nimport hvplot.xarray\nimport hvplot.pandas\nimport matplotlib.pyplot as plt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese constants define the dimensions of our figures. Feel free to adjust these to fit your display.\n\nFIG_WIDTH_PX = 1080\nFIG_HEIGHT_PX = 720\nFIG_WIDTH_IN = 16\nFIG_HEIGHT_IN = 9\nFIG_ALPHA = 0.7\nBASEMAP = \"ESRI\"\nSEABORN_STYLE = \"whitegrid\"\nsns.set_style(SEABORN_STYLE)\n\nThis is the location of the example ECOSTRESS Collection 2 product files.\n\nDATA_DIRECTORY = \"/home/jovyan/shared/2022-fall-ecostress-workshop\"\nprint(f\"data directory: {DATA_DIRECTORY}\")\n\ndata directory: /home/jovyan/shared/2022-fall-ecostress-workshop\n\n\n\n\n\nFirst, let’s trying opening a data layer from a product file.\n\nfilename = DATA_DIRECTORY + \"/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01.zip\"\nprint(f\"example L2T LSTE file: {filename}\")\n\nexample L2T LSTE file: /home/jovyan/shared/2022-fall-ecostress-workshop/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01.zip\n\n\nThe granule ID for this granule can be parsed from the filename by dropping the .zip extension.\n\ngranule_ID = splitext(basename(filename))[0]\nprint(f\"granule ID: {granule_ID}\")\n\ngranule ID: ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01\n\n\nThis product bundle, stored in zip format, contains a number of files, including raster data layers in GeoTIFF format as .tif files, and GeoJPEG browse images as .jpeg files. The GeoTIFF files can be loaded into GIS software, such as QGIS and ArcGIS. The GeoJPEG files can be loaded into Google Earth.\n\nwith ZipFile(filename) as zip_file:\n    for internal_file in zip_file.filelist:\n        print(internal_file.filename)\n\nBadZipFile: File is not a zip file\n\n\nThe ECOSTRESS Collection 2 tiled products include metadata in JSON format as a .json text file.\n\nwith ZipFile(filename) as zip_file:\n    metadata = zip_file.read(f\"{granule_ID}/{granule_ID}.json\").decode()\n\nprint(metadata)\n\n{\n  \"StandardMetadata\": {\n    \"AncillaryInputPointer\": \"AncillaryNWP\",\n    \"AutomaticQualityFlag\": \"PASS\",\n    \"AutomaticQualityFlagExplanation\": \"Image matching performed to correct orbit ephemeris/attitude\",\n    \"BuildID\": \"0700\",\n    \"CRS\": \"+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +type=crs\",\n    \"CampaignShortName\": \"Primary\",\n    \"CollectionLabel\": \"ECOv002\",\n    \"DataFormatType\": \"COG\",\n    \"DayNightFlag\": \"Day\",\n    \"EastBoundingCoordinate\": -119.06581640006657,\n    \"FieldOfViewObstruction\": \"unknown\",\n    \"ImageLineSpacing\": 70.0,\n    \"ImageLines\": 1568,\n    \"ImagePixelSpacing\": 70.0,\n    \"ImagePixels\": 1568,\n    \"InputPointer\": \"ECOv002_L2_LSTE_22387_011_20220617T215819_0700_01.h5,ECOv002_L2_CLOUD_22387_011_20220617T215819_0700_01.h5,ECOSTRESS_L1B_GEO_22387_011_20220617T215819_0601_01.h5,ECOSTRESS_L1B_RAD_22387_011_20220617T215819_0601_01.h5\",\n    \"InstrumentShortName\": \"ECOSTRESS\",\n    \"LocalGranuleID\": \"ECOv002_L3T_JET_22387_011_11SKU_20220617T215819_0700_01.zip\",\n    \"LongName\": \"ECOSTRESS Tiled Evapotranspiration Ensemble Instantaneous and Daytime L3 Global 70 m\",\n    \"NorthBoundingCoordinate\": 35.22502010920582,\n    \"PGEName\": \"L3T_L4T_JET\",\n    \"PGEVersion\": \"v1.4.8\",\n    \"PlatformLongName\": \"ISS\",\n    \"PlatformShortName\": \"ISS\",\n    \"PlatformType\": \"Spacecraft\",\n    \"ProcessingEnvironment\": \"Linux ceb79f540da6 3.10.0-1160.66.1.el7.x86_64 #1 SMP Wed May 18 16:02:34 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\",\n    \"ProcessingLevelDescription\": \"Level 3 Tiled Evapotranspiration Ensemble\",\n    \"ProcessingLevelID\": \"L3T\",\n    \"ProducerAgency\": \"JPL\",\n    \"ProducerInstitution\": \"Caltech\",\n    \"ProductionDateTime\": \"2022-10-25T21:39:28.975Z\",\n    \"ProductionLocation\": \"ECOSTRESS Science Computing Facility\",\n    \"RangeBeginningDate\": \"2022-06-17\",\n    \"RangeBeginningTime\": \"21:58:19.929775\",\n    \"RangeEndingDate\": \"2022-06-17\",\n    \"RangeEndingTime\": \"21:59:11.900024\",\n    \"RegionID\": \"11SKU\",\n    \"SISName\": \"Level 3/4 JET Product Specification Document\",\n    \"SISVersion\": \"Preliminary\",\n    \"SceneBoundaryLatLonWKT\": \"POLYGON ((-122.91679849347318 36.98583577347708, -120.16328012620973 40.20637371131396, -117.02446217331683 38.04420848672155, -119.81948100354185 34.92253448622397, -122.91679849347318 36.98583577347708))\",\n    \"SceneID\": \"011\",\n    \"ShortName\": \"ECO_L3T_JET\",\n    \"SouthBoundingCoordinate\": 34.210027193369996,\n    \"StartOrbitNumber\": \"22387\",\n    \"StopOrbitNumber\": \"22387\",\n    \"WestBoundingCoordinate\": -120.29518354417259\n  },\n  \"ProductMetadata\": {\n    \"BandSpecification\": [\n      0.0,\n      0.0,\n      8.779999732971191,\n      0.0,\n      10.520000457763672,\n      12.0\n    ],\n    \"NumberOfBands\": 3,\n    \"OrbitCorrectionPerformed\": \"True\",\n    \"QAPercentCloudCover\": 2.0684334001457727,\n    \"QAPercentGoodQuality\": 2.2481680810079174,\n    \"AncillaryNWP\": \"GEOS.fp.asm.inst3_2d_asm_Nx.20220617_2100.V01.nc4,GEOS.fp.asm.inst3_2d_asm_Nx.20220618_0000.V01.nc4,GEOS.fp.asm.tavg1_2d_lnd_Nx.20220617_2130.V01.nc4,GEOS.fp.asm.tavg1_2d_lnd_Nx.20220617_2230.V01.nc4,GEOS.fp.asm.tavg1_2d_rad_Nx.20220617_2130.V01.nc4,GEOS.fp.asm.tavg1_2d_rad_Nx.20220617_2230.V01.nc4,GEOS.fp.asm.tavg1_2d_slv_Nx.20220617_2130.V01.nc4,GEOS.fp.asm.tavg1_2d_slv_Nx.20220617_2230.V01.nc4,GEOS.fp.asm.tavg3_2d_aer_Nx.20220617_1930.V01.nc4,GEOS.fp.asm.tavg3_2d_aer_Nx.20220617_2230.V01.nc4,GEOS.fp.asm.tavg3_2d_chm_Nx.20220617_1930.V01.nc4,GEOS.fp.asm.tavg3_2d_chm_Nx.20220617_2230.V01.nc4\"\n  }\n}\n\n\nTo open the temperature layer of this file, we’ll form a Universion Resource Identifier (URI) with the pattern: zip://{filename}!/{granule_ID}/{granule_ID}_{variable}.tif\n\nURI = f\"zip://{abspath(filename)}!/{granule_ID}/{granule_ID}_LST.tif\"\nprint(f\"URI: {URI}\")\n\nURI: zip:///Users/halverso/Desktop/2022-Fall-ECOSTRESS-Cloud-Workshop/data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01.zip!/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01_LST.tif\n\n\nWe’re using rioxarray to open the surface temperature layer from the L2T_LSTE product on the 11SKU tile covering the Carpinteria Salt Marsh. We’re passing the URI pointing to the GeoTIFF file contained within this zip file. If you unzip this product bundle or download the GeoTIFF file on its own, you can pass the filename of the GeoTIFF file directly into rioxarray.\n\nST_K_raster = rxr.open_rasterio(URI).squeeze('band', drop=True)\nST_K_raster\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.DataArray (y: 1568, x: 1568)>\n[2458624 values with dtype=float32]\nCoordinates:\n  * x            (x) float64 2e+05 2.001e+05 2.002e+05 ... 3.096e+05 3.097e+05\n  * y            (y) float64 3.9e+06 3.9e+06 3.9e+06 ... 3.79e+06 3.79e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    _FillValue:     nan\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayy: 1568x: 1568...[2458624 values with dtype=float32]Coordinates: (3)x(x)float642e+05 2.001e+05 ... 3.097e+05array([200015., 200085., 200155., ..., 309565., 309635., 309705.])y(y)float643.9e+06 3.9e+06 ... 3.79e+06array([3899965., 3899895., 3899825., ..., 3790415., 3790345., 3790275.])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :199980.0 70.0 0.0 3900000.0 0.0 -70.0array(0)Attributes: (4)AREA_OR_POINT :Area_FillValue :nanscale_factor :1.0add_offset :0.0\n\n\nThis xarray.DataArray object contains both an array of image values and spatial metadata. The rioxarray package extends xarray with a .rio attribute containing the metadata. Here we’re examining the coordinate reference system (CRS) of this image in the rioxarray metadata.\n\nCRS = ST_K_raster.rio.crs\nCRS.to_wkt()\n\n'PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]'\n\n\nThis image is projected in UTM zone 11 north. Distances in this projection system are in meters. All tiled ECOSTRESS products are projected in UTM, but tiles are projected into different UTM zones, depending on where they are in the world.\nWe can also check the spatial resolution of the grid cells in this image in the .rio metadata.\n\ncell_width, cell_height = ST_K_raster.rio.resolution()\nprint(f\"cell width: {cell_width} cell height: {cell_height}\")\n\ncell width: 70.0 cell height: -70.0\n\n\nThis image is projected with 70m square pixels, as are all tiled ECOSTRESS products.\nTo know the observation time for this granule, we’re parsing the timestamp from the filename. This timestamp is given as Coordinated Universal Time (UTC).\n\ndatetime_UTC = datetime.strptime(basename(filename).split(\"_\")[-3], \"%Y%m%dT%H%M%S\")\nprint(f\"date/time UTC: {datetime_UTC:%Y-%m-%d %H:%M:%S}\")\n\ndate/time UTC: 2020-08-26 19:14:53\n\n\nWe want to know the centroid coordinate of this tile so that we can adjust the UTC time given to solar apparent time. We’re calculating the centroid as the average of x coordinate values and average of y coordinate values.\n\ncentroid_UTM = Point(np.nanmean(ST_K_raster.x), np.nanmean(ST_K_raster.y))\nprint(f\"centroid UTM: {centroid_UTM}\")\n\ncentroid UTM: POINT (254860 3845120)\n\n\nThis centroid coordinate is in meters. We want to convert these projected x and y values in meters to geographic latitude and longitude in degress.\n\ncentroid_latlon = transform(Transformer.from_crs(CRS, \"EPSG:4326\", always_xy=True).transform, centroid_UTM)\nprint(f\"centroid lat/lon: {centroid_latlon.wkt}\")\n\ncentroid lat/lon: POINT (-119.67694453530225 34.71877480226906)\n\n\nWe’re shifting the UTC time to local time according to longitude.\n\ndatetime_solar = datetime_UTC + timedelta(hours=(np.radians(centroid_latlon.x) / np.pi * 12))\nprint(f\"date/time solar: {datetime_solar:%Y-%m-%d %H:%M:%S}\")\n\ndate/time solar: 2020-08-26 11:16:10\n\n\nThe hvplot package extends xarray to allow us to plot maps. We’re reprojecting the raster geographic projection EPSG 4326 to overlay on the basemap with a latitude and longitude graticule. We’re using the jet color scheme to render temperature with a rainbow of colors with red meaning hot and blue meaning cool. We’re setting the alpha to make the raster semi-transparent on top of the basemap. We’re filtering out values lower than the 2% percentile and higher than the 98% percentile to make the variation in the image more visible.\n\nST_CMAP = \"jet\"\n\nST_K_map = ST_K_raster.rio.reproject(\"EPSG:4326\").hvplot.image(\n    geo=True,\n    cmap=ST_CMAP,\n    tiles=BASEMAP,\n    alpha=FIG_ALPHA,\n    width=FIG_WIDTH_PX,\n    height=FIG_HEIGHT_PX,\n    clim=(ST_K_raster.quantile(0.02), ST_K_raster.quantile(0.98)),\n    title=f\"{granule_ID} Surface Temperature (Kelvin)\"\n)\n\nST_K_map = ST_K_map.options(xlabel=\"Longitude\", ylabel=\"Latitude\")\n\nST_K_map\n\nUnable to display output for mime type(s): \n\n\n\n  \n\n\n\n\nThe temperatures in the L2T_LSTE product are given in Kelvin. To convert them to Celsius, we subtract 273.15.\n\nST_C_raster = ST_K_raster.copy()\nST_C_raster.data = ST_K_raster.data - 273.15\n\nST_C_map = ST_C_raster.rio.reproject(\"EPSG:4326\").hvplot.image(\n    geo=True,\n    cmap=ST_CMAP,\n    tiles=BASEMAP,\n    alpha=FIG_ALPHA,\n    width=FIG_WIDTH_PX,\n    height=FIG_HEIGHT_PX,\n    clim=(ST_C_raster.quantile(0.02), ST_C_raster.quantile(0.98)),\n    title=f\"{granule_ID} Surface Temperature (Celsius)\"\n)\n\nST_C_map = ST_C_map.options(xlabel=\"Longitude\", ylabel=\"Latitude\")\n\nST_C_map\n\nUnable to display output for mime type(s): \n\n\n\n  \n\n\n\n\n\n\n\nWe want to analyze the ECOSTRESS images using the Carpinteria Salt Marsh Habitat Polygons provided by the USGS. This dataset is included here in GeoJSON format, which we’ll load using the geopandas package.\n\nlandcover_latlon = gpd.read_file(\"landcover.geojson\")\nlandcover_latlon\n\n\n\n\n\n  \n    \n      \n      type\n      geometry\n    \n  \n  \n    \n      0\n      channel\n      MULTIPOLYGON (((-119.54125 34.40462, -119.5412...\n    \n    \n      1\n      salt flat\n      MULTIPOLYGON (((-119.52907 34.39633, -119.5290...\n    \n    \n      2\n      upland\n      MULTIPOLYGON (((-119.54524 34.40555, -119.5452...\n    \n    \n      3\n      pan\n      MULTIPOLYGON (((-119.52924 34.39675, -119.5292...\n    \n    \n      4\n      marsh\n      MULTIPOLYGON (((-119.54162 34.40421, -119.5416...\n    \n  \n\n\n\n\nTo align this vector dataset with the raster datasets, we need to project it to the UTM projection used for the rasters.\n\nlandcover_UTM = landcover_latlon.to_crs(ST_C_raster.rio.crs)\nlandcover_UTM\n\n\n\n\n\n  \n    \n      \n      type\n      geometry\n    \n  \n  \n    \n      0\n      channel\n      MULTIPOLYGON (((266411.292 3809949.479, 266413...\n    \n    \n      1\n      salt flat\n      MULTIPOLYGON (((267508.823 3809001.087, 267507...\n    \n    \n      2\n      upland\n      MULTIPOLYGON (((266047.180 3810061.018, 266050...\n    \n    \n      3\n      pan\n      MULTIPOLYGON (((267493.755 3809048.925, 267493...\n    \n    \n      4\n      marsh\n      MULTIPOLYGON (((266376.639 3809904.329, 266376...\n    \n  \n\n\n\n\nThis vector dataset contains polygons classifying the surface of the Carpinteria Salt Marsh into channel, salt flat, upland, pan, and marsh.\n\nlandcover_colors = {\n    \"channel\": \"blue\",\n    \"marsh\": \"yellow\",\n    \"pan\": \"green\",\n    \"salt flat\": \"white\",\n    \"upland\": \"brown\"\n}\n\nlandcover_map = landcover_latlon.to_crs(\"EPSG:4326\").hvplot.polygons(\n    geo=True,\n    color=landcover_UTM[\"type\"].apply(lambda type: landcover_colors[type]),\n    tiles=BASEMAP,\n    alpha=FIG_ALPHA,\n    width=FIG_WIDTH_PX,\n    height=FIG_HEIGHT_PX,\n    title=\"Carpinteria Salt Marsh Habitat Polygons\"\n)\n\nlandcover_map = landcover_map.options(xlabel=\"Longitude\", ylabel=\"Latitude\")\nlandcover_map\n\n/Users/halverso/opt/anaconda3/envs/workshop/lib/python3.10/site-packages/geoviews/operation/projection.py:79: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.\n  polys = [g for g in geom if g.area > 1e-15]\n\n\nUnable to display output for mime type(s): \n\n\n\n  \n\n\n\n\nTo compare the raster image to the vector dataset, we want to subset the raster to the bounds of the vector dataset. We’re getting the bounds of our study area in meters from the convex hull of our land-cover polygons with a 100 meter buffer.\n\nxmin, ymin, xmax, ymax = landcover_UTM.unary_union.convex_hull.buffer(100).bounds\nxmin, ymin, xmax, ymax\n\n(265919.01794257906, 3808815.144350472, 267879.6396515569, 3810161.472477569)\n\n\nWe’re using this bounding box obtained from the extent of the vector dataset to clip the extent of the raster dataset. Now we can look at the ECOSTRESS surface temperature over the Carpinteria Salt Marsh.\n\nST_C_subset = ST_C_raster.rio.clip([box(xmin, ymin, xmax, ymax)])\n\nST_C_subset_map = ST_C_subset.rio.reproject(\"EPSG:4326\").hvplot.image(\n    geo=True,\n    cmap=ST_CMAP,\n    tiles=BASEMAP,\n    alpha=FIG_ALPHA,\n    width=FIG_WIDTH_PX,\n    height=FIG_HEIGHT_PX,\n    clim=(ST_C_subset.quantile(0.02), ST_C_subset.quantile(0.98)),\n    title = \"Carpinteria Salt Marsh Surface Temperature (Celsius)\"\n)\n\nST_C_subset_map = ST_C_subset_map.options(xlabel=\"Longitude\", ylabel=\"Latitude\")\nST_C_subset_map\n\nUnable to display output for mime type(s): \n\n\n\n  \n\n\n\n\nWe’re comparing the raster dataset to the polygon dataset by calculating zonal statistics with the rasterstats package.\n\nlandcover_stats = pd.DataFrame(zonal_stats(\n    landcover_UTM,\n    ST_C_subset.data,\n    affine=ST_C_subset.rio.transform(),\n    nodata=np.nan,\n    stats=[\"min\", \"median\", \"max\"]\n))\n\nlandcover_stats[\"type\"] = landcover_UTM[\"type\"]\nlandcover_stats[\"variable\"] = \"ST_C\"\nlandcover_stats[\"datetime_solar\"] = datetime_solar\nlandcover_stats = landcover_stats[[\"type\", \"variable\", \"datetime_solar\", \"min\", \"median\", \"max\"]]\nlandcover_stats\n\n\n\n\n\n  \n    \n      \n      type\n      variable\n      datetime_solar\n      min\n      median\n      max\n    \n  \n  \n    \n      0\n      channel\n      ST_C\n      2020-08-26 11:16:10.533312\n      28.649994\n      31.070007\n      36.850006\n    \n    \n      1\n      salt flat\n      ST_C\n      2020-08-26 11:16:10.533312\n      31.110016\n      34.529999\n      37.170013\n    \n    \n      2\n      upland\n      ST_C\n      2020-08-26 11:16:10.533312\n      30.130005\n      34.950012\n      38.750000\n    \n    \n      3\n      pan\n      ST_C\n      2020-08-26 11:16:10.533312\n      28.510010\n      32.149994\n      38.270020\n    \n    \n      4\n      marsh\n      ST_C\n      2020-08-26 11:16:10.533312\n      28.510010\n      31.369995\n      37.070007\n    \n  \n\n\n\n\n\n\n\nWe’re using the built-in glob function to search for L2T_LSTE filenames in our downloaded collection of ECOSTRESS files.\n\nL2T_LSTE_filenames = sorted(glob(join(DATA_DIRECTORY, \"*_L2T_LSTE_*.zip\")))\nL2T_LSTE_filenames\n\n['../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_08825_001_11SKU_20200126T002103_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_08886_001_11SKU_20200129T224753_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09008_001_11SKU_20200206T194050_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09104_012_11SKU_20200213T004053_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09130_001_11SKU_20200214T163344_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09150_013_11SKU_20200215T235451_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09516_010_11SKU_20200310T143221_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09740_001_11SKU_20200325T005731_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09801_001_11SKU_20200328T232451_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09862_001_11SKU_20200401T215211_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09923_001_11SKU_20200405T202021_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10019_010_11SKU_20200412T012318_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10060_001_11SKU_20200414T162940_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10080_015_11SKU_20200415T235114_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10121_001_11SKU_20200418T145755_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10141_013_11SKU_20200419T221907_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10182_001_11SKU_20200422T132414_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10202_012_11SKU_20200423T204504_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10324_012_11SKU_20200501T173635_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10655_001_11SKU_20200523T013719_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10716_001_11SKU_20200527T000255_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10777_001_11SKU_20200530T222828_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10838_001_11SKU_20200603T205400_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10899_001_11SKU_20200607T191919_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10919_012_11SKU_20200609T023948_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10934_013_11SKU_20200610T015203_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10980_012_11SKU_20200613T010521_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10995_004_11SKU_20200614T001724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11021_001_11SKU_20200615T161002_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11041_014_11SKU_20200616T233014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11056_007_11SKU_20200617T224237_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11082_001_11SKU_20200619T143523_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11102_013_11SKU_20200620T215537_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11117_006_11SKU_20200621T210737_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11143_001_11SKU_20200623T130041_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11163_010_11SKU_20200624T202055_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11178_012_11SKU_20200625T193257_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11224_007_11SKU_20200628T184603_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11224_008_11SKU_20200628T184655_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11407_014_11SKU_20200710T140339_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11407_015_11SKU_20200710T140431_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11570_001_11SKU_20200721T015918_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11616_001_11SKU_20200724T011211_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11631_001_11SKU_20200725T002428_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11677_001_11SKU_20200727T233715_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11738_001_11SKU_20200731T220318_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11799_001_11SKU_20200804T202950_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11860_002_11SKU_20200808T185624_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11895_012_11SKU_20200811T012953_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11921_003_11SKU_20200812T172251_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11956_009_11SKU_20200814T235617_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11982_002_11SKU_20200816T154913_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12043_002_11SKU_20200820T141537_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12078_012_11SKU_20200822T204904_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12200_006_11SKU_20200830T174050_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12200_007_11SKU_20200830T174142_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12261_006_11SKU_20200903T160702_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12261_007_11SKU_20200903T160754_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12322_008_11SKU_20200907T143314_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12322_009_11SKU_20200907T143406_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12531_003_11SKU_20200921T014818_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12592_001_11SKU_20200925T001530_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12653_004_11SKU_20200928T224329_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12668_005_11SKU_20200929T215616_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12714_004_11SKU_20201002T211124_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12729_003_11SKU_20201003T202421_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12775_004_11SKU_20201006T193901_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12790_005_11SKU_20201007T185136_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12836_003_11SKU_20201010T180517_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12871_012_11SKU_20201013T003732_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12871_013_11SKU_20201013T003824_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12897_003_11SKU_20201014T163113_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12912_003_11SKU_20201015T154331_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12932_012_11SKU_20201016T230328_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12932_013_11SKU_20201016T230421_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12993_012_11SKU_20201020T212919_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12993_013_11SKU_20201020T213011_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13054_009_11SKU_20201024T195506_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13054_010_11SKU_20201024T195558_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13115_010_11SKU_20201028T182051_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13115_011_11SKU_20201028T182143_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13176_003_11SKU_20201101T164629_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13176_004_11SKU_20201101T164721_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13237_012_11SKU_20201105T151255_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13568_001_11SKU_20201126T231758_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13629_001_11SKU_20201130T214441_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13751_001_11SKU_20201208T183734_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13847_012_11SKU_20201214T233712_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13893_006_11SKU_20201217T225123_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13908_007_11SKU_20201218T220331_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13954_012_11SKU_20201221T211655_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13969_013_11SKU_20201222T202946_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14015_008_11SKU_20201225T194306_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14076_009_11SKU_20201229T180922_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14091_012_11SKU_20201230T172204_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14137_011_11SKU_20210102T163522_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14152_005_11SKU_20210103T154810_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14483_003_11SKU_20210124T235211_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14544_003_11SKU_20210128T221939_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14666_003_11SKU_20210205T191410_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14727_004_11SKU_20210209T174124_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14747_011_11SKU_20210211T010216_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14788_003_11SKU_20210213T160839_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14808_002_11SKU_20210214T232930_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14823_011_11SKU_20210215T224228_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14884_009_11SKU_20210219T210839_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14884_010_11SKU_20210219T210931_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14945_012_11SKU_20210223T193640_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15006_002_11SKU_20210227T180246_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15006_003_11SKU_20210227T180338_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15067_013_11SKU_20210303T163037_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15128_012_11SKU_20210307T145729_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15399_001_11SKU_20210325T003939_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15460_003_11SKU_20210328T230652_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15521_003_11SKU_20210401T213401_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15644_003_11SKU_20210409T182905_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15705_003_11SKU_20210413T165635_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15740_006_11SKU_20210415T232949_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15740_007_11SKU_20210415T233041_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15766_003_11SKU_20210417T152402_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15801_011_11SKU_20210419T215715_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15801_012_11SKU_20210419T215807_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15862_013_11SKU_20210423T202526_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15923_012_11SKU_20210427T185153_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15923_013_11SKU_20210427T185245_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15984_012_11SKU_20210501T171900_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15984_013_11SKU_20210501T171952_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16045_012_11SKU_20210505T154652_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16271_003_11SKU_20210520T021358_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16317_003_11SKU_20210523T012832_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16332_001_11SKU_20210524T004111_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16378_004_11SKU_20210526T235552_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16393_004_11SKU_20210527T230830_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16439_002_11SKU_20210530T222305_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16454_004_11SKU_20210531T213545_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16501_003_11SKU_20210603T205023_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16516_003_11SKU_20210604T200301_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16551_012_11SKU_20210607T023615_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16562_004_11SKU_20210607T191736_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16577_004_11SKU_20210608T183014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16623_005_11SKU_20210611T174439_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16638_005_11SKU_20210612T165722_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16658_016_11SKU_20210614T001803_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16700_001_11SKU_20210616T152428_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16720_016_11SKU_20210617T224508_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16735_011_11SKU_20210618T215733_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16781_013_11SKU_20210621T211207_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16781_014_11SKU_20210621T211259_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16796_003_11SKU_20210622T202434_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16807_005_11SKU_20210623T130548_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16842_007_11SKU_20210625T193923_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16842_008_11SKU_20210625T194015_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16857_009_11SKU_20210626T185220_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16903_015_11SKU_20210629T180745_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16918_011_11SKU_20210630T172039_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16979_014_11SKU_20210704T154838_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17025_013_11SKU_20210707T150321_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17025_014_11SKU_20210707T150413_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17040_014_11SKU_20210708T141641_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17188_005_11SKU_20210718T030531_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17249_001_11SKU_20210722T013317_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17310_003_11SKU_20210726T000059_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17371_001_11SKU_20210729T222824_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17432_001_11SKU_20210802T205549_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17432_002_11SKU_20210802T205641_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17494_001_11SKU_20210806T192326_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17494_002_11SKU_20210806T192418_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17509_003_11SKU_20210807T183603_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17529_003_11SKU_20210809T015711_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17529_004_11SKU_20210809T015803_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17556_004_11SKU_20210810T175101_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17571_002_11SKU_20210811T170335_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17591_015_11SKU_20210813T002437_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17591_016_11SKU_20210813T002529_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17617_005_11SKU_20210814T161828_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17632_001_11SKU_20210815T153100_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17652_003_11SKU_20210816T225242_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17679_001_11SKU_20210818T144553_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17694_002_11SKU_20210819T135829_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17775_014_11SKU_20210824T194846_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17851_008_11SKU_20210829T173013_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17898_014_11SKU_20210901T164550_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17913_013_11SKU_20210902T155853_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17959_014_11SKU_20210905T151438_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17974_003_11SKU_20210906T142728_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18183_002_11SKU_20210920T014841_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18244_002_11SKU_20210924T001802_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18305_005_11SKU_20210927T224557_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18366_005_11SKU_20211001T211315_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18366_006_11SKU_20211001T211407_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18381_003_11SKU_20211002T202552_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18381_004_11SKU_20211002T202644_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18427_004_11SKU_20211005T194033_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18427_005_11SKU_20211005T194125_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18488_005_11SKU_20211009T180754_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18488_006_11SKU_20211009T180845_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18503_003_11SKU_20211010T172028_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18503_004_11SKU_20211010T172120_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18523_014_11SKU_20211012T004126_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18523_015_11SKU_20211012T004218_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18550_001_11SKU_20211013T163533_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18565_003_11SKU_20211014T154818_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18565_004_11SKU_20211014T154910_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18585_014_11SKU_20211015T231014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18611_005_11SKU_20211017T150348_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18626_003_11SKU_20211018T141630_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18646_015_11SKU_20211019T213747_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18646_016_11SKU_20211019T213839_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18707_010_11SKU_20211023T200631_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18769_011_11SKU_20211027T183419_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18784_013_11SKU_20211028T174624_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18830_002_11SKU_20211031T170113_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18830_003_11SKU_20211031T170205_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18845_013_11SKU_20211101T161406_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18891_015_11SKU_20211104T152907_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18906_005_11SKU_20211105T144122_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19176_003_11SKU_20211123T002751_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19237_005_11SKU_20211126T225615_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19359_001_11SKU_20211204T195235_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19481_004_11SKU_20211212T164644_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19516_011_11SKU_20211214T232026_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19542_001_11SKU_20211216T151354_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19577_002_11SKU_20211218T214722_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19577_003_11SKU_20211218T214814_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19638_015_11SKU_20211222T201427_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19638_016_11SKU_20211222T201519_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19699_003_11SKU_20211226T183925_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19699_004_11SKU_20211226T184017_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19760_014_11SKU_20211230T170415_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19806_009_11SKU_20220102T161559_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19821_013_11SKU_20220103T152758_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20091_001_11SKU_20220121T005701_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20198_003_11SKU_20220127T223431_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20213_001_11SKU_20220128T214621_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20274_001_11SKU_20220201T201046_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20320_003_11SKU_20220204T192301_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20381_004_11SKU_20220208T174724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20442_002_11SKU_20220212T161126_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20442_003_11SKU_20220212T161218_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20477_010_11SKU_20220214T224309_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20477_011_11SKU_20220214T224401_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20523_015_11SKU_20220217T215556_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20538_012_11SKU_20220218T210748_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20599_007_11SKU_20220222T193108_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20645_006_11SKU_20220225T184305_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20660_003_11SKU_20220226T175457_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20706_011_11SKU_20220301T170805_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20991_003_11SKU_20220320T015243_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21038_003_11SKU_20220323T010547_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21038_004_11SKU_20220323T010639_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21160_005_11SKU_20220330T215540_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21221_001_11SKU_20220403T201950_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21282_003_11SKU_20220407T184316_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21282_004_11SKU_20220407T184408_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21302_017_11SKU_20220409T020335_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21328_001_11SKU_20220410T175516_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21343_001_11SKU_20220411T170644_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21363_015_11SKU_20220413T002642_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21404_001_11SKU_20220415T153001_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21424_011_11SKU_20220416T224957_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21546_014_11SKU_20220424T193522_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21546_015_11SKU_20220424T193614_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21669_011_11SKU_20220502T162327_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21669_012_11SKU_20220502T162419_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21714_014_11SKU_20220505T153518_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21714_015_11SKU_20220505T153610_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21729_012_11SKU_20220506T144724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21775_015_11SKU_20220509T135851_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21791_011_11SKU_20220510T131033_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21924_003_11SKU_20220519T023900_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21939_001_11SKU_20220520T015054_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21939_002_11SKU_20220520T015146_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21985_003_11SKU_20220523T010400_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22000_002_11SKU_20220524T001551_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22061_003_11SKU_20220527T224006_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22061_004_11SKU_20220527T224058_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22107_003_11SKU_20220530T215229_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22122_003_11SKU_20220531T210411_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22168_005_11SKU_20220603T201624_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22203_018_11SKU_20220606T024844_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22250_019_11SKU_20220609T020045_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22265_013_11SKU_20220610T011128_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22265_014_11SKU_20220610T011220_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22291_001_11SKU_20220611T170328_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22291_002_11SKU_20220611T170419_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22352_001_11SKU_20220615T152649_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22352_002_11SKU_20220615T152741_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22387_011_11SKU_20220617T215819_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22387_012_11SKU_20220617T215911_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22398_001_11SKU_20220618T143856_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22413_003_11SKU_20220619T135028_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22413_004_11SKU_20220619T135120_0700_01.zip']\n\n\nLet’s run our zonal statistics analysis on each of the ECOSTRESS granules we have available, and produce a table of these statistics.\n\nsalt_marsh_ST = pd.DataFrame({}, columns=[\"datetime_solar\", \"type\", \"ST\"])\n\nfor filename in L2T_LSTE_filenames:\n    print(f\"reading L2T LSTE file: {filename}\")\n    granule_ID = splitext(basename(filename))[0]\n    URI = f\"zip://{filename}!/{granule_ID}/{granule_ID}_LST.tif\"\n    ST_K_raster = rxr.open_rasterio(URI).squeeze('band', drop=True)\n    ST_C_raster = ST_K_raster.copy()\n    ST_C_raster.data = ST_K_raster.data - 273.15\n    datetime_UTC = datetime.strptime(basename(filename).split(\"_\")[-3], \"%Y%m%dT%H%M%S\")\n    centroid_UTM = Point(np.nanmean(ST_K_raster.x), np.nanmean(ST_K_raster.y))\n    centroid_latlon = transform(Transformer.from_crs(CRS, \"EPSG:4326\", always_xy=True).transform, centroid_UTM)\n    datetime_solar = datetime_UTC + timedelta(hours=(np.radians(centroid_latlon.x) / np.pi * 12))\n    ST_C_subset = ST_C_raster.rio.clip([box(xmin, ymin, xmax, ymax)])\n\n    landcover_stats = pd.DataFrame(zonal_stats(\n        landcover_UTM,\n        ST_C_subset.data,\n        affine=ST_C_subset.rio.transform(),\n        nodata=np.nan,\n        stats=[\"median\"]\n    ))\n\n    landcover_stats[\"type\"] = landcover_UTM[\"type\"]\n    landcover_stats[\"datetime_solar\"] = datetime_solar\n    landcover_stats[\"ST\"] = landcover_stats[\"median\"].apply(lambda value: np.nan if value is None else value)\n    landcover_stats = landcover_stats[[\"datetime_solar\", \"type\", \"ST\"]]\n    salt_marsh_ST = pd.concat([salt_marsh_ST, landcover_stats])\n\nsalt_marsh_ST = salt_marsh_ST.dropna()\nsalt_marsh_ST\n\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_08825_001_11SKU_20200126T002103_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_08886_001_11SKU_20200129T224753_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09008_001_11SKU_20200206T194050_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09104_012_11SKU_20200213T004053_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09130_001_11SKU_20200214T163344_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09150_013_11SKU_20200215T235451_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09516_010_11SKU_20200310T143221_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09740_001_11SKU_20200325T005731_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09801_001_11SKU_20200328T232451_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09862_001_11SKU_20200401T215211_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_09923_001_11SKU_20200405T202021_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10019_010_11SKU_20200412T012318_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10060_001_11SKU_20200414T162940_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10080_015_11SKU_20200415T235114_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10121_001_11SKU_20200418T145755_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10141_013_11SKU_20200419T221907_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10182_001_11SKU_20200422T132414_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10202_012_11SKU_20200423T204504_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10324_012_11SKU_20200501T173635_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10655_001_11SKU_20200523T013719_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10716_001_11SKU_20200527T000255_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10777_001_11SKU_20200530T222828_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10838_001_11SKU_20200603T205400_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10899_001_11SKU_20200607T191919_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10919_012_11SKU_20200609T023948_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10934_013_11SKU_20200610T015203_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10980_012_11SKU_20200613T010521_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_10995_004_11SKU_20200614T001724_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11021_001_11SKU_20200615T161002_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11041_014_11SKU_20200616T233014_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11056_007_11SKU_20200617T224237_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11082_001_11SKU_20200619T143523_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11102_013_11SKU_20200620T215537_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11117_006_11SKU_20200621T210737_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11143_001_11SKU_20200623T130041_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11163_010_11SKU_20200624T202055_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11178_012_11SKU_20200625T193257_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11224_007_11SKU_20200628T184603_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11224_008_11SKU_20200628T184655_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11407_014_11SKU_20200710T140339_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11407_015_11SKU_20200710T140431_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11570_001_11SKU_20200721T015918_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11616_001_11SKU_20200724T011211_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11631_001_11SKU_20200725T002428_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11677_001_11SKU_20200727T233715_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11738_001_11SKU_20200731T220318_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11799_001_11SKU_20200804T202950_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11860_002_11SKU_20200808T185624_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11895_012_11SKU_20200811T012953_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11921_003_11SKU_20200812T172251_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11956_009_11SKU_20200814T235617_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_11982_002_11SKU_20200816T154913_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12043_002_11SKU_20200820T141537_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12078_012_11SKU_20200822T204904_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12139_005_11SKU_20200826T191453_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12200_006_11SKU_20200830T174050_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12200_007_11SKU_20200830T174142_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12261_006_11SKU_20200903T160702_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12261_007_11SKU_20200903T160754_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12322_008_11SKU_20200907T143314_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12322_009_11SKU_20200907T143406_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12531_003_11SKU_20200921T014818_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12592_001_11SKU_20200925T001530_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12653_004_11SKU_20200928T224329_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12668_005_11SKU_20200929T215616_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12714_004_11SKU_20201002T211124_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12729_003_11SKU_20201003T202421_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12775_004_11SKU_20201006T193901_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12790_005_11SKU_20201007T185136_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12836_003_11SKU_20201010T180517_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12871_012_11SKU_20201013T003732_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12871_013_11SKU_20201013T003824_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12897_003_11SKU_20201014T163113_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12912_003_11SKU_20201015T154331_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12932_012_11SKU_20201016T230328_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12932_013_11SKU_20201016T230421_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12993_012_11SKU_20201020T212919_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_12993_013_11SKU_20201020T213011_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13054_009_11SKU_20201024T195506_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13054_010_11SKU_20201024T195558_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13115_010_11SKU_20201028T182051_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13115_011_11SKU_20201028T182143_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13176_003_11SKU_20201101T164629_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13176_004_11SKU_20201101T164721_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13237_012_11SKU_20201105T151255_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13568_001_11SKU_20201126T231758_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13629_001_11SKU_20201130T214441_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13751_001_11SKU_20201208T183734_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13847_012_11SKU_20201214T233712_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13893_006_11SKU_20201217T225123_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13908_007_11SKU_20201218T220331_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13954_012_11SKU_20201221T211655_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_13969_013_11SKU_20201222T202946_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14015_008_11SKU_20201225T194306_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14076_009_11SKU_20201229T180922_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14091_012_11SKU_20201230T172204_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14137_011_11SKU_20210102T163522_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14152_005_11SKU_20210103T154810_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14483_003_11SKU_20210124T235211_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14544_003_11SKU_20210128T221939_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14666_003_11SKU_20210205T191410_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14727_004_11SKU_20210209T174124_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14747_011_11SKU_20210211T010216_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14788_003_11SKU_20210213T160839_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14808_002_11SKU_20210214T232930_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14823_011_11SKU_20210215T224228_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14884_009_11SKU_20210219T210839_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14884_010_11SKU_20210219T210931_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_14945_012_11SKU_20210223T193640_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15006_002_11SKU_20210227T180246_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15006_003_11SKU_20210227T180338_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15067_013_11SKU_20210303T163037_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15128_012_11SKU_20210307T145729_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15399_001_11SKU_20210325T003939_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15460_003_11SKU_20210328T230652_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15521_003_11SKU_20210401T213401_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15644_003_11SKU_20210409T182905_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15705_003_11SKU_20210413T165635_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15740_006_11SKU_20210415T232949_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15740_007_11SKU_20210415T233041_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15766_003_11SKU_20210417T152402_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15801_011_11SKU_20210419T215715_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15801_012_11SKU_20210419T215807_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15862_013_11SKU_20210423T202526_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15923_012_11SKU_20210427T185153_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15923_013_11SKU_20210427T185245_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15984_012_11SKU_20210501T171900_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_15984_013_11SKU_20210501T171952_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16045_012_11SKU_20210505T154652_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16271_003_11SKU_20210520T021358_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16317_003_11SKU_20210523T012832_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16332_001_11SKU_20210524T004111_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16378_004_11SKU_20210526T235552_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16393_004_11SKU_20210527T230830_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16439_002_11SKU_20210530T222305_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16454_004_11SKU_20210531T213545_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16501_003_11SKU_20210603T205023_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16516_003_11SKU_20210604T200301_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16551_012_11SKU_20210607T023615_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16562_004_11SKU_20210607T191736_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16577_004_11SKU_20210608T183014_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16623_005_11SKU_20210611T174439_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16638_005_11SKU_20210612T165722_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16658_016_11SKU_20210614T001803_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16700_001_11SKU_20210616T152428_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16720_016_11SKU_20210617T224508_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16735_011_11SKU_20210618T215733_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16781_013_11SKU_20210621T211207_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16781_014_11SKU_20210621T211259_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16796_003_11SKU_20210622T202434_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16807_005_11SKU_20210623T130548_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16842_007_11SKU_20210625T193923_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16842_008_11SKU_20210625T194015_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16857_009_11SKU_20210626T185220_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16903_015_11SKU_20210629T180745_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16918_011_11SKU_20210630T172039_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_16979_014_11SKU_20210704T154838_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17025_013_11SKU_20210707T150321_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17025_014_11SKU_20210707T150413_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17040_014_11SKU_20210708T141641_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17188_005_11SKU_20210718T030531_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17249_001_11SKU_20210722T013317_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17310_003_11SKU_20210726T000059_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17371_001_11SKU_20210729T222824_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17432_001_11SKU_20210802T205549_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17432_002_11SKU_20210802T205641_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17494_001_11SKU_20210806T192326_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17494_002_11SKU_20210806T192418_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17509_003_11SKU_20210807T183603_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17529_003_11SKU_20210809T015711_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17529_004_11SKU_20210809T015803_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17556_004_11SKU_20210810T175101_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17571_002_11SKU_20210811T170335_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17591_015_11SKU_20210813T002437_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17591_016_11SKU_20210813T002529_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17617_005_11SKU_20210814T161828_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17632_001_11SKU_20210815T153100_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17652_003_11SKU_20210816T225242_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17679_001_11SKU_20210818T144553_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17694_002_11SKU_20210819T135829_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17775_014_11SKU_20210824T194846_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17851_008_11SKU_20210829T173013_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17898_014_11SKU_20210901T164550_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17913_013_11SKU_20210902T155853_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17959_014_11SKU_20210905T151438_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_17974_003_11SKU_20210906T142728_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18183_002_11SKU_20210920T014841_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18244_002_11SKU_20210924T001802_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18305_005_11SKU_20210927T224557_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18366_005_11SKU_20211001T211315_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18366_006_11SKU_20211001T211407_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18381_003_11SKU_20211002T202552_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18381_004_11SKU_20211002T202644_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18427_004_11SKU_20211005T194033_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18427_005_11SKU_20211005T194125_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18488_005_11SKU_20211009T180754_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18488_006_11SKU_20211009T180845_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18503_003_11SKU_20211010T172028_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18503_004_11SKU_20211010T172120_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18523_014_11SKU_20211012T004126_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18523_015_11SKU_20211012T004218_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18550_001_11SKU_20211013T163533_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18565_003_11SKU_20211014T154818_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18565_004_11SKU_20211014T154910_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18585_014_11SKU_20211015T231014_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18611_005_11SKU_20211017T150348_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18626_003_11SKU_20211018T141630_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18646_015_11SKU_20211019T213747_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18646_016_11SKU_20211019T213839_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18707_010_11SKU_20211023T200631_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18769_011_11SKU_20211027T183419_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18784_013_11SKU_20211028T174624_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18830_002_11SKU_20211031T170113_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18830_003_11SKU_20211031T170205_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18845_013_11SKU_20211101T161406_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18891_015_11SKU_20211104T152907_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_18906_005_11SKU_20211105T144122_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19176_003_11SKU_20211123T002751_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19237_005_11SKU_20211126T225615_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19359_001_11SKU_20211204T195235_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19481_004_11SKU_20211212T164644_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19516_011_11SKU_20211214T232026_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19542_001_11SKU_20211216T151354_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19577_002_11SKU_20211218T214722_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19577_003_11SKU_20211218T214814_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19638_015_11SKU_20211222T201427_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19638_016_11SKU_20211222T201519_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19699_003_11SKU_20211226T183925_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19699_004_11SKU_20211226T184017_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19760_014_11SKU_20211230T170415_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19806_009_11SKU_20220102T161559_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_19821_013_11SKU_20220103T152758_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20091_001_11SKU_20220121T005701_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20198_003_11SKU_20220127T223431_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20213_001_11SKU_20220128T214621_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20274_001_11SKU_20220201T201046_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20320_003_11SKU_20220204T192301_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20381_004_11SKU_20220208T174724_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20442_002_11SKU_20220212T161126_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20442_003_11SKU_20220212T161218_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20477_010_11SKU_20220214T224309_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20477_011_11SKU_20220214T224401_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20523_015_11SKU_20220217T215556_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20538_012_11SKU_20220218T210748_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20599_007_11SKU_20220222T193108_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20645_006_11SKU_20220225T184305_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20660_003_11SKU_20220226T175457_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20706_011_11SKU_20220301T170805_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_20991_003_11SKU_20220320T015243_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21038_003_11SKU_20220323T010547_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21038_004_11SKU_20220323T010639_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21160_005_11SKU_20220330T215540_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21221_001_11SKU_20220403T201950_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21282_003_11SKU_20220407T184316_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21282_004_11SKU_20220407T184408_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21302_017_11SKU_20220409T020335_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21328_001_11SKU_20220410T175516_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21343_001_11SKU_20220411T170644_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21363_015_11SKU_20220413T002642_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21404_001_11SKU_20220415T153001_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21424_011_11SKU_20220416T224957_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21546_014_11SKU_20220424T193522_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21546_015_11SKU_20220424T193614_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21669_011_11SKU_20220502T162327_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21669_012_11SKU_20220502T162419_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21714_014_11SKU_20220505T153518_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21714_015_11SKU_20220505T153610_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21729_012_11SKU_20220506T144724_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21775_015_11SKU_20220509T135851_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21791_011_11SKU_20220510T131033_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21924_003_11SKU_20220519T023900_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21939_001_11SKU_20220520T015054_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21939_002_11SKU_20220520T015146_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_21985_003_11SKU_20220523T010400_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22000_002_11SKU_20220524T001551_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22061_003_11SKU_20220527T224006_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22061_004_11SKU_20220527T224058_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22107_003_11SKU_20220530T215229_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22122_003_11SKU_20220531T210411_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22168_005_11SKU_20220603T201624_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22203_018_11SKU_20220606T024844_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22250_019_11SKU_20220609T020045_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22265_013_11SKU_20220610T011128_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22265_014_11SKU_20220610T011220_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22291_001_11SKU_20220611T170328_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22291_002_11SKU_20220611T170419_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22352_001_11SKU_20220615T152649_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22352_002_11SKU_20220615T152741_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22387_011_11SKU_20220617T215819_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22387_012_11SKU_20220617T215911_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22398_001_11SKU_20220618T143856_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22413_003_11SKU_20220619T135028_0700_01.zip\nreading L2T LSTE file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L2T_LSTE_22413_004_11SKU_20220619T135120_0700_01.zip\n\n\n\n\n\n\n  \n    \n      \n      datetime_solar\n      type\n      ST\n    \n  \n  \n    \n      0\n      2020-01-25 16:22:20.533312\n      channel\n      13.709991\n    \n    \n      2\n      2020-01-25 16:22:20.533312\n      upland\n      13.649994\n    \n    \n      4\n      2020-01-25 16:22:20.533312\n      marsh\n      13.760010\n    \n    \n      0\n      2020-01-29 14:49:10.533312\n      channel\n      16.119995\n    \n    \n      1\n      2020-01-29 14:49:10.533312\n      salt flat\n      17.570007\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      0\n      2022-06-19 05:51:45.533312\n      channel\n      14.320007\n    \n    \n      1\n      2022-06-19 05:51:45.533312\n      salt flat\n      13.869995\n    \n    \n      2\n      2022-06-19 05:51:45.533312\n      upland\n      13.850006\n    \n    \n      3\n      2022-06-19 05:51:45.533312\n      pan\n      14.250000\n    \n    \n      4\n      2022-06-19 05:51:45.533312\n      marsh\n      14.250000\n    \n  \n\n623 rows × 3 columns\n\n\n\n\n\n\nLet’s examine the distribution of ECOSTRESS surface temperatures seen in the different land-cover types within the Carpinteria Salt Marsh. To visualize these distributions, we’re plotting them as boxplots. We’re using the seaborn library to generate these boxplots.\nWe tend to see cooler temperatures where water settles in the channel and warmer temperatures in the upland and salt flat areas, which are above the water and lack vegetation. Moderate temperatures are seen in the vegetated marsh and pan areas in between.\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    salt_marsh_ST_overall_median = salt_marsh_ST.groupby(\"type\").median().reset_index()[[\"type\", \"ST\"]].sort_values(\"ST\")\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\n\nsns.boxplot(\n    data=salt_marsh_ST,\n    x=\"type\",\n    y=\"ST\",\n    order=salt_marsh_ST_overall_median.type,\n    palette=landcover_colors,\n    ax=ax\n)\n\nax.set(xlabel=\"Land Cover Type\", ylabel=\"Median Surface Temperature (Celsius)\")\nyticks = range(int(np.nanmin(salt_marsh_ST.ST)), int(np.nanmax(salt_marsh_ST.ST)) + 2)\nax.set_yticks(yticks)\nyticklabels = [f\"{tick}°C\" for tick in yticks]\nax.set_yticklabels(yticklabels)\nplt.title(\"Carpinteria Salt Marsh Median ECOSTRESS Surface Temperature Boxplots by Land Cover\")\nplt.show()\nplt.close(fig)\n\nprint(salt_marsh_ST_overall_median)\n\n\n\n\n        type         ST\n0    channel  20.170006\n1      marsh  20.750000\n2        pan  20.800003\n4     upland  22.500015\n3  salt flat  22.929993\n\n\n\n\n\nLet’s examine a time-series of ECOSTRESS surface temperature. To make this time-series smooth, we’ll aggregate our zonal statistics by season.\n\nsalt_marsh_ST_seasonal = salt_marsh_ST.copy()\nsalt_marsh_ST_seasonal[\"season\"] = salt_marsh_ST_seasonal.apply(\n    lambda row: date(int(row.datetime_solar.year), int(((row.datetime_solar.month - 1) // 3) * 3 + 1), 1), axis=1)\nsalt_marsh_ST_seasonal = salt_marsh_ST_seasonal[[\"season\", \"type\", \"ST\"]]\nsalt_marsh_ST_seasonal = salt_marsh_ST_seasonal.dropna().groupby(\n    by=[\"season\", \"type\"]).median().reset_index()\nsalt_marsh_ST_seasonal\n\n\n\n\n\n  \n    \n      \n      season\n      type\n      ST\n    \n  \n  \n    \n      0\n      2020-01-01\n      channel\n      14.730011\n    \n    \n      1\n      2020-01-01\n      marsh\n      15.350006\n    \n    \n      2\n      2020-01-01\n      pan\n      16.570007\n    \n    \n      3\n      2020-01-01\n      salt flat\n      15.250015\n    \n    \n      4\n      2020-01-01\n      upland\n      15.300003\n    \n    \n      5\n      2020-04-01\n      channel\n      24.750000\n    \n    \n      6\n      2020-04-01\n      marsh\n      25.100006\n    \n    \n      7\n      2020-04-01\n      pan\n      25.450012\n    \n    \n      8\n      2020-04-01\n      salt flat\n      26.130005\n    \n    \n      9\n      2020-04-01\n      upland\n      26.010010\n    \n    \n      10\n      2020-07-01\n      channel\n      23.160004\n    \n    \n      11\n      2020-07-01\n      marsh\n      23.330017\n    \n    \n      12\n      2020-07-01\n      pan\n      24.209991\n    \n    \n      13\n      2020-07-01\n      salt flat\n      23.339996\n    \n    \n      14\n      2020-07-01\n      upland\n      25.669998\n    \n    \n      15\n      2020-10-01\n      channel\n      19.830002\n    \n    \n      16\n      2020-10-01\n      marsh\n      20.300003\n    \n    \n      17\n      2020-10-01\n      pan\n      20.270004\n    \n    \n      18\n      2020-10-01\n      salt flat\n      22.360016\n    \n    \n      19\n      2020-10-01\n      upland\n      21.650009\n    \n    \n      20\n      2021-01-01\n      channel\n      18.620010\n    \n    \n      21\n      2021-01-01\n      marsh\n      19.045013\n    \n    \n      22\n      2021-01-01\n      pan\n      19.559998\n    \n    \n      23\n      2021-01-01\n      salt flat\n      21.250000\n    \n    \n      24\n      2021-01-01\n      upland\n      21.685013\n    \n    \n      25\n      2021-04-01\n      channel\n      24.375015\n    \n    \n      26\n      2021-04-01\n      marsh\n      25.435005\n    \n    \n      27\n      2021-04-01\n      pan\n      25.030014\n    \n    \n      28\n      2021-04-01\n      salt flat\n      27.480011\n    \n    \n      29\n      2021-04-01\n      upland\n      28.165009\n    \n    \n      30\n      2021-07-01\n      channel\n      25.750015\n    \n    \n      31\n      2021-07-01\n      marsh\n      25.550018\n    \n    \n      32\n      2021-07-01\n      pan\n      26.090012\n    \n    \n      33\n      2021-07-01\n      salt flat\n      25.149994\n    \n    \n      34\n      2021-07-01\n      upland\n      25.119995\n    \n    \n      35\n      2021-10-01\n      channel\n      18.139999\n    \n    \n      36\n      2021-10-01\n      marsh\n      18.310013\n    \n    \n      37\n      2021-10-01\n      pan\n      19.529999\n    \n    \n      38\n      2021-10-01\n      salt flat\n      20.750015\n    \n    \n      39\n      2021-10-01\n      upland\n      18.520004\n    \n    \n      40\n      2022-01-01\n      channel\n      18.635002\n    \n    \n      41\n      2022-01-01\n      marsh\n      18.639999\n    \n    \n      42\n      2022-01-01\n      pan\n      17.950012\n    \n    \n      43\n      2022-01-01\n      salt flat\n      19.340012\n    \n    \n      44\n      2022-01-01\n      upland\n      20.160004\n    \n    \n      45\n      2022-04-01\n      channel\n      18.450012\n    \n    \n      46\n      2022-04-01\n      marsh\n      18.400009\n    \n    \n      47\n      2022-04-01\n      pan\n      18.929993\n    \n    \n      48\n      2022-04-01\n      salt flat\n      19.010010\n    \n    \n      49\n      2022-04-01\n      upland\n      18.835014\n    \n  \n\n\n\n\nWe’re using the seaborn package again to visualize this timeseries as a line-plot. In this line-plot, we can see that temperatures in the Carptineria Salt Marsh tend to drop in the Winter and rise in the Summer. Channel and marsh temperatures tend to be the coolest for much of the year, and upland and salt flat temperatures tend to be the warmest for much of the year.\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\n\nsns.lineplot(\n    data=salt_marsh_ST_seasonal,\n    x=\"season\",\n    y=\"ST\",\n    hue=\"type\",\n    ax=ax\n)\n\nax.set(xlabel=\"Season\", ylabel=\"Seasonal Median Surface Temperature (Celsius)\")\nax.set_yticks(range(int(min(salt_marsh_ST_seasonal.ST)), int(max(salt_marsh_ST_seasonal.ST)) + 1))\n\nplt.legend(title=\"Marsh Land Type\")\nplt.title(\"Carpinteria Salt Marsh Seasonal Median ECOSTRESS Surface Temperature Timeline by Land Cover\")\nplt.show()\nplt.close(fig)\n\n\n\n\n\n\n\nNow let’s repeat our time-series analysis using the ECOSTRESS evapotranspiration product. ECOSTRESS Collection 2 includes the JPL Evapotranspiration Ensemble (JET) product, which runs several models to create a balanced ET estimate. We’re searching through our set of downloaded ECOSTRESS files for L3T_JET granules using glob.\n\nL3T_JET_filenames = sorted(glob(join(DATA_DIRECTORY, \"*_L3T_JET_*.zip\")))\nL3T_JET_filenames\n\n['../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_08886_001_11SKU_20200129T224753_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09008_001_11SKU_20200206T194050_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09801_001_11SKU_20200328T232451_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09862_001_11SKU_20200401T215211_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09923_001_11SKU_20200405T202021_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10080_015_11SKU_20200415T235114_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10121_001_11SKU_20200418T145755_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10141_013_11SKU_20200419T221907_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10202_012_11SKU_20200423T204504_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10324_012_11SKU_20200501T173635_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10716_001_11SKU_20200527T000255_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10777_001_11SKU_20200530T222828_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10838_001_11SKU_20200603T205400_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10899_001_11SKU_20200607T191919_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10980_012_11SKU_20200613T010521_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10995_004_11SKU_20200614T001724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11021_001_11SKU_20200615T161002_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11041_014_11SKU_20200616T233014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11056_007_11SKU_20200617T224237_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11082_001_11SKU_20200619T143523_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11102_013_11SKU_20200620T215537_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11117_006_11SKU_20200621T210737_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11163_010_11SKU_20200624T202055_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11178_012_11SKU_20200625T193257_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11224_007_11SKU_20200628T184603_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11224_008_11SKU_20200628T184655_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11616_001_11SKU_20200724T011211_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11631_001_11SKU_20200725T002428_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11677_001_11SKU_20200727T233715_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11738_001_11SKU_20200731T220318_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11799_001_11SKU_20200804T202950_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11860_002_11SKU_20200808T185624_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11921_003_11SKU_20200812T172251_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11956_009_11SKU_20200814T235617_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11982_002_11SKU_20200816T154913_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12200_006_11SKU_20200830T174050_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12200_007_11SKU_20200830T174142_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12261_006_11SKU_20200903T160702_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12261_007_11SKU_20200903T160754_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12653_004_11SKU_20200928T224329_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12714_004_11SKU_20201002T211124_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12775_004_11SKU_20201006T193901_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12790_005_11SKU_20201007T185136_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12836_003_11SKU_20201010T180517_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12897_003_11SKU_20201014T163113_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12912_003_11SKU_20201015T154331_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12932_012_11SKU_20201016T230328_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12932_013_11SKU_20201016T230421_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12993_012_11SKU_20201020T212919_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12993_013_11SKU_20201020T213011_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13054_009_11SKU_20201024T195506_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13054_010_11SKU_20201024T195558_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13115_010_11SKU_20201028T182051_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13115_011_11SKU_20201028T182143_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13176_003_11SKU_20201101T164629_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13176_004_11SKU_20201101T164721_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13629_001_11SKU_20201130T214441_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13751_001_11SKU_20201208T183734_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13908_007_11SKU_20201218T220331_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13954_012_11SKU_20201221T211655_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13969_013_11SKU_20201222T202946_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14015_008_11SKU_20201225T194306_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14076_009_11SKU_20201229T180922_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14091_012_11SKU_20201230T172204_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14666_003_11SKU_20210205T191410_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14808_002_11SKU_20210214T232930_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14823_011_11SKU_20210215T224228_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14884_010_11SKU_20210219T210931_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14945_012_11SKU_20210223T193640_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15006_003_11SKU_20210227T180338_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15460_003_11SKU_20210328T230652_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15521_003_11SKU_20210401T213401_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15644_003_11SKU_20210409T182905_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15705_003_11SKU_20210413T165635_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15740_006_11SKU_20210415T232949_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15740_007_11SKU_20210415T233041_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15766_003_11SKU_20210417T152402_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15801_011_11SKU_20210419T215715_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15801_012_11SKU_20210419T215807_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15862_013_11SKU_20210423T202526_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15923_012_11SKU_20210427T185153_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15923_013_11SKU_20210427T185245_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15984_013_11SKU_20210501T171952_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16045_012_11SKU_20210505T154652_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16332_001_11SKU_20210524T004111_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16378_004_11SKU_20210526T235552_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16393_004_11SKU_20210527T230830_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16439_002_11SKU_20210530T222305_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16454_004_11SKU_20210531T213545_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16501_003_11SKU_20210603T205023_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16516_003_11SKU_20210604T200301_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16562_004_11SKU_20210607T191736_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16577_004_11SKU_20210608T183014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16623_005_11SKU_20210611T174439_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16638_005_11SKU_20210612T165722_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16658_016_11SKU_20210614T001803_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16700_001_11SKU_20210616T152428_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16735_011_11SKU_20210618T215733_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16781_013_11SKU_20210621T211207_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16796_003_11SKU_20210622T202434_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16842_007_11SKU_20210625T193923_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16842_008_11SKU_20210625T194015_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16857_009_11SKU_20210626T185220_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16903_015_11SKU_20210629T180745_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16918_011_11SKU_20210630T172039_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16979_014_11SKU_20210704T154838_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17025_013_11SKU_20210707T150321_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17025_014_11SKU_20210707T150413_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17310_003_11SKU_20210726T000059_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17371_001_11SKU_20210729T222824_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17432_001_11SKU_20210802T205549_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17432_002_11SKU_20210802T205641_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17494_001_11SKU_20210806T192326_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17509_003_11SKU_20210807T183603_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17556_004_11SKU_20210810T175101_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17591_016_11SKU_20210813T002529_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17632_001_11SKU_20210815T153100_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17652_003_11SKU_20210816T225242_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17775_014_11SKU_20210824T194846_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17898_014_11SKU_20210901T164550_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17913_013_11SKU_20210902T155853_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18305_005_11SKU_20210927T224557_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18366_005_11SKU_20211001T211315_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18366_006_11SKU_20211001T211407_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18427_004_11SKU_20211005T194033_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18427_005_11SKU_20211005T194125_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18488_005_11SKU_20211009T180754_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18488_006_11SKU_20211009T180845_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18503_003_11SKU_20211010T172028_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18550_001_11SKU_20211013T163533_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18565_003_11SKU_20211014T154818_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18585_014_11SKU_20211015T231014_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18646_015_11SKU_20211019T213747_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18646_016_11SKU_20211019T213839_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18707_010_11SKU_20211023T200631_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18769_011_11SKU_20211027T183419_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18830_002_11SKU_20211031T170113_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18830_003_11SKU_20211031T170205_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20198_003_11SKU_20220127T223431_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20213_001_11SKU_20220128T214621_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20320_003_11SKU_20220204T192301_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20381_004_11SKU_20220208T174724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20477_011_11SKU_20220214T224401_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20523_015_11SKU_20220217T215556_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20538_012_11SKU_20220218T210748_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20645_006_11SKU_20220225T184305_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20660_003_11SKU_20220226T175457_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20706_011_11SKU_20220301T170805_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21160_005_11SKU_20220330T215540_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21221_001_11SKU_20220403T201950_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21282_003_11SKU_20220407T184316_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21282_004_11SKU_20220407T184408_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21343_001_11SKU_20220411T170644_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21363_015_11SKU_20220413T002642_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21404_001_11SKU_20220415T153001_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21424_011_11SKU_20220416T224957_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21546_014_11SKU_20220424T193522_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21546_015_11SKU_20220424T193614_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21669_011_11SKU_20220502T162327_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21714_014_11SKU_20220505T153518_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21714_015_11SKU_20220505T153610_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21729_012_11SKU_20220506T144724_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21985_003_11SKU_20220523T010400_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22000_002_11SKU_20220524T001551_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22107_003_11SKU_20220530T215229_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22122_003_11SKU_20220531T210411_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22168_005_11SKU_20220603T201624_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22265_013_11SKU_20220610T011128_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22265_014_11SKU_20220610T011220_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22291_001_11SKU_20220611T170328_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22291_002_11SKU_20220611T170419_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22352_001_11SKU_20220615T152649_0700_01.zip',\n '../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22387_011_11SKU_20220617T215819_0700_01.zip']\n\n\nWe’re running our zonal statistics time-series analysis again, but now loading daily evapotranspiration (ET) in millimeters per day from the L3T JET product.\n\nsalt_marsh_ET = pd.DataFrame({}, columns=[\"datetime_solar\", \"type\", \"ET\"])\n\nfor filename in L3T_JET_filenames:\n    print(f\"reading L3T JET file: {filename}\")\n    granule_ID = splitext(basename(filename))[0]\n    URI = f\"zip://{filename}!/{granule_ID}/{granule_ID}_ETdaily.tif\"\n    ET_raster = rxr.open_rasterio(URI).squeeze('band', drop=True)\n    datetime_UTC = datetime.strptime(\n        basename(filename).split(\"_\")[-3], \"%Y%m%dT%H%M%S\")\n    centroid_UTM = Point(np.nanmean(ST_K_raster.x), np.nanmean(ST_K_raster.y))\n    centroid_latlon = transform(Transformer.from_crs(\n        CRS, \"EPSG:4326\", always_xy=True).transform, centroid_UTM)\n    datetime_solar = datetime_UTC + \\\n        timedelta(hours=(np.radians(centroid_latlon.x) / np.pi * 12))\n    ET_subset = ET_raster.rio.clip([box(xmin, ymin, xmax, ymax)])\n\n    landcover_stats = pd.DataFrame(zonal_stats(\n        landcover_UTM,\n        ET_subset.data,\n        affine=ET_subset.rio.transform(),\n        nodata=np.nan,\n        stats=[\"median\"]\n    ))\n\n    landcover_stats[\"type\"] = landcover_UTM[\"type\"]\n    landcover_stats[\"datetime_solar\"] = datetime_solar\n    landcover_stats[\"ET\"] = landcover_stats[\"median\"].apply(lambda value: np.nan if value is None or value == 0 else value)\n    landcover_stats = landcover_stats[[\"datetime_solar\", \"type\", \"ET\"]]\n    salt_marsh_ET = pd.concat([salt_marsh_ET, landcover_stats])\n\nsalt_marsh_ET = salt_marsh_ET.dropna()\nsalt_marsh_ET\n\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_08886_001_11SKU_20200129T224753_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09008_001_11SKU_20200206T194050_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09801_001_11SKU_20200328T232451_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09862_001_11SKU_20200401T215211_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_09923_001_11SKU_20200405T202021_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10080_015_11SKU_20200415T235114_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10121_001_11SKU_20200418T145755_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10141_013_11SKU_20200419T221907_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10202_012_11SKU_20200423T204504_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10324_012_11SKU_20200501T173635_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10716_001_11SKU_20200527T000255_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10777_001_11SKU_20200530T222828_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10838_001_11SKU_20200603T205400_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10899_001_11SKU_20200607T191919_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10980_012_11SKU_20200613T010521_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_10995_004_11SKU_20200614T001724_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11021_001_11SKU_20200615T161002_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11041_014_11SKU_20200616T233014_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11056_007_11SKU_20200617T224237_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11082_001_11SKU_20200619T143523_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11102_013_11SKU_20200620T215537_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11117_006_11SKU_20200621T210737_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11163_010_11SKU_20200624T202055_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11178_012_11SKU_20200625T193257_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11224_007_11SKU_20200628T184603_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11224_008_11SKU_20200628T184655_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11616_001_11SKU_20200724T011211_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11631_001_11SKU_20200725T002428_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11677_001_11SKU_20200727T233715_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11738_001_11SKU_20200731T220318_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11799_001_11SKU_20200804T202950_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11860_002_11SKU_20200808T185624_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11921_003_11SKU_20200812T172251_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11956_009_11SKU_20200814T235617_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_11982_002_11SKU_20200816T154913_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12200_006_11SKU_20200830T174050_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12200_007_11SKU_20200830T174142_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12261_006_11SKU_20200903T160702_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12261_007_11SKU_20200903T160754_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12653_004_11SKU_20200928T224329_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12714_004_11SKU_20201002T211124_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12775_004_11SKU_20201006T193901_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12790_005_11SKU_20201007T185136_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12836_003_11SKU_20201010T180517_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12897_003_11SKU_20201014T163113_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12912_003_11SKU_20201015T154331_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12932_012_11SKU_20201016T230328_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12932_013_11SKU_20201016T230421_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12993_012_11SKU_20201020T212919_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_12993_013_11SKU_20201020T213011_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13054_009_11SKU_20201024T195506_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13054_010_11SKU_20201024T195558_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13115_010_11SKU_20201028T182051_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13115_011_11SKU_20201028T182143_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13176_003_11SKU_20201101T164629_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13176_004_11SKU_20201101T164721_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13629_001_11SKU_20201130T214441_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13751_001_11SKU_20201208T183734_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13908_007_11SKU_20201218T220331_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13954_012_11SKU_20201221T211655_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_13969_013_11SKU_20201222T202946_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14015_008_11SKU_20201225T194306_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14076_009_11SKU_20201229T180922_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14091_012_11SKU_20201230T172204_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14666_003_11SKU_20210205T191410_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14808_002_11SKU_20210214T232930_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14823_011_11SKU_20210215T224228_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14884_010_11SKU_20210219T210931_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_14945_012_11SKU_20210223T193640_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15006_003_11SKU_20210227T180338_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15460_003_11SKU_20210328T230652_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15521_003_11SKU_20210401T213401_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15644_003_11SKU_20210409T182905_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15705_003_11SKU_20210413T165635_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15740_006_11SKU_20210415T232949_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15740_007_11SKU_20210415T233041_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15766_003_11SKU_20210417T152402_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15801_011_11SKU_20210419T215715_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15801_012_11SKU_20210419T215807_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15862_013_11SKU_20210423T202526_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15923_012_11SKU_20210427T185153_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15923_013_11SKU_20210427T185245_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_15984_013_11SKU_20210501T171952_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16045_012_11SKU_20210505T154652_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16332_001_11SKU_20210524T004111_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16378_004_11SKU_20210526T235552_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16393_004_11SKU_20210527T230830_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16439_002_11SKU_20210530T222305_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16454_004_11SKU_20210531T213545_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16501_003_11SKU_20210603T205023_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16516_003_11SKU_20210604T200301_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16562_004_11SKU_20210607T191736_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16577_004_11SKU_20210608T183014_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16623_005_11SKU_20210611T174439_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16638_005_11SKU_20210612T165722_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16658_016_11SKU_20210614T001803_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16700_001_11SKU_20210616T152428_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16735_011_11SKU_20210618T215733_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16781_013_11SKU_20210621T211207_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16796_003_11SKU_20210622T202434_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16842_007_11SKU_20210625T193923_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16842_008_11SKU_20210625T194015_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16857_009_11SKU_20210626T185220_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16903_015_11SKU_20210629T180745_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16918_011_11SKU_20210630T172039_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_16979_014_11SKU_20210704T154838_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17025_013_11SKU_20210707T150321_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17025_014_11SKU_20210707T150413_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17310_003_11SKU_20210726T000059_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17371_001_11SKU_20210729T222824_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17432_001_11SKU_20210802T205549_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17432_002_11SKU_20210802T205641_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17494_001_11SKU_20210806T192326_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17509_003_11SKU_20210807T183603_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17556_004_11SKU_20210810T175101_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17591_016_11SKU_20210813T002529_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17632_001_11SKU_20210815T153100_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17652_003_11SKU_20210816T225242_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17775_014_11SKU_20210824T194846_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17898_014_11SKU_20210901T164550_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_17913_013_11SKU_20210902T155853_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18305_005_11SKU_20210927T224557_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18366_005_11SKU_20211001T211315_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18366_006_11SKU_20211001T211407_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18427_004_11SKU_20211005T194033_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18427_005_11SKU_20211005T194125_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18488_005_11SKU_20211009T180754_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18488_006_11SKU_20211009T180845_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18503_003_11SKU_20211010T172028_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18550_001_11SKU_20211013T163533_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18565_003_11SKU_20211014T154818_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18585_014_11SKU_20211015T231014_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18646_015_11SKU_20211019T213747_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18646_016_11SKU_20211019T213839_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18707_010_11SKU_20211023T200631_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18769_011_11SKU_20211027T183419_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18830_002_11SKU_20211031T170113_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_18830_003_11SKU_20211031T170205_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20198_003_11SKU_20220127T223431_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20213_001_11SKU_20220128T214621_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20320_003_11SKU_20220204T192301_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20381_004_11SKU_20220208T174724_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20477_011_11SKU_20220214T224401_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20523_015_11SKU_20220217T215556_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20538_012_11SKU_20220218T210748_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20645_006_11SKU_20220225T184305_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20660_003_11SKU_20220226T175457_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_20706_011_11SKU_20220301T170805_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21160_005_11SKU_20220330T215540_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21221_001_11SKU_20220403T201950_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21282_003_11SKU_20220407T184316_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21282_004_11SKU_20220407T184408_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21343_001_11SKU_20220411T170644_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21363_015_11SKU_20220413T002642_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21404_001_11SKU_20220415T153001_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21424_011_11SKU_20220416T224957_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21546_014_11SKU_20220424T193522_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21546_015_11SKU_20220424T193614_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21669_011_11SKU_20220502T162327_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21714_014_11SKU_20220505T153518_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21714_015_11SKU_20220505T153610_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21729_012_11SKU_20220506T144724_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_21985_003_11SKU_20220523T010400_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22000_002_11SKU_20220524T001551_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22107_003_11SKU_20220530T215229_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22122_003_11SKU_20220531T210411_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22168_005_11SKU_20220603T201624_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22265_013_11SKU_20220610T011128_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22265_014_11SKU_20220610T011220_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22291_001_11SKU_20220611T170328_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22291_002_11SKU_20220611T170419_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22352_001_11SKU_20220615T152649_0700_01.zip\nreading L3T JET file: ../data/Carpinteria ECOSTRESS Collection 2/ECOv002_L3T_JET_22387_011_11SKU_20220617T215819_0700_01.zip\n\n\n\n\n\n\n  \n    \n      \n      datetime_solar\n      type\n      ET\n    \n  \n  \n    \n      0\n      2020-01-29 14:49:10.533312\n      channel\n      1.399643\n    \n    \n      1\n      2020-01-29 14:49:10.533312\n      salt flat\n      1.397873\n    \n    \n      2\n      2020-01-29 14:49:10.533312\n      upland\n      0.916689\n    \n    \n      3\n      2020-01-29 14:49:10.533312\n      pan\n      0.717082\n    \n    \n      4\n      2020-01-29 14:49:10.533312\n      marsh\n      1.398733\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      0\n      2022-06-15 07:28:06.533312\n      channel\n      0.250191\n    \n    \n      1\n      2022-06-15 07:28:06.533312\n      salt flat\n      0.239784\n    \n    \n      2\n      2022-06-15 07:28:06.533312\n      upland\n      0.184796\n    \n    \n      3\n      2022-06-15 07:28:06.533312\n      pan\n      0.264177\n    \n    \n      4\n      2022-06-15 07:28:06.533312\n      marsh\n      0.293362\n    \n  \n\n351 rows × 3 columns\n\n\n\nNow let’s produce seaborn box-plots again to visualize the distribution of ECOSTRESS evapotranspiration. The non-vegetated upland and salt flat areas tend to be the driest, while the channel and marsh areas tend to be the wettest.\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    salt_marsh_ET_overall_median = salt_marsh_ET.groupby(\"type\").median().reset_index()[[\"type\", \"ET\"]].sort_values(\"ET\")\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\n\nsns.boxplot(\n    data=salt_marsh_ET,\n    x=\"type\",\n    y=\"ET\",\n    order=salt_marsh_ET_overall_median.type,\n    palette=landcover_colors,\n    ax=ax\n)\n\nax.set(xlabel=\"Land Cover Type\", ylabel=\"Median Daily Evapotranspiration (mm)\")\nyticks = np.arange(np.round(np.nanmin(salt_marsh_ET.ET)), np.round(np.nanmax(salt_marsh_ET.ET)) + 0.2, 0.1)\nax.set_yticks(yticks)\nyticklabels = [f\"{tick:.1f} mm\" for tick in yticks]\nax.set_yticklabels(yticklabels)\nplt.title(\"Carpinteria Salt Marsh Median ECOSTRESS Daily Evapotranspiration Boxplots by Land Cover\")\nplt.show()\nplt.close(fig)\nprint(salt_marsh_ET_overall_median)\n\n\n\n\n        type        ET\n4     upland  0.711236\n3  salt flat  0.788825\n2        pan  0.815282\n0    channel  0.868172\n1      marsh  0.901812\n\n\nLet’s create another seasonal aggregate, now for ECOSTRESS evapotranspiration.\n\nsalt_marsh_ET_seasonal = salt_marsh_ET.copy()\nsalt_marsh_ET_seasonal[\"season\"] = salt_marsh_ET_seasonal.apply(\n    lambda row: date(int(row.datetime_solar.year), int(((row.datetime_solar.month - 1) // 3) * 3 + 1), 1), axis=1)\nsalt_marsh_ET_seasonal = salt_marsh_ET_seasonal[[\"season\", \"type\", \"ET\"]]\nsalt_marsh_ET_seasonal = salt_marsh_ET_seasonal.dropna().groupby(\n    by=[\"season\", \"type\"]).median().reset_index()\nsalt_marsh_ET_seasonal\n\n\n\n\n\n  \n    \n      \n      season\n      type\n      ET\n    \n  \n  \n    \n      0\n      2020-01-01\n      channel\n      1.227225\n    \n    \n      1\n      2020-01-01\n      marsh\n      1.286527\n    \n    \n      2\n      2020-01-01\n      pan\n      0.921168\n    \n    \n      3\n      2020-01-01\n      salt flat\n      1.149637\n    \n    \n      4\n      2020-01-01\n      upland\n      0.923251\n    \n    \n      5\n      2020-04-01\n      channel\n      0.759676\n    \n    \n      6\n      2020-04-01\n      marsh\n      0.770015\n    \n    \n      7\n      2020-04-01\n      pan\n      0.800767\n    \n    \n      8\n      2020-04-01\n      salt flat\n      0.857468\n    \n    \n      9\n      2020-04-01\n      upland\n      0.865953\n    \n    \n      10\n      2020-07-01\n      channel\n      0.128590\n    \n    \n      11\n      2020-07-01\n      marsh\n      0.453294\n    \n    \n      12\n      2020-07-01\n      pan\n      0.113739\n    \n    \n      13\n      2020-07-01\n      salt flat\n      0.583058\n    \n    \n      14\n      2020-07-01\n      upland\n      0.591018\n    \n    \n      15\n      2020-10-01\n      channel\n      1.223136\n    \n    \n      16\n      2020-10-01\n      marsh\n      1.302847\n    \n    \n      17\n      2020-10-01\n      pan\n      1.272168\n    \n    \n      18\n      2020-10-01\n      salt flat\n      0.976382\n    \n    \n      19\n      2020-10-01\n      upland\n      0.875343\n    \n    \n      20\n      2021-01-01\n      channel\n      0.756897\n    \n    \n      21\n      2021-01-01\n      marsh\n      0.806194\n    \n    \n      22\n      2021-01-01\n      pan\n      0.758436\n    \n    \n      23\n      2021-01-01\n      salt flat\n      0.654631\n    \n    \n      24\n      2021-01-01\n      upland\n      0.601155\n    \n    \n      25\n      2021-04-01\n      channel\n      0.814166\n    \n    \n      26\n      2021-04-01\n      marsh\n      0.840614\n    \n    \n      27\n      2021-04-01\n      pan\n      0.759423\n    \n    \n      28\n      2021-04-01\n      salt flat\n      0.466992\n    \n    \n      29\n      2021-04-01\n      upland\n      0.440456\n    \n    \n      30\n      2021-07-01\n      channel\n      0.572832\n    \n    \n      31\n      2021-07-01\n      marsh\n      0.505778\n    \n    \n      32\n      2021-07-01\n      pan\n      0.657233\n    \n    \n      33\n      2021-07-01\n      salt flat\n      0.477120\n    \n    \n      34\n      2021-07-01\n      upland\n      0.409149\n    \n    \n      35\n      2021-10-01\n      channel\n      0.918620\n    \n    \n      36\n      2021-10-01\n      marsh\n      0.953667\n    \n    \n      37\n      2021-10-01\n      pan\n      0.898891\n    \n    \n      38\n      2021-10-01\n      salt flat\n      0.792005\n    \n    \n      39\n      2021-10-01\n      upland\n      0.750178\n    \n    \n      40\n      2022-01-01\n      channel\n      1.051454\n    \n    \n      41\n      2022-01-01\n      marsh\n      1.089001\n    \n    \n      42\n      2022-01-01\n      pan\n      1.109546\n    \n    \n      43\n      2022-01-01\n      salt flat\n      1.048244\n    \n    \n      44\n      2022-01-01\n      upland\n      1.011036\n    \n    \n      45\n      2022-04-01\n      channel\n      0.524753\n    \n    \n      46\n      2022-04-01\n      marsh\n      0.558062\n    \n    \n      47\n      2022-04-01\n      pan\n      0.565946\n    \n    \n      48\n      2022-04-01\n      salt flat\n      0.332552\n    \n    \n      49\n      2022-04-01\n      upland\n      0.323609\n    \n  \n\n\n\n\nWe’re using a seaborn line-plot again to visualize the seasonal aggregate of ECOSTRESS evapotranspiration by land-cover type. The channel and pan areas become dry in the heat of the Summer but then become wet again in the Autumn.\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\n\nsns.lineplot(\n    data=salt_marsh_ET_seasonal,\n    x=\"season\",\n    y=\"ET\",\n    hue=\"type\",\n    ax=ax\n)\n\nax.set(xlabel=\"Season\", ylabel=\"Seasonal Median Daily Evapotranspiration (mm)\")\nyticks = np.arange(np.round(np.nanmin(salt_marsh_ET_seasonal.ET), 1), np.round(np.nanmax(salt_marsh_ET_seasonal.ET), 1) + 0.1, 0.1)\nax.set_yticks(yticks)\nyticklabels = [f\"{tick:.1f} mm\" for tick in yticks]\nax.set_yticklabels(yticklabels)\nplt.legend(title=\"Marsh Land Type\")\nplt.title(\"Carpinteria Salt Marsh Seasonal Median ECOSTRESS Evapotranspiration Timeline by Land Cover\")\nplt.show()\nplt.close(fig)\n\n\n\n\n\n\n\nNow let’s compare the seasonal time-series of surface temperature and evapotranspiration. First we’re merging the surface temperature and evapotranspiration tables we’re produced into a single table using pandas.\n\nsalt_marsh_seasonal = pd.merge(salt_marsh_ST_seasonal, salt_marsh_ET_seasonal, how=\"inner\").dropna().groupby([\"season\", \"type\"]).median().reset_index()\nsalt_marsh_seasonal\n\n\n\n\n\n  \n    \n      \n      season\n      type\n      ST\n      ET\n    \n  \n  \n    \n      0\n      2020-01-01\n      channel\n      14.730011\n      1.227225\n    \n    \n      1\n      2020-01-01\n      marsh\n      15.350006\n      1.286527\n    \n    \n      2\n      2020-01-01\n      pan\n      16.570007\n      0.921168\n    \n    \n      3\n      2020-01-01\n      salt flat\n      15.250015\n      1.149637\n    \n    \n      4\n      2020-01-01\n      upland\n      15.300003\n      0.923251\n    \n    \n      5\n      2020-04-01\n      channel\n      24.750000\n      0.759676\n    \n    \n      6\n      2020-04-01\n      marsh\n      25.100006\n      0.770015\n    \n    \n      7\n      2020-04-01\n      pan\n      25.450012\n      0.800767\n    \n    \n      8\n      2020-04-01\n      salt flat\n      26.130005\n      0.857468\n    \n    \n      9\n      2020-04-01\n      upland\n      26.010010\n      0.865953\n    \n    \n      10\n      2020-07-01\n      channel\n      23.160004\n      0.128590\n    \n    \n      11\n      2020-07-01\n      marsh\n      23.330017\n      0.453294\n    \n    \n      12\n      2020-07-01\n      pan\n      24.209991\n      0.113739\n    \n    \n      13\n      2020-07-01\n      salt flat\n      23.339996\n      0.583058\n    \n    \n      14\n      2020-07-01\n      upland\n      25.669998\n      0.591018\n    \n    \n      15\n      2020-10-01\n      channel\n      19.830002\n      1.223136\n    \n    \n      16\n      2020-10-01\n      marsh\n      20.300003\n      1.302847\n    \n    \n      17\n      2020-10-01\n      pan\n      20.270004\n      1.272168\n    \n    \n      18\n      2020-10-01\n      salt flat\n      22.360016\n      0.976382\n    \n    \n      19\n      2020-10-01\n      upland\n      21.650009\n      0.875343\n    \n    \n      20\n      2021-01-01\n      channel\n      18.620010\n      0.756897\n    \n    \n      21\n      2021-01-01\n      marsh\n      19.045013\n      0.806194\n    \n    \n      22\n      2021-01-01\n      pan\n      19.559998\n      0.758436\n    \n    \n      23\n      2021-01-01\n      salt flat\n      21.250000\n      0.654631\n    \n    \n      24\n      2021-01-01\n      upland\n      21.685013\n      0.601155\n    \n    \n      25\n      2021-04-01\n      channel\n      24.375015\n      0.814166\n    \n    \n      26\n      2021-04-01\n      marsh\n      25.435005\n      0.840614\n    \n    \n      27\n      2021-04-01\n      pan\n      25.030014\n      0.759423\n    \n    \n      28\n      2021-04-01\n      salt flat\n      27.480011\n      0.466992\n    \n    \n      29\n      2021-04-01\n      upland\n      28.165009\n      0.440456\n    \n    \n      30\n      2021-07-01\n      channel\n      25.750015\n      0.572832\n    \n    \n      31\n      2021-07-01\n      marsh\n      25.550018\n      0.505778\n    \n    \n      32\n      2021-07-01\n      pan\n      26.090012\n      0.657233\n    \n    \n      33\n      2021-07-01\n      salt flat\n      25.149994\n      0.477120\n    \n    \n      34\n      2021-07-01\n      upland\n      25.119995\n      0.409149\n    \n    \n      35\n      2021-10-01\n      channel\n      18.139999\n      0.918620\n    \n    \n      36\n      2021-10-01\n      marsh\n      18.310013\n      0.953667\n    \n    \n      37\n      2021-10-01\n      pan\n      19.529999\n      0.898891\n    \n    \n      38\n      2021-10-01\n      salt flat\n      20.750015\n      0.792005\n    \n    \n      39\n      2021-10-01\n      upland\n      18.520004\n      0.750178\n    \n    \n      40\n      2022-01-01\n      channel\n      18.635002\n      1.051454\n    \n    \n      41\n      2022-01-01\n      marsh\n      18.639999\n      1.089001\n    \n    \n      42\n      2022-01-01\n      pan\n      17.950012\n      1.109546\n    \n    \n      43\n      2022-01-01\n      salt flat\n      19.340012\n      1.048244\n    \n    \n      44\n      2022-01-01\n      upland\n      20.160004\n      1.011036\n    \n    \n      45\n      2022-04-01\n      channel\n      18.450012\n      0.524753\n    \n    \n      46\n      2022-04-01\n      marsh\n      18.400009\n      0.558062\n    \n    \n      47\n      2022-04-01\n      pan\n      18.929993\n      0.565946\n    \n    \n      48\n      2022-04-01\n      salt flat\n      19.010010\n      0.332552\n    \n    \n      49\n      2022-04-01\n      upland\n      18.835014\n      0.323609\n    \n  \n\n\n\n\nLet’s compare the seasonal timelines of ECOSTRESS surface temperature and evapotranspiration with one last seaborn line-plot. We’re plotting these lines together with a shared x axis for the season and separate y axes to compare temperature in Celsius to evapotranspiration in millimeters per day. We see a consistent and complementary seasonal cycle between these two variables, with cool temperatures and high evapotranspiration in the Winter and warm temperatures and low evapotranspiration in the Summer.\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\nax.set(xlabel=\"Season\", ylabel=\"Seasonal Median Surface Temperature (Celsius)\")\nax.grid(True)\nyticks = np.arange(np.round(np.nanmin(salt_marsh_seasonal.ST)), np.round(np.nanmax(salt_marsh_seasonal.ST)))\nax.set_yticks(yticks)\nax.set_yticklabels([f\"{int(tick)} °C\" for tick in yticks])\n\nsns.lineplot(\n    data=salt_marsh_seasonal,\n    x=\"season\",\n    y=\"ST\",\n    color=\"red\",\n    ax=ax,\n    label=\"Surface Temperature\"\n)\n\nplt.legend(loc=\"upper left\")\nax2 = ax.twinx()\nax2.set(ylabel=\"Seasonal Median Daily Evapotranspiration (mm)\")\nax2.grid(False)\nyticks = np.arange(np.round(np.nanmin(salt_marsh_seasonal.ET), 1), np.round(np.nanmax(salt_marsh_seasonal.ET), 1), 0.1)\nax2.set_yticks(yticks)\nax2.set_yticklabels([f\"{tick:0.1f} mm\" for tick in yticks])\n\nsns.lineplot(\n    data=salt_marsh_seasonal,\n    x=\"season\",\n    y=\"ET\",\n    color=\"blue\",\n    ax=ax2,\n    label=\"Evapotranspiration\"\n)\n\nplt.legend(loc=\"upper right\")\nplt.title(\"Carpinteria Salt Marsh Seasonal Median ECOSTRESS Surface Temperature & Evapotranspiration Timeline\")\nplt.show()\nplt.close(fig)\n\n\n\n\nFinally, let’s visualize this inverse relationship between surface temperature and evapotranspiration with a scatter-plot, again using seaborn. The surface temperature is the x-axis and the evapotranspiration is the y-axis. In this scatter of points, we see a roughly linear relationship from cool and wet points in the upper left to warm and dry points in the lower right. We’re using regplot to plot this trend-line.\n\nfig, ax = plt.subplots(figsize=(FIG_WIDTH_IN, FIG_HEIGHT_IN))\nxticks = np.arange(np.round(np.nanmin(salt_marsh_seasonal.ST)), np.round(np.nanmax(salt_marsh_seasonal.ST)) + 1)\nax.set_xticks(xticks)\nax.set_xticklabels([f\"{int(tick)} °C\" for tick in xticks])\nyticks = np.arange(np.round(np.nanmin(salt_marsh_seasonal.ET), 1), np.round(np.nanmax(salt_marsh_seasonal.ET), 1) + 0.1, 0.1)\nax.set_yticks(yticks)\nax.set_yticklabels([f\"{tick:0.1f} mm\" for tick in yticks])\n\nsns.scatterplot(\n    data=salt_marsh_seasonal,\n    x=\"ST\",\n    y=\"ET\",\n    hue=\"type\",\n    palette=landcover_colors,\n    edgecolor=\"black\",\n    linewidth=1,\n    ax=ax\n)\n\nsns.regplot(\n    data=salt_marsh_seasonal,\n    x=\"ST\",\n    y=\"ET\",\n    scatter=False,\n    color=\"gray\",\n    ax=ax\n)\n\nax.set(xlabel=\"Seasonal Median Surface Temperature (Celsius)\", ylabel=\"Seasonal Median Daily Evapotranspiration (mm)\")\nplt.legend(title=\"Marsh Land Type\")\nplt.title(\"Carpinteria Salt Marsh Seasonal Surface Temperature and Evapotranspiration Scatterplot\")\nplt.show()\nplt.close(fig)\n\n\n\n\nTo quantify this inverse relationship, first we’ll calculate the correlation between these two variables using numpy. We see a strong inverse relationship between seasonally aggregated ECOSTRESS surface temperature and evapotranspiration in the Carpinteria Salt Marsh with a correlation coefficient of -0.49.\n\nnp.round(np.corrcoef(x=salt_marsh_seasonal.ST, y=salt_marsh_seasonal.ET)[0][1], 2)\n\n-0.49"
  }
]